{"id":"614d702ac6a47e3d0d8496a44de76a32","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n */\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   */\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   */\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   */\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   */\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   */\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   */\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   */\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   */\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   */\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   */\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   */\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   * @return The backed amount\n   */\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   */\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   */\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   */\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   */\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   */\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   */\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   */\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   */\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   */\n  function getUserAccountData(\n    address user\n  )\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   */\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   */\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   */\n  function setReserveInterestRateStrategyAddress(\n    address asset,\n    address rateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   */\n  function setConfiguration(\n    address asset,\n    DataTypes.ReserveConfigurationMap calldata configuration\n  ) external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   */\n  function getConfiguration(\n    address asset\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   */\n  function getUserConfiguration(\n    address user\n  ) external view returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\n   * combination with variable debt supply/balances.\n   * If using this function externally, consider that is possible to have an increasing normalized\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\n   * (e.g. only updates with non-zero variable debt supply)\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   */\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the underlying assets of all the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the underlying assets of the initialized reserves\n   */\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n   * @return The address of the reserve associated with id\n   */\n  function getReserveAddressById(uint16 id) external view returns (address);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   */\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(address token, address to, uint256 amount) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n}\n"},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n */\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   */\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   */\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   */\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   */\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   */\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   */\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   */\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   */\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62: siloed borrowing enabled\n    //bit 63: flashloaning enabled\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/FlashLoanArbitrageur.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ISwapRouter} from \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport {IUniswapV3Pool} from \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IPool} from \"@aave/core-v3/contracts/interfaces/IPool.sol\";\nimport {IPoolAddressesProvider} from \"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\";\nusing Strings for uint256;\n\ninterface IUniswapV3FlashCallback {\n    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata data) external;\n}\n\ncontract FlashLoanArbitrageur is IUniswapV3FlashCallback {\n    struct ArbitrageParams {\n        address token0;\n        address token1;\n        address tokenMid;\n        uint24 fee1;\n        uint24 fee2;\n        uint256 minProfit;\n        uint8 direction; // 0: token0->tokenMid->token1, 1: token1->tokenMid->token0\n        address uniswapRouter;\n        address sushiswapRouter;\n        address initiator;\n    }\n\n    address public owner;\n    event ArbitrageExecuted(address indexed initiator, address asset, uint256 profit);\n    event Debug(string message);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function startUniswapV3Flash(\n        address pool,\n        uint256 amount0,\n        uint256 amount1,\n        address tokenMid,\n        uint24 fee1,\n        uint24 fee2,\n        uint256 minProfit,\n        uint8 direction,\n        address uniswapRouter,\n        address sushiswapRouter\n    ) external onlyOwner {\n        ArbitrageParams memory arb = ArbitrageParams({\n            token0: IUniswapV3Pool(pool).token0(),\n            token1: IUniswapV3Pool(pool).token1(),\n            tokenMid: tokenMid,\n            fee1: fee1,\n            fee2: fee2,\n            minProfit: minProfit,\n            direction: direction,\n            uniswapRouter: uniswapRouter,\n            sushiswapRouter: sushiswapRouter,\n            initiator: msg.sender\n        });\n        bytes memory data = abi.encode(arb);\n        IUniswapV3Pool(pool).flash(address(this), amount0, amount1, data);\n    }\n\n    // Callback Uniswap V3 flash loan\n    function uniswapV3FlashCallback(\n        uint256 fee0,\n        uint256 fee1,\n        bytes calldata data\n    ) external override {\n        emit Debug(\"Start uniswapV3FlashCallback\");\n        ArbitrageParams memory arb = abi.decode(data, (ArbitrageParams));\n        address pool = msg.sender;\n        \n        // Vérifier que l'appel vient bien d'une pool Uniswap V3 valide\n        try IUniswapV3Pool(pool).token0() returns (address poolToken0) {\n            require(poolToken0 == arb.token0, \"Invalid pool token0\");\n        } catch {\n            revert(\"Invalid pool address\");\n        }\n        \n        // On récupère les soldes avant arbitrage\n        uint256 bal0Before = IERC20(arb.token0).balanceOf(address(this));\n        uint256 bal1Before = IERC20(arb.token1).balanceOf(address(this));\n\n        // On déduit ce qu'on a reçu (flash loan)\n        uint256 flashAmount = bal0Before > 0 ? bal0Before : bal1Before;\n        require(flashAmount > 0, \"No flash loan received\");\n        \n        emit Debug(string.concat(\"Received flash amount: \", flashAmount.toString()));\n        emit Debug(string.concat(\"Token0: \", getSymbol(arb.token0), \" Token1: \", getSymbol(arb.token1)));\n        emit Debug(string.concat(\"Direction: \", arb.direction == 0 ? \"Token0->TokenMid->Token1\" : \"Token1->TokenMid->Token0\"));\n\n        // Arbitrage principal\n        uint256 amountMid;\n        uint256 amountBack;\n        if (arb.direction == 0) {\n            // token0 -> tokenMid -> token1\n            amountMid = _swap(ISwapRouter(arb.uniswapRouter), arb.token0, arb.tokenMid, arb.fee1, flashAmount);\n            amountBack = _swap(ISwapRouter(arb.sushiswapRouter), arb.tokenMid, arb.token1, arb.fee2, amountMid);\n        } else {\n            // token1 -> tokenMid -> token0\n            amountMid = _swap(ISwapRouter(arb.uniswapRouter), arb.token1, arb.tokenMid, arb.fee1, flashAmount);\n            amountBack = _swap(ISwapRouter(arb.sushiswapRouter), arb.tokenMid, arb.token0, arb.fee2, amountMid);\n        }\n\n        // Remboursement du principal + frais\n        uint256 totalOwed0 = fee0 + (bal0Before > 0 ? bal0Before : 0);\n        uint256 totalOwed1 = fee1 + (bal1Before > 0 ? bal1Before : 0);\n        if (totalOwed0 > 0) {\n            IERC20(arb.token0).transfer(pool, totalOwed0);\n        }\n        if (totalOwed1 > 0) {\n            IERC20(arb.token1).transfer(pool, totalOwed1);\n        }\n\n        // Calcul du profit sur le token principal (token1 si direction 0, token0 sinon)\n        uint256 profit = (arb.direction == 0)\n            ? IERC20(arb.token1).balanceOf(address(this)) - bal1Before - fee1\n            : IERC20(arb.token0).balanceOf(address(this)) - bal0Before - fee0;\n        require(profit >= arb.minProfit, \"Not enough profit\");\n        emit ArbitrageExecuted(arb.initiator, arb.direction == 0 ? arb.token1 : arb.token0, profit);\n        emit Debug(\"Arbitrage finished successfully\");\n    }\n\n    function _swap(\n        ISwapRouter router,\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn\n    ) internal returns (uint256) {\n        // Vérifier que le montant est supérieur à zéro\n        require(amountIn > 0, \"Amount must be greater than 0\");\n        \n        // Vérifier que le contrat a bien reçu les tokens\n        uint256 balanceBefore = IERC20(tokenIn).balanceOf(address(this));\n        require(balanceBefore >= amountIn, \"Insufficient token balance for swap\");\n        \n        // Approuver le router à dépenser les tokens\n        IERC20(tokenIn).approve(address(router), amountIn);\n        \n        // Calculer le montant minimum de sortie (0.5% de slippage pour les tests)\n        uint256 amountOutMinimum = (amountIn * 995) / 1000; // 0.5% de slippage max\n        \n        emit Debug(string.concat(\"Swap attempt: \", Strings.toString(amountIn), \" \", getSymbol(tokenIn), \" -> \", getSymbol(tokenOut), \" (fee: \", Strings.toString(fee), \")\"));\n        \n        try router.exactInputSingle{\n            gas: 500000 // Limite de gaz pour éviter les échecs\n        }(\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: address(this),\n                deadline: block.timestamp + 15 minutes, // 15 minutes de délai\n                amountIn: amountIn,\n                amountOutMinimum: 0, // On désactive temporairement pour les tests\n                sqrtPriceLimitX96: 0\n            })\n        ) returns (uint256 amountOut) {\n            require(amountOut > 0, \"Received zero output amount\");\n            emit Debug(string.concat(\"Swap successful. Out: \", Strings.toString(amountOut), \" \", getSymbol(tokenOut)));\n            return amountOut;\n        } catch Error(string memory reason) {\n            // Ce bloc capture les erreurs avec revert(\"message\")\n            emit Debug(string.concat(\"Swap failed: \", reason));\n            revert(string(abi.encodePacked(\"Swap failed: \", reason)));\n        } catch (bytes memory) {\n            // Ce bloc capture les autres erreurs (panique, etc.)\n            emit Debug(\"Swap failed with unknown error\");\n            revert(\"Swap failed with unknown error\");\n        }\n    }\n    \n    // Fonction utilitaire pour obtenir le symbole d'un token\n    function getSymbol(address token) internal view returns (string memory) {\n        (bool success, bytes memory data) = token.staticcall(abi.encodeWithSignature(\"symbol()\"));\n        if (success && data.length > 0) {\n            return abi.decode(data, (string));\n        }\n        return \"UNKNOWN\";\n    }\n\n    function withdraw(address token) external onlyOwner {\n        uint256 bal = IERC20(token).balanceOf(address(this));\n        require(bal > 0, \"Nothing to withdraw\");\n        IERC20(token).transfer(owner, bal);\n    }\n}\n\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/FlashLoanArbitrageur.sol:150:9:\n    |\n150 |         uint256 amountOutMinimum = (amountIn * 995) / 1000; // 0.5% de slippage max\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":6022,"file":"contracts/FlashLoanArbitrageur.sol","start":5998},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","exportedSymbols":{"DataTypes":[1199],"IPool":[638],"IPoolAddressesProvider":[847]},"id":639,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:0"},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":848,"src":"62:68:0","symbolAliases":[{"foreign":{"id":2,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"70:22:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":1200,"src":"131:68:0","symbolAliases":[{"foreign":{"id":4,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"139:9:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"201:96:0","text":" @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."},"fullyImplemented":false,"id":638,"linearizedBaseContracts":[638],"name":"IPool","nameLocation":"308:5:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"318:349:0","text":" @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"},"eventSelector":"f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0","id":19,"name":"MintUnbacked","nameLocation":"676:12:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"710:7:0","nodeType":"VariableDeclaration","scope":19,"src":"694:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"731:4:0","nodeType":"VariableDeclaration","scope":19,"src":"723:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"757:10:0","nodeType":"VariableDeclaration","scope":19,"src":"741:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"741:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"781:6:0","nodeType":"VariableDeclaration","scope":19,"src":"773:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"808:12:0","nodeType":"VariableDeclaration","scope":19,"src":"793:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":16,"name":"uint16","nodeType":"ElementaryTypeName","src":"793:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"688:136:0"},"src":"670:155:0"},{"anonymous":false,"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"829:257:0","text":" @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"},"eventSelector":"281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759","id":30,"name":"BackUnbacked","nameLocation":"1095:12:0","nodeType":"EventDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1124:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1108:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"indexed":true,"mutability":"mutable","name":"backer","nameLocation":"1149:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1133:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1165:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1157:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1181:3:0","nodeType":"VariableDeclaration","scope":30,"src":"1173:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1107:78:0"},"src":"1089:97:0"},{"anonymous":false,"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1190:324:0","text":" @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"},"eventSelector":"2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61","id":43,"name":"Supply","nameLocation":"1523:6:0","nodeType":"EventDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1551:7:0","nodeType":"VariableDeclaration","scope":43,"src":"1535:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1572:4:0","nodeType":"VariableDeclaration","scope":43,"src":"1564:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1598:10:0","nodeType":"VariableDeclaration","scope":43,"src":"1582:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1622:6:0","nodeType":"VariableDeclaration","scope":43,"src":"1614:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"1649:12:0","nodeType":"VariableDeclaration","scope":43,"src":"1634:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":40,"name":"uint16","nodeType":"ElementaryTypeName","src":"1634:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1529:136:0"},"src":"1517:149:0"},{"anonymous":false,"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1670:292:0","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"},"eventSelector":"3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7","id":54,"name":"Withdraw","nameLocation":"1971:8:0","nodeType":"EventDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1996:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1980:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2021:4:0","nodeType":"VariableDeclaration","scope":54,"src":"2005:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2043:2:0","nodeType":"VariableDeclaration","scope":54,"src":"2027:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2055:6:0","nodeType":"VariableDeclaration","scope":54,"src":"2047:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"2047:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1979:83:0"},"src":"1965:98:0"},{"anonymous":false,"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2067:628:0","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"},"eventSelector":"b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0","id":72,"name":"Borrow","nameLocation":"2704:6:0","nodeType":"EventDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2732:7:0","nodeType":"VariableDeclaration","scope":72,"src":"2716:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2753:4:0","nodeType":"VariableDeclaration","scope":72,"src":"2745:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"2779:10:0","nodeType":"VariableDeclaration","scope":72,"src":"2763:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2803:6:0","nodeType":"VariableDeclaration","scope":72,"src":"2795:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"2795:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"2842:16:0","nodeType":"VariableDeclaration","scope":72,"src":"2815:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":65,"nodeType":"UserDefinedTypeName","pathNode":{"id":64,"name":"DataTypes.InterestRateMode","nameLocations":["2815:9:0","2825:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"2815:26:0"},"referencedDeclaration":903,"src":"2815:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"2872:10:0","nodeType":"VariableDeclaration","scope":72,"src":"2864:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"2903:12:0","nodeType":"VariableDeclaration","scope":72,"src":"2888:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":69,"name":"uint16","nodeType":"ElementaryTypeName","src":"2888:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2710:209:0"},"src":"2698:222:0"},{"anonymous":false,"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"2924:425:0","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"},"eventSelector":"a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051","id":85,"name":"Repay","nameLocation":"3358:5:0","nodeType":"EventDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3385:7:0","nodeType":"VariableDeclaration","scope":85,"src":"3369:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3414:4:0","nodeType":"VariableDeclaration","scope":85,"src":"3398:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"3398:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"3440:7:0","nodeType":"VariableDeclaration","scope":85,"src":"3424:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3461:6:0","nodeType":"VariableDeclaration","scope":85,"src":"3453:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"3453:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":false,"mutability":"mutable","name":"useATokens","nameLocation":"3478:10:0","nodeType":"VariableDeclaration","scope":85,"src":"3473:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":82,"name":"bool","nodeType":"ElementaryTypeName","src":"3473:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3363:129:0"},"src":"3352:141:0"},{"anonymous":false,"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"3497:306:0","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"eventSelector":"7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481","id":95,"name":"SwapBorrowRateMode","nameLocation":"3812:18:0","nodeType":"EventDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3852:7:0","nodeType":"VariableDeclaration","scope":95,"src":"3836:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"3836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3881:4:0","nodeType":"VariableDeclaration","scope":95,"src":"3865:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"3918:16:0","nodeType":"VariableDeclaration","scope":95,"src":"3891:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"DataTypes.InterestRateMode","nameLocations":["3891:9:0","3901:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"3891:26:0"},"referencedDeclaration":903,"src":"3891:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"3830:108:0"},"src":"3806:133:0"},{"anonymous":false,"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"3943:234:0","text":" @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"},"eventSelector":"aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5","id":102,"name":"IsolationModeTotalDebtUpdated","nameLocation":"4186:29:0","nodeType":"EventDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4232:5:0","nodeType":"VariableDeclaration","scope":102,"src":"4216:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"4216:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"totalDebt","nameLocation":"4247:9:0","nodeType":"VariableDeclaration","scope":102,"src":"4239:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"4239:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4215:42:0"},"src":"4180:78:0"},{"anonymous":false,"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"4262:164:0","text":" @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"},"eventSelector":"d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84","id":109,"name":"UserEModeSet","nameLocation":"4435:12:0","nodeType":"EventDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4464:4:0","nodeType":"VariableDeclaration","scope":109,"src":"4448:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"mutability":"mutable","name":"categoryId","nameLocation":"4476:10:0","nodeType":"VariableDeclaration","scope":109,"src":"4470:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":106,"name":"uint8","nodeType":"ElementaryTypeName","src":"4470:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4447:40:0"},"src":"4429:59:0"},{"anonymous":false,"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"4492:207:0","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"eventSelector":"00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2","id":116,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"4708:30:0","nodeType":"EventDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"4755:7:0","nodeType":"VariableDeclaration","scope":116,"src":"4739:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4780:4:0","nodeType":"VariableDeclaration","scope":116,"src":"4764:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"4764:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4738:47:0"},"src":"4702:84:0"},{"anonymous":false,"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"4790:207:0","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"},"eventSelector":"44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd","id":123,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"5006:31:0","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5054:7:0","nodeType":"VariableDeclaration","scope":123,"src":"5038:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"5038:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5079:4:0","nodeType":"VariableDeclaration","scope":123,"src":"5063:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5063:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5037:47:0"},"src":"5000:85:0"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5089:212:0","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"},"eventSelector":"9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300","id":130,"name":"RebalanceStableBorrowRate","nameLocation":"5310:25:0","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5352:7:0","nodeType":"VariableDeclaration","scope":130,"src":"5336:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"5336:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5377:4:0","nodeType":"VariableDeclaration","scope":130,"src":"5361:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"5361:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5335:47:0"},"src":"5304:79:0"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"5387:482:0","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"},"eventSelector":"efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0","id":148,"name":"FlashLoan","nameLocation":"5878:9:0","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"5909:6:0","nodeType":"VariableDeclaration","scope":148,"src":"5893:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"5893:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"5929:9:0","nodeType":"VariableDeclaration","scope":148,"src":"5921:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"5921:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"5960:5:0","nodeType":"VariableDeclaration","scope":148,"src":"5944:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"5944:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5979:6:0","nodeType":"VariableDeclaration","scope":148,"src":"5971:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"6018:16:0","nodeType":"VariableDeclaration","scope":148,"src":"5991:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":141,"nodeType":"UserDefinedTypeName","pathNode":{"id":140,"name":"DataTypes.InterestRateMode","nameLocations":["5991:9:0","6001:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"5991:26:0"},"referencedDeclaration":903,"src":"5991:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"6048:7:0","nodeType":"VariableDeclaration","scope":148,"src":"6040:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"6040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"6076:12:0","nodeType":"VariableDeclaration","scope":148,"src":"6061:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":145,"name":"uint16","nodeType":"ElementaryTypeName","src":"6061:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5887:205:0"},"src":"5872:221:0"},{"anonymous":false,"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"6097:749:0","text":" @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"eventSelector":"e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286","id":165,"name":"LiquidationCall","nameLocation":"6855:15:0","nodeType":"EventDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"6892:15:0","nodeType":"VariableDeclaration","scope":165,"src":"6876:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"6876:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"6929:9:0","nodeType":"VariableDeclaration","scope":165,"src":"6913:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"6913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6960:4:0","nodeType":"VariableDeclaration","scope":165,"src":"6944:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"6944:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"6978:11:0","nodeType":"VariableDeclaration","scope":165,"src":"6970:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"7003:26:0","nodeType":"VariableDeclaration","scope":165,"src":"6995:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"6995:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"7043:10:0","nodeType":"VariableDeclaration","scope":165,"src":"7035:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"7035:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"7064:13:0","nodeType":"VariableDeclaration","scope":165,"src":"7059:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"7059:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6870:211:0"},"src":"6849:233:0"},{"anonymous":false,"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"7086:421:0","text":" @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"},"eventSelector":"804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a","id":180,"name":"ReserveDataUpdated","nameLocation":"7516:18:0","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7556:7:0","nodeType":"VariableDeclaration","scope":180,"src":"7540:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"7540:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"7577:13:0","nodeType":"VariableDeclaration","scope":180,"src":"7569:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"7569:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"7604:16:0","nodeType":"VariableDeclaration","scope":180,"src":"7596:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"7596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"7634:18:0","nodeType":"VariableDeclaration","scope":180,"src":"7626:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"7626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"7666:14:0","nodeType":"VariableDeclaration","scope":180,"src":"7658:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"7658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"7694:19:0","nodeType":"VariableDeclaration","scope":180,"src":"7686:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7534:183:0"},"src":"7510:208:0"},{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"7722:211:0","text":" @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"},"eventSelector":"bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de","id":187,"name":"MintedToTreasury","nameLocation":"7942:16:0","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7975:7:0","nodeType":"VariableDeclaration","scope":187,"src":"7959:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"7959:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"amountMinted","nameLocation":"7992:12:0","nodeType":"VariableDeclaration","scope":187,"src":"7984:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"7984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7958:47:0"},"src":"7936:70:0"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"8010:428:0","text":" @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"69a933a5","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"mintUnbacked","nameLocation":"8450:12:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"asset","nameLocation":"8476:5:0","nodeType":"VariableDeclaration","scope":199,"src":"8468:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"8468:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"amount","nameLocation":"8495:6:0","nodeType":"VariableDeclaration","scope":199,"src":"8487:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"onBehalfOf","nameLocation":"8515:10:0","nodeType":"VariableDeclaration","scope":199,"src":"8507:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"8507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"referralCode","nameLocation":"8538:12:0","nodeType":"VariableDeclaration","scope":199,"src":"8531:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":195,"name":"uint16","nodeType":"ElementaryTypeName","src":"8531:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8462:92:0"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"8563:0:0"},"scope":638,"src":"8441:123:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"8568:259:0","text":" @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"},"functionSelector":"d65dc7a1","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"backUnbacked","nameLocation":"8839:12:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"asset","nameLocation":"8860:5:0","nodeType":"VariableDeclaration","scope":211,"src":"8852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"8852:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"amount","nameLocation":"8875:6:0","nodeType":"VariableDeclaration","scope":211,"src":"8867:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"fee","nameLocation":"8891:3:0","nodeType":"VariableDeclaration","scope":211,"src":"8883:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"8883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8851:44:0"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"8914:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8913:9:0"},"scope":638,"src":"8830:93:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"8927:712:0","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"617ba037","id":223,"implemented":false,"kind":"function","modifiers":[],"name":"supply","nameLocation":"9651:6:0","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"asset","nameLocation":"9666:5:0","nodeType":"VariableDeclaration","scope":223,"src":"9658:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"9658:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"9681:6:0","nodeType":"VariableDeclaration","scope":223,"src":"9673:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"9673:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9697:10:0","nodeType":"VariableDeclaration","scope":223,"src":"9689:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"9689:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"referralCode","nameLocation":"9716:12:0","nodeType":"VariableDeclaration","scope":223,"src":"9709:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":219,"name":"uint16","nodeType":"ElementaryTypeName","src":"9709:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9657:72:0"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"9738:0:0"},"scope":638,"src":"9642:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"9743:962:0","text":" @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"},"functionSelector":"02c205f0","id":243,"implemented":false,"kind":"function","modifiers":[],"name":"supplyWithPermit","nameLocation":"10717:16:0","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"asset","nameLocation":"10747:5:0","nodeType":"VariableDeclaration","scope":243,"src":"10739:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"10739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"amount","nameLocation":"10766:6:0","nodeType":"VariableDeclaration","scope":243,"src":"10758:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"10758:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10786:10:0","nodeType":"VariableDeclaration","scope":243,"src":"10778:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"10778:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"referralCode","nameLocation":"10809:12:0","nodeType":"VariableDeclaration","scope":243,"src":"10802:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":231,"name":"uint16","nodeType":"ElementaryTypeName","src":"10802:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"deadline","nameLocation":"10835:8:0","nodeType":"VariableDeclaration","scope":243,"src":"10827:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"permitV","nameLocation":"10855:7:0","nodeType":"VariableDeclaration","scope":243,"src":"10849:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":235,"name":"uint8","nodeType":"ElementaryTypeName","src":"10849:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"permitR","nameLocation":"10876:7:0","nodeType":"VariableDeclaration","scope":243,"src":"10868:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10868:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"permitS","nameLocation":"10897:7:0","nodeType":"VariableDeclaration","scope":243,"src":"10889:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10733:175:0"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"10917:0:0"},"scope":638,"src":"10708:210:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"10922:671:0","text":" @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"},"functionSelector":"69328dec","id":255,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"11605:8:0","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"asset","nameLocation":"11622:5:0","nodeType":"VariableDeclaration","scope":255,"src":"11614:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"amount","nameLocation":"11637:6:0","nodeType":"VariableDeclaration","scope":255,"src":"11629:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"to","nameLocation":"11653:2:0","nodeType":"VariableDeclaration","scope":255,"src":"11645:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"11645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11613:43:0"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"11675:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11675:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11674:9:0"},"scope":638,"src":"11596:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"11688:1198:0","text":" @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"},"functionSelector":"a415bcad","id":269,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"12898:6:0","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"asset","nameLocation":"12918:5:0","nodeType":"VariableDeclaration","scope":269,"src":"12910:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"12910:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"amount","nameLocation":"12937:6:0","nodeType":"VariableDeclaration","scope":269,"src":"12929:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"12929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"interestRateMode","nameLocation":"12957:16:0","nodeType":"VariableDeclaration","scope":269,"src":"12949:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"12949:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"referralCode","nameLocation":"12986:12:0","nodeType":"VariableDeclaration","scope":269,"src":"12979:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":263,"name":"uint16","nodeType":"ElementaryTypeName","src":"12979:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"onBehalfOf","nameLocation":"13012:10:0","nodeType":"VariableDeclaration","scope":269,"src":"13004:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"13004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12904:122:0"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"13035:0:0"},"scope":638,"src":"12889:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"13040:873:0","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"},"functionSelector":"573ade81","id":283,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"13925:5:0","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"asset","nameLocation":"13944:5:0","nodeType":"VariableDeclaration","scope":283,"src":"13936:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"13936:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"amount","nameLocation":"13963:6:0","nodeType":"VariableDeclaration","scope":283,"src":"13955:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13955:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"interestRateMode","nameLocation":"13983:16:0","nodeType":"VariableDeclaration","scope":283,"src":"13975:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14013:10:0","nodeType":"VariableDeclaration","scope":283,"src":"14005:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"14005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13930:97:0"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":283,"src":"14046:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"14046:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14045:9:0"},"scope":638,"src":"13916:139:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"14059:1085:0","text":" @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"},"functionSelector":"ee3e210b","id":305,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithPermit","nameLocation":"15156:15:0","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"asset","nameLocation":"15185:5:0","nodeType":"VariableDeclaration","scope":305,"src":"15177:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"15177:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"amount","nameLocation":"15204:6:0","nodeType":"VariableDeclaration","scope":305,"src":"15196:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15196:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"interestRateMode","nameLocation":"15224:16:0","nodeType":"VariableDeclaration","scope":305,"src":"15216:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"15216:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"onBehalfOf","nameLocation":"15254:10:0","nodeType":"VariableDeclaration","scope":305,"src":"15246:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"15246:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"deadline","nameLocation":"15278:8:0","nodeType":"VariableDeclaration","scope":305,"src":"15270:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"15270:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"permitV","nameLocation":"15298:7:0","nodeType":"VariableDeclaration","scope":305,"src":"15292:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":295,"name":"uint8","nodeType":"ElementaryTypeName","src":"15292:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"permitR","nameLocation":"15319:7:0","nodeType":"VariableDeclaration","scope":305,"src":"15311:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15311:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"permitS","nameLocation":"15340:7:0","nodeType":"VariableDeclaration","scope":305,"src":"15332:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15171:180:0"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"15370:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"15370:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15369:9:0"},"scope":638,"src":"15147:232:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"15383:779:0","text":" @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"},"functionSelector":"2dad97d4","id":317,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithATokens","nameLocation":"16174:16:0","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"asset","nameLocation":"16204:5:0","nodeType":"VariableDeclaration","scope":317,"src":"16196:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"amount","nameLocation":"16223:6:0","nodeType":"VariableDeclaration","scope":317,"src":"16215:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"16215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"interestRateMode","nameLocation":"16243:16:0","nodeType":"VariableDeclaration","scope":317,"src":"16235:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16190:73:0"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"16282:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"16282:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16281:9:0"},"scope":638,"src":"16165:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"16295:288:0","text":" @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"},"functionSelector":"94ba89a2","id":325,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"16595:18:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"asset","nameLocation":"16622:5:0","nodeType":"VariableDeclaration","scope":325,"src":"16614:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"16614:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"interestRateMode","nameLocation":"16637:16:0","nodeType":"VariableDeclaration","scope":325,"src":"16629:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"16629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16613:41:0"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"16663:0:0"},"scope":638,"src":"16586:78:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"16668:553:0","text":" @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"},"functionSelector":"cd112382","id":333,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"17233:25:0","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"asset","nameLocation":"17267:5:0","nodeType":"VariableDeclaration","scope":333,"src":"17259:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"17259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"user","nameLocation":"17282:4:0","nodeType":"VariableDeclaration","scope":333,"src":"17274:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"17274:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17258:29:0"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"17296:0:0"},"scope":638,"src":"17224:73:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"17301:260:0","text":" @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"},"functionSelector":"5a3b74b9","id":341,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"17573:29:0","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"asset","nameLocation":"17611:5:0","nodeType":"VariableDeclaration","scope":341,"src":"17603:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"17603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"useAsCollateral","nameLocation":"17623:15:0","nodeType":"VariableDeclaration","scope":341,"src":"17618:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":337,"name":"bool","nodeType":"ElementaryTypeName","src":"17618:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17602:37:0"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"17648:0:0"},"scope":638,"src":"17564:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"17653:860:0","text":" @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"},"functionSelector":"00a718a9","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"18525:15:0","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"collateralAsset","nameLocation":"18554:15:0","nodeType":"VariableDeclaration","scope":355,"src":"18546:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"18546:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"debtAsset","nameLocation":"18583:9:0","nodeType":"VariableDeclaration","scope":355,"src":"18575:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"18575:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"user","nameLocation":"18606:4:0","nodeType":"VariableDeclaration","scope":355,"src":"18598:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"18598:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"debtToCover","nameLocation":"18624:11:0","nodeType":"VariableDeclaration","scope":355,"src":"18616:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"18616:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"receiveAToken","nameLocation":"18646:13:0","nodeType":"VariableDeclaration","scope":355,"src":"18641:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":351,"name":"bool","nodeType":"ElementaryTypeName","src":"18641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18540:123:0"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"18672:0:0"},"scope":638,"src":"18516:157:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"18677:1407:0","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"ab9c4b5d","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"20096:9:0","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"receiverAddress","nameLocation":"20119:15:0","nodeType":"VariableDeclaration","scope":376,"src":"20111:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"20111:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"assets","nameLocation":"20159:6:0","nodeType":"VariableDeclaration","scope":376,"src":"20140:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"20140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":360,"nodeType":"ArrayTypeName","src":"20140:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"amounts","nameLocation":"20190:7:0","nodeType":"VariableDeclaration","scope":376,"src":"20171:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"20171:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":363,"nodeType":"ArrayTypeName","src":"20171:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"interestRateModes","nameLocation":"20222:17:0","nodeType":"VariableDeclaration","scope":376,"src":"20203:36:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"20203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":366,"nodeType":"ArrayTypeName","src":"20203:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"onBehalfOf","nameLocation":"20253:10:0","nodeType":"VariableDeclaration","scope":376,"src":"20245:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"20245:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"params","nameLocation":"20284:6:0","nodeType":"VariableDeclaration","scope":376,"src":"20269:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":370,"name":"bytes","nodeType":"ElementaryTypeName","src":"20269:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"referralCode","nameLocation":"20303:12:0","nodeType":"VariableDeclaration","scope":376,"src":"20296:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":372,"name":"uint16","nodeType":"ElementaryTypeName","src":"20296:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"20105:214:0"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"20328:0:0"},"scope":638,"src":"20087:242:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"20333:902:0","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"42b0b77c","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoanSimple","nameLocation":"21247:15:0","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"receiverAddress","nameLocation":"21276:15:0","nodeType":"VariableDeclaration","scope":390,"src":"21268:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"21268:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"asset","nameLocation":"21305:5:0","nodeType":"VariableDeclaration","scope":390,"src":"21297:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"21297:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"amount","nameLocation":"21324:6:0","nodeType":"VariableDeclaration","scope":390,"src":"21316:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"21316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"params","nameLocation":"21351:6:0","nodeType":"VariableDeclaration","scope":390,"src":"21336:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":384,"name":"bytes","nodeType":"ElementaryTypeName","src":"21336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"referralCode","nameLocation":"21370:12:0","nodeType":"VariableDeclaration","scope":390,"src":"21363:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":386,"name":"uint16","nodeType":"ElementaryTypeName","src":"21363:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"21262:124:0"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"21395:0:0"},"scope":638,"src":"21238:158:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"21400:630:0","text":" @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"},"functionSelector":"bf92857c","id":408,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"22042:18:0","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"user","nameLocation":"22074:4:0","nodeType":"VariableDeclaration","scope":408,"src":"22066:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"22066:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22060:22:0"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"22133:19:0","nodeType":"VariableDeclaration","scope":408,"src":"22125:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"22125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"totalDebtBase","nameLocation":"22168:13:0","nodeType":"VariableDeclaration","scope":408,"src":"22160:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"22160:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"22197:20:0","nodeType":"VariableDeclaration","scope":408,"src":"22189:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"22189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"22233:27:0","nodeType":"VariableDeclaration","scope":408,"src":"22225:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"22225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"ltv","nameLocation":"22276:3:0","nodeType":"VariableDeclaration","scope":408,"src":"22268:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"22268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"healthFactor","nameLocation":"22295:12:0","nodeType":"VariableDeclaration","scope":408,"src":"22287:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"22287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22117:196:0"},"scope":638,"src":"22033:281:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"22318:645:0","text":" @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"7a708e92","id":422,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"22975:11:0","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"asset","nameLocation":"23000:5:0","nodeType":"VariableDeclaration","scope":422,"src":"22992:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"22992:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"aTokenAddress","nameLocation":"23019:13:0","nodeType":"VariableDeclaration","scope":422,"src":"23011:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"23011:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"23046:17:0","nodeType":"VariableDeclaration","scope":422,"src":"23038:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"23038:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"23077:19:0","nodeType":"VariableDeclaration","scope":422,"src":"23069:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"23069:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"23110:27:0","nodeType":"VariableDeclaration","scope":422,"src":"23102:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"23102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22986:155:0"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"23150:0:0"},"scope":638,"src":"22966:185:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"23155:163:0","text":" @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"},"functionSelector":"63c9b860","id":428,"implemented":false,"kind":"function","modifiers":[],"name":"dropReserve","nameLocation":"23330:11:0","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"asset","nameLocation":"23350:5:0","nodeType":"VariableDeclaration","scope":428,"src":"23342:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"23342:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23341:15:0"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"23365:0:0"},"scope":638,"src":"23321:45:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"23370:290:0","text":" @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"},"functionSelector":"1d2118f9","id":436,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"23672:37:0","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"asset","nameLocation":"23723:5:0","nodeType":"VariableDeclaration","scope":436,"src":"23715:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"23715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"23742:19:0","nodeType":"VariableDeclaration","scope":436,"src":"23734:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"23734:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23709:56:0"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"23774:0:0"},"scope":638,"src":"23663:112:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"23779:259:0","text":" @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"},"functionSelector":"f51e435b","id":445,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"24050:16:0","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"asset","nameLocation":"24080:5:0","nodeType":"VariableDeclaration","scope":445,"src":"24072:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"24072:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"configuration","nameLocation":"24134:13:0","nodeType":"VariableDeclaration","scope":445,"src":"24091:56:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_calldata_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"DataTypes.ReserveConfigurationMap","nameLocations":["24091:9:0","24101:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"24091:33:0"},"referencedDeclaration":884,"src":"24091:33:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24066:85:0"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"24160:0:0"},"scope":638,"src":"24041:120:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"24165:178:0","text":" @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"},"functionSelector":"c44b11f7","id":454,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"24355:16:0","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"asset","nameLocation":"24385:5:0","nodeType":"VariableDeclaration","scope":454,"src":"24377:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"24377:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24371:23:0"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"24418:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"DataTypes.ReserveConfigurationMap","nameLocations":["24418:9:0","24428:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"24418:33:0"},"referencedDeclaration":884,"src":"24418:33:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24417:42:0"},"scope":638,"src":"24346:114:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"24464:161:0","text":" @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"},"functionSelector":"4417a583","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"24637:20:0","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"user","nameLocation":"24671:4:0","nodeType":"VariableDeclaration","scope":463,"src":"24663:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"24663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24657:22:0"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"24703:37:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":460,"nodeType":"UserDefinedTypeName","pathNode":{"id":459,"name":"DataTypes.UserConfigurationMap","nameLocations":["24703:9:0","24713:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":888,"src":"24703:30:0"},"referencedDeclaration":888,"src":"24703:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"24702:39:0"},"scope":638,"src":"24628:114:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"24746:181:0","text":" @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":471,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"24939:26:0","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"asset","nameLocation":"24974:5:0","nodeType":"VariableDeclaration","scope":471,"src":"24966:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"24966:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24965:15:0"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"25004:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"25004:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25003:9:0"},"scope":638,"src":"24930:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"25017:805:0","text":" @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":479,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"25834:32:0","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"asset","nameLocation":"25875:5:0","nodeType":"VariableDeclaration","scope":479,"src":"25867:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"25867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25866:15:0"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"25905:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"25905:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25904:9:0"},"scope":638,"src":"25825:89:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"25918:203:0","text":" @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"},"functionSelector":"35ea6a75","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"26133:14:0","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"asset","nameLocation":"26156:5:0","nodeType":"VariableDeclaration","scope":488,"src":"26148:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"26148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26147:15:0"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":488,"src":"26186:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$881_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":485,"nodeType":"UserDefinedTypeName","pathNode":{"id":484,"name":"DataTypes.ReserveData","nameLocations":["26186:9:0","26196:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":881,"src":"26186:21:0"},"referencedDeclaration":881,"src":"26186:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$881_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"26185:30:0"},"scope":638,"src":"26124:92:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"26220:537:0","text":" @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"},"functionSelector":"d5ed3933","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"26769:16:0","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"asset","nameLocation":"26799:5:0","nodeType":"VariableDeclaration","scope":504,"src":"26791:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"26791:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"from","nameLocation":"26818:4:0","nodeType":"VariableDeclaration","scope":504,"src":"26810:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"26810:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"to","nameLocation":"26836:2:0","nodeType":"VariableDeclaration","scope":504,"src":"26828:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"26828:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"amount","nameLocation":"26852:6:0","nodeType":"VariableDeclaration","scope":504,"src":"26844:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"26844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"26872:17:0","nodeType":"VariableDeclaration","scope":504,"src":"26864:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"26864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"balanceToBefore","nameLocation":"26903:15:0","nodeType":"VariableDeclaration","scope":504,"src":"26895:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"26895:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26785:137:0"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"26931:0:0"},"scope":638,"src":"26760:172:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"26936:223:0","text":" @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"},"functionSelector":"d1946dbc","id":511,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"27171:15:0","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"27186:2:0"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":511,"src":"27212:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"27212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":508,"nodeType":"ArrayTypeName","src":"27212:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"27211:18:0"},"scope":638,"src":"27162:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"27234:285:0","text":" @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"},"functionSelector":"52751797","id":519,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveAddressById","nameLocation":"27531:21:0","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"27560:2:0","nodeType":"VariableDeclaration","scope":519,"src":"27553:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":513,"name":"uint16","nodeType":"ElementaryTypeName","src":"27553:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"27552:11:0"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":519,"src":"27587:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"27587:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27586:9:0"},"scope":638,"src":"27522:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"27600:137:0","text":" @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"},"functionSelector":"0542975c","id":526,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"27749:18:0","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"27767:2:0"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"27793:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$847","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"IPoolAddressesProvider","nameLocations":["27793:22:0"],"nodeType":"IdentifierPath","referencedDeclaration":847,"src":"27793:22:0"},"referencedDeclaration":847,"src":"27793:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$847","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"27792:24:0"},"scope":638,"src":"27740:77:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"27821:147:0","text":" @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"},"functionSelector":"3036b439","id":532,"implemented":false,"kind":"function","modifiers":[],"name":"updateBridgeProtocolFee","nameLocation":"27980:23:0","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"bridgeProtocolFee","nameLocation":"28012:17:0","nodeType":"VariableDeclaration","scope":532,"src":"28004:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"28004:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28003:27:0"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"28039:0:0"},"scope":638,"src":"27971:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"28044:650:0","text":" @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"},"functionSelector":"bcb6e522","id":540,"implemented":false,"kind":"function","modifiers":[],"name":"updateFlashloanPremiums","nameLocation":"28706:23:0","nodeType":"FunctionDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"28743:21:0","nodeType":"VariableDeclaration","scope":540,"src":"28735:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":534,"name":"uint128","nodeType":"ElementaryTypeName","src":"28735:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"28778:26:0","nodeType":"VariableDeclaration","scope":540,"src":"28770:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":536,"name":"uint128","nodeType":"ElementaryTypeName","src":"28770:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"28729:79:0"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"28817:0:0"},"scope":638,"src":"28697:121:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"28822:331:0","text":" @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"},"functionSelector":"d579ea7d","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"configureEModeCategory","nameLocation":"29165:22:0","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"id","nameLocation":"29194:2:0","nodeType":"VariableDeclaration","scope":549,"src":"29188:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":542,"name":"uint8","nodeType":"ElementaryTypeName","src":"29188:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"config","nameLocation":"29229:6:0","nodeType":"VariableDeclaration","scope":549,"src":"29198:37:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$899_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"DataTypes.EModeCategory","nameLocations":["29198:9:0","29208:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"29198:23:0"},"referencedDeclaration":899,"src":"29198:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$899_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"29187:49:0"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"29245:0:0"},"scope":638,"src":"29156:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"29250:150:0","text":" @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"},"functionSelector":"6c6f6ae1","id":558,"implemented":false,"kind":"function","modifiers":[],"name":"getEModeCategoryData","nameLocation":"29412:20:0","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"id","nameLocation":"29439:2:0","nodeType":"VariableDeclaration","scope":558,"src":"29433:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":551,"name":"uint8","nodeType":"ElementaryTypeName","src":"29433:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"29432:10:0"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"29466:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$899_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":555,"nodeType":"UserDefinedTypeName","pathNode":{"id":554,"name":"DataTypes.EModeCategory","nameLocations":["29466:9:0","29476:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":899,"src":"29466:23:0"},"referencedDeclaration":899,"src":"29466:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$899_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"29465:32:0"},"scope":638,"src":"29403:95:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"29502:111:0","text":" @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"},"functionSelector":"28530a47","id":564,"implemented":false,"kind":"function","modifiers":[],"name":"setUserEMode","nameLocation":"29625:12:0","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"categoryId","nameLocation":"29644:10:0","nodeType":"VariableDeclaration","scope":564,"src":"29638:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":560,"name":"uint8","nodeType":"ElementaryTypeName","src":"29638:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"29637:18:0"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"29664:0:0"},"scope":638,"src":"29616:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"29669:125:0","text":" @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"},"functionSelector":"eddf1b79","id":572,"implemented":false,"kind":"function","modifiers":[],"name":"getUserEMode","nameLocation":"29806:12:0","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"user","nameLocation":"29827:4:0","nodeType":"VariableDeclaration","scope":572,"src":"29819:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"29819:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29818:14:0"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"29856:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"29856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29855:9:0"},"scope":638,"src":"29797:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"29869:236:0","text":" @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"},"functionSelector":"e43e88a1","id":578,"implemented":false,"kind":"function","modifiers":[],"name":"resetIsolationModeTotalDebt","nameLocation":"30117:27:0","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"asset","nameLocation":"30153:5:0","nodeType":"VariableDeclaration","scope":578,"src":"30145:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"30145:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30144:15:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"30168:0:0"},"scope":638,"src":"30108:61:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"30173:191:0","text":" @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"},"functionSelector":"e82fec2f","id":584,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","nameLocation":"30376:35:0","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"30411:2:0"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":584,"src":"30437:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"30437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30436:9:0"},"scope":638,"src":"30367:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"30450:100:0","text":" @notice Returns the total fee on flash loans\n @return The total fee on flashloans"},"functionSelector":"074b2e43","id":590,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TOTAL","nameLocation":"30562:23:0","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"30585:2:0"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"30611:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":587,"name":"uint128","nodeType":"ElementaryTypeName","src":"30611:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"30610:9:0"},"scope":638,"src":"30553:67:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"30624:133:0","text":" @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"},"functionSelector":"272d9072","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE_PROTOCOL_FEE","nameLocation":"30769:19:0","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"30788:2:0"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"30814:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"30814:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30813:9:0"},"scope":638,"src":"30760:63:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"30827:139:0","text":" @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"},"functionSelector":"6a99c036","id":602,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","nameLocation":"30978:29:0","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"31007:2:0"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":602,"src":"31033:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":599,"name":"uint128","nodeType":"ElementaryTypeName","src":"31033:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"31032:9:0"},"scope":638,"src":"30969:73:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"31046:151:0","text":" @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"},"functionSelector":"f8119d51","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_NUMBER_RESERVES","nameLocation":"31209:19:0","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"31228:2:0"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"31254:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":605,"name":"uint16","nodeType":"ElementaryTypeName","src":"31254:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"31253:8:0"},"scope":638,"src":"31200:62:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"31266:196:0","text":" @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"},"functionSelector":"9cd19996","id":615,"implemented":false,"kind":"function","modifiers":[],"name":"mintToTreasury","nameLocation":"31474:14:0","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"assets","nameLocation":"31508:6:0","nodeType":"VariableDeclaration","scope":615,"src":"31489:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"31489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":611,"nodeType":"ArrayTypeName","src":"31489:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"31488:27:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"31524:0:0"},"scope":638,"src":"31465:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"31529:211:0","text":" @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"},"functionSelector":"cea9d26f","id":625,"implemented":false,"kind":"function","modifiers":[],"name":"rescueTokens","nameLocation":"31752:12:0","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"token","nameLocation":"31773:5:0","nodeType":"VariableDeclaration","scope":625,"src":"31765:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"31765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"to","nameLocation":"31788:2:0","nodeType":"VariableDeclaration","scope":625,"src":"31780:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"31780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"amount","nameLocation":"31800:6:0","nodeType":"VariableDeclaration","scope":625,"src":"31792:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"31792:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31764:43:0"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"31816:0:0"},"scope":638,"src":"31743:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"31821:768:0","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"},"functionSelector":"e8eda9df","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"32601:7:0","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"asset","nameLocation":"32617:5:0","nodeType":"VariableDeclaration","scope":637,"src":"32609:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"32609:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"amount","nameLocation":"32632:6:0","nodeType":"VariableDeclaration","scope":637,"src":"32624:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"32624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"onBehalfOf","nameLocation":"32648:10:0","nodeType":"VariableDeclaration","scope":637,"src":"32640:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"32640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"referralCode","nameLocation":"32667:12:0","nodeType":"VariableDeclaration","scope":637,"src":"32660:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":633,"name":"uint16","nodeType":"ElementaryTypeName","src":"32660:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"32608:72:0"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"32689:0:0"},"scope":638,"src":"32592:98:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":639,"src":"298:32394:0","usedErrors":[],"usedEvents":[19,30,43,54,72,85,95,102,109,116,123,130,148,165,180,187]}],"src":"37:32656:0"},"id":0},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","exportedSymbols":{"IPoolAddressesProvider":[847]},"id":848,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":640,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolAddressesProvider","contractDependencies":[],"contractKind":"interface","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"62:126:1","text":" @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."},"fullyImplemented":false,"id":847,"linearizedBaseContracts":[847],"name":"IPoolAddressesProvider","nameLocation":"199:22:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"226:164:1","text":" @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"},"eventSelector":"e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823","id":648,"name":"MarketIdSet","nameLocation":"399:11:1","nodeType":"EventDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"indexed":true,"mutability":"mutable","name":"oldMarketId","nameLocation":"426:11:1","nodeType":"VariableDeclaration","scope":648,"src":"411:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":643,"name":"string","nodeType":"ElementaryTypeName","src":"411:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":646,"indexed":true,"mutability":"mutable","name":"newMarketId","nameLocation":"454:11:1","nodeType":"VariableDeclaration","scope":648,"src":"439:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":645,"name":"string","nodeType":"ElementaryTypeName","src":"439:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"410:56:1"},"src":"393:74:1"},{"anonymous":false,"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"471:155:1","text":" @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"},"eventSelector":"90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627","id":655,"name":"PoolUpdated","nameLocation":"635:11:1","nodeType":"EventDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"663:10:1","nodeType":"VariableDeclaration","scope":655,"src":"647:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"691:10:1","nodeType":"VariableDeclaration","scope":655,"src":"675:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"646:56:1"},"src":"629:74:1"},{"anonymous":false,"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"707:192:1","text":" @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"},"eventSelector":"8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465","id":662,"name":"PoolConfiguratorUpdated","nameLocation":"908:23:1","nodeType":"EventDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"948:10:1","nodeType":"VariableDeclaration","scope":662,"src":"932:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"976:10:1","nodeType":"VariableDeclaration","scope":662,"src":"960:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:56:1"},"src":"902:86:1"},{"anonymous":false,"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"992:177:1","text":" @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"},"eventSelector":"56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd","id":669,"name":"PriceOracleUpdated","nameLocation":"1178:18:1","nodeType":"EventDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1213:10:1","nodeType":"VariableDeclaration","scope":669,"src":"1197:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":667,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1241:10:1","nodeType":"VariableDeclaration","scope":669,"src":"1225:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1196:56:1"},"src":"1172:81:1"},{"anonymous":false,"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"1257:174:1","text":" @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"},"eventSelector":"b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507","id":676,"name":"ACLManagerUpdated","nameLocation":"1440:17:1","nodeType":"EventDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1474:10:1","nodeType":"VariableDeclaration","scope":676,"src":"1458:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1502:10:1","nodeType":"VariableDeclaration","scope":676,"src":"1486:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1457:56:1"},"src":"1434:80:1"},{"anonymous":false,"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"1518:168:1","text":" @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"},"eventSelector":"e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b","id":683,"name":"ACLAdminUpdated","nameLocation":"1695:15:1","nodeType":"EventDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1727:10:1","nodeType":"VariableDeclaration","scope":683,"src":"1711:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1755:10:1","nodeType":"VariableDeclaration","scope":683,"src":"1739:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1710:56:1"},"src":"1689:78:1"},{"anonymous":false,"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"1771:202:1","text":" @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"},"eventSelector":"5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7","id":690,"name":"PriceOracleSentinelUpdated","nameLocation":"1982:26:1","nodeType":"EventDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2025:10:1","nodeType":"VariableDeclaration","scope":690,"src":"2009:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2053:10:1","nodeType":"VariableDeclaration","scope":690,"src":"2037:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:56:1"},"src":"1976:89:1"},{"anonymous":false,"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"2069:193:1","text":" @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"},"eventSelector":"c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d","id":697,"name":"PoolDataProviderUpdated","nameLocation":"2271:23:1","nodeType":"EventDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2311:10:1","nodeType":"VariableDeclaration","scope":697,"src":"2295:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"2295:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2339:10:1","nodeType":"VariableDeclaration","scope":697,"src":"2323:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2294:56:1"},"src":"2265:86:1"},{"anonymous":false,"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"2355:243:1","text":" @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"},"eventSelector":"4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478","id":706,"name":"ProxyCreated","nameLocation":"2607:12:1","nodeType":"EventDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2641:2:1","nodeType":"VariableDeclaration","scope":706,"src":"2625:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2625:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":702,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"2665:12:1","nodeType":"VariableDeclaration","scope":706,"src":"2649:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"indexed":true,"mutability":"mutable","name":"implementationAddress","nameLocation":"2699:21:1","nodeType":"VariableDeclaration","scope":706,"src":"2683:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2619:105:1"},"src":"2601:124:1"},{"anonymous":false,"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"2729:238:1","text":" @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"},"eventSelector":"9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7","id":715,"name":"AddressSet","nameLocation":"2976:10:1","nodeType":"EventDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3003:2:1","nodeType":"VariableDeclaration","scope":715,"src":"2987:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":711,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"3023:10:1","nodeType":"VariableDeclaration","scope":715,"src":"3007:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"3007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"3051:10:1","nodeType":"VariableDeclaration","scope":715,"src":"3035:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"3035:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2986:76:1"},"src":"2970:93:1"},{"anonymous":false,"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"3067:367:1","text":" @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"},"eventSelector":"3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c","id":726,"name":"AddressSetAsProxy","nameLocation":"3443:17:1","nodeType":"EventDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3482:2:1","nodeType":"VariableDeclaration","scope":726,"src":"3466:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3466:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":720,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3506:12:1","nodeType":"VariableDeclaration","scope":726,"src":"3490:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"3490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"indexed":false,"mutability":"mutable","name":"oldImplementationAddress","nameLocation":"3532:24:1","nodeType":"VariableDeclaration","scope":726,"src":"3524:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"3578:24:1","nodeType":"VariableDeclaration","scope":726,"src":"3562:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3460:146:1"},"src":"3437:170:1"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"3611:117:1","text":" @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"},"functionSelector":"568ef470","id":732,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"3740:11:1","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3751:2:1"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":732,"src":"3777:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3777:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3776:15:1"},"scope":847,"src":"3731:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"3796:252:1","text":" @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"},"functionSelector":"f67b1847","id":738,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"4060:11:1","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"newMarketId","nameLocation":"4088:11:1","nodeType":"VariableDeclaration","scope":738,"src":"4072:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":734,"name":"string","nodeType":"ElementaryTypeName","src":"4072:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4071:29:1"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[],"src":"4109:0:1"},"scope":847,"src":"4051:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"4114:306:1","text":" @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"},"functionSelector":"21f8a721","id":746,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"4432:10:1","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"id","nameLocation":"4451:2:1","nodeType":"VariableDeclaration","scope":746,"src":"4443:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4443:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4442:12:1"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"4478:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"4478:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4477:9:1"},"scope":847,"src":"4423:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4491:485:1","text":" @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"},"functionSelector":"5dcc528c","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"4988:17:1","nodeType":"FunctionDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"id","nameLocation":"5014:2:1","nodeType":"VariableDeclaration","scope":754,"src":"5006:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5006:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"5026:24:1","nodeType":"VariableDeclaration","scope":754,"src":"5018:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5005:46:1"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"5060:0:1"},"scope":847,"src":"4979:82:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"5065:244:1","text":" @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"},"functionSelector":"ca446dd9","id":762,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"5321:10:1","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"id","nameLocation":"5340:2:1","nodeType":"VariableDeclaration","scope":762,"src":"5332:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5332:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"newAddress","nameLocation":"5352:10:1","nodeType":"VariableDeclaration","scope":762,"src":"5344:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5331:32:1"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"5372:0:1"},"scope":847,"src":"5312:61:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"5377:97:1","text":" @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"},"functionSelector":"026b1d5f","id":768,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"5486:7:1","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"5493:2:1"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"5519:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"5519:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5518:9:1"},"scope":847,"src":"5477:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"5532:224:1","text":" @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"},"functionSelector":"a1564406","id":774,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolImpl","nameLocation":"5768:11:1","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newPoolImpl","nameLocation":"5788:11:1","nodeType":"VariableDeclaration","scope":774,"src":"5780:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"5780:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5779:21:1"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"5809:0:1"},"scope":847,"src":"5759:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"5814:121:1","text":" @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"},"functionSelector":"631adfca","id":780,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfigurator","nameLocation":"5947:19:1","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"5966:2:1"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"5992:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5991:9:1"},"scope":847,"src":"5938:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"6005:272:1","text":" @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"},"functionSelector":"e4ca28b7","id":786,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolConfiguratorImpl","nameLocation":"6289:23:1","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"newPoolConfiguratorImpl","nameLocation":"6321:23:1","nodeType":"VariableDeclaration","scope":786,"src":"6313:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"6313:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6312:33:1"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"6354:0:1"},"scope":847,"src":"6280:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"6359:107:1","text":" @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"},"functionSelector":"fca513a8","id":792,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"6478:14:1","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"6492:2:1"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"6518:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"6518:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6517:9:1"},"scope":847,"src":"6469:58:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"6531:125:1","text":" @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"},"functionSelector":"530e784f","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"6668:14:1","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"newPriceOracle","nameLocation":"6691:14:1","nodeType":"VariableDeclaration","scope":798,"src":"6683:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:24:1"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"6715:0:1"},"scope":847,"src":"6659:57:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"6720:105:1","text":" @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"},"functionSelector":"707cd716","id":804,"implemented":false,"kind":"function","modifiers":[],"name":"getACLManager","nameLocation":"6837:13:1","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[],"src":"6850:2:1"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"6876:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"6876:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6875:9:1"},"scope":847,"src":"6828:57:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"6889:122:1","text":" @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"},"functionSelector":"ed301ca9","id":810,"implemented":false,"kind":"function","modifiers":[],"name":"setACLManager","nameLocation":"7023:13:1","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"newAclManager","nameLocation":"7045:13:1","nodeType":"VariableDeclaration","scope":810,"src":"7037:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"7037:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7036:23:1"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"7068:0:1"},"scope":847,"src":"7014:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"7073:102:1","text":" @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"},"functionSelector":"0e67178c","id":816,"implemented":false,"kind":"function","modifiers":[],"name":"getACLAdmin","nameLocation":"7187:11:1","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"7198:2:1"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"7224:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"7224:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7223:9:1"},"scope":847,"src":"7178:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"7237:117:1","text":" @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"},"functionSelector":"76d84ffc","id":822,"implemented":false,"kind":"function","modifiers":[],"name":"setACLAdmin","nameLocation":"7366:11:1","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"newAclAdmin","nameLocation":"7386:11:1","nodeType":"VariableDeclaration","scope":822,"src":"7378:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"7378:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7377:21:1"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"7407:0:1"},"scope":847,"src":"7357:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"7412:124:1","text":" @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"},"functionSelector":"5eb88d3d","id":828,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracleSentinel","nameLocation":"7548:22:1","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"7570:2:1"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":828,"src":"7596:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"7596:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7595:9:1"},"scope":847,"src":"7539:66:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"7609:150:1","text":" @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"},"functionSelector":"74944cec","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracleSentinel","nameLocation":"7771:22:1","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"newPriceOracleSentinel","nameLocation":"7802:22:1","nodeType":"VariableDeclaration","scope":834,"src":"7794:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"7794:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7793:32:1"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"7834:0:1"},"scope":847,"src":"7762:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"7839:109:1","text":" @notice Returns the address of the data provider.\n @return The address of the DataProvider"},"functionSelector":"e860accb","id":840,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolDataProvider","nameLocation":"7960:19:1","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"7979:2:1"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"8005:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"8005:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8004:9:1"},"scope":847,"src":"7951:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"8018:128:1","text":" @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"},"functionSelector":"e44e9ed1","id":846,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolDataProvider","nameLocation":"8158:19:1","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"newDataProvider","nameLocation":"8186:15:1","nodeType":"VariableDeclaration","scope":846,"src":"8178:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8177:25:1"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"8211:0:1"},"scope":847,"src":"8149:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":848,"src":"189:8025:1","usedErrors":[],"usedEvents":[648,655,662,669,676,683,690,697,706,715,726]}],"src":"37:8178:1"},"id":1},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[1199]},"id":1200,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":849,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"DataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1199,"linearizedBaseContracts":[1199],"name":"DataTypes","nameLocation":"70:9:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":881,"members":[{"constant":false,"id":852,"mutability":"mutable","name":"configuration","nameLocation":"172:13:2","nodeType":"VariableDeclaration","scope":881,"src":"148:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":851,"nodeType":"UserDefinedTypeName","pathNode":{"id":850,"name":"ReserveConfigurationMap","nameLocations":["148:23:2"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"148:23:2"},"referencedDeclaration":884,"src":"148:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"liquidityIndex","nameLocation":"243:14:2","nodeType":"VariableDeclaration","scope":881,"src":"235:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":853,"name":"uint128","nodeType":"ElementaryTypeName","src":"235:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"319:20:2","nodeType":"VariableDeclaration","scope":881,"src":"311:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":855,"name":"uint128","nodeType":"ElementaryTypeName","src":"311:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"399:19:2","nodeType":"VariableDeclaration","scope":881,"src":"391:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":857,"name":"uint128","nodeType":"ElementaryTypeName","src":"391:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"489:25:2","nodeType":"VariableDeclaration","scope":881,"src":"481:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":859,"name":"uint128","nodeType":"ElementaryTypeName","src":"481:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"583:23:2","nodeType":"VariableDeclaration","scope":881,"src":"575:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":861,"name":"uint128","nodeType":"ElementaryTypeName","src":"575:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"650:19:2","nodeType":"VariableDeclaration","scope":881,"src":"643:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":863,"name":"uint40","nodeType":"ElementaryTypeName","src":"643:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"id","nameLocation":"770:2:2","nodeType":"VariableDeclaration","scope":881,"src":"763:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":865,"name":"uint16","nodeType":"ElementaryTypeName","src":"763:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"aTokenAddress","nameLocation":"807:13:2","nodeType":"VariableDeclaration","scope":881,"src":"799:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"864:22:2","nodeType":"VariableDeclaration","scope":881,"src":"856:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"932:24:2","nodeType":"VariableDeclaration","scope":881,"src":"924:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"1014:27:2","nodeType":"VariableDeclaration","scope":881,"src":"1006:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"accruedToTreasury","nameLocation":"1098:17:2","nodeType":"VariableDeclaration","scope":881,"src":"1090:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":875,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"unbacked","nameLocation":"1204:8:2","nodeType":"VariableDeclaration","scope":881,"src":"1196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":877,"name":"uint128","nodeType":"ElementaryTypeName","src":"1196:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"isolationModeTotalDebt","nameLocation":"1299:22:2","nodeType":"VariableDeclaration","scope":881,"src":"1291:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":879,"name":"uint128","nodeType":"ElementaryTypeName","src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"91:11:2","nodeType":"StructDefinition","scope":1199,"src":"84:1242:2","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":884,"members":[{"constant":false,"id":883,"mutability":"mutable","name":"data","nameLocation":"2260:4:2","nodeType":"VariableDeclaration","scope":884,"src":"2252:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2252:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1337:23:2","nodeType":"StructDefinition","scope":1199,"src":"1330:939:2","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":888,"members":[{"constant":false,"id":887,"mutability":"mutable","name":"data","nameLocation":"2578:4:2","nodeType":"VariableDeclaration","scope":888,"src":"2570:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"2280:20:2","nodeType":"StructDefinition","scope":1199,"src":"2273:314:2","visibility":"public"},{"canonicalName":"DataTypes.EModeCategory","id":899,"members":[{"constant":false,"id":890,"mutability":"mutable","name":"ltv","nameLocation":"2695:3:2","nodeType":"VariableDeclaration","scope":899,"src":"2688:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":889,"name":"uint16","nodeType":"ElementaryTypeName","src":"2688:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"liquidationThreshold","nameLocation":"2711:20:2","nodeType":"VariableDeclaration","scope":899,"src":"2704:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":891,"name":"uint16","nodeType":"ElementaryTypeName","src":"2704:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"liquidationBonus","nameLocation":"2744:16:2","nodeType":"VariableDeclaration","scope":899,"src":"2737:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":893,"name":"uint16","nodeType":"ElementaryTypeName","src":"2737:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"priceSource","nameLocation":"2885:11:2","nodeType":"VariableDeclaration","scope":899,"src":"2877:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"2877:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"label","nameLocation":"2909:5:2","nodeType":"VariableDeclaration","scope":899,"src":"2902:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":897,"name":"string","nodeType":"ElementaryTypeName","src":"2902:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EModeCategory","nameLocation":"2598:13:2","nodeType":"StructDefinition","scope":1199,"src":"2591:328:2","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":903,"members":[{"id":900,"name":"NONE","nameLocation":"2946:4:2","nodeType":"EnumValue","src":"2946:4:2"},{"id":901,"name":"STABLE","nameLocation":"2952:6:2","nodeType":"EnumValue","src":"2952:6:2"},{"id":902,"name":"VARIABLE","nameLocation":"2960:8:2","nodeType":"EnumValue","src":"2960:8:2"}],"name":"InterestRateMode","nameLocation":"2928:16:2","nodeType":"EnumDefinition","src":"2923:46:2"},{"canonicalName":"DataTypes.ReserveCache","id":945,"members":[{"constant":false,"id":905,"mutability":"mutable","name":"currScaledVariableDebt","nameLocation":"3007:22:2","nodeType":"VariableDeclaration","scope":945,"src":"2999:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"nextScaledVariableDebt","nameLocation":"3043:22:2","nodeType":"VariableDeclaration","scope":945,"src":"3035:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"currPrincipalStableDebt","nameLocation":"3079:23:2","nodeType":"VariableDeclaration","scope":945,"src":"3071:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"3071:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"currAvgStableBorrowRate","nameLocation":"3116:23:2","nodeType":"VariableDeclaration","scope":945,"src":"3108:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3108:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"currTotalStableDebt","nameLocation":"3153:19:2","nodeType":"VariableDeclaration","scope":945,"src":"3145:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3145:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"nextAvgStableBorrowRate","nameLocation":"3186:23:2","nodeType":"VariableDeclaration","scope":945,"src":"3178:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"nextTotalStableDebt","nameLocation":"3223:19:2","nodeType":"VariableDeclaration","scope":945,"src":"3215:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"3215:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"currLiquidityIndex","nameLocation":"3256:18:2","nodeType":"VariableDeclaration","scope":945,"src":"3248:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"nextLiquidityIndex","nameLocation":"3288:18:2","nodeType":"VariableDeclaration","scope":945,"src":"3280:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"currVariableBorrowIndex","nameLocation":"3320:23:2","nodeType":"VariableDeclaration","scope":945,"src":"3312:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3312:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"nextVariableBorrowIndex","nameLocation":"3357:23:2","nodeType":"VariableDeclaration","scope":945,"src":"3349:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"currLiquidityRate","nameLocation":"3394:17:2","nodeType":"VariableDeclaration","scope":945,"src":"3386:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"3386:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"currVariableBorrowRate","nameLocation":"3425:22:2","nodeType":"VariableDeclaration","scope":945,"src":"3417:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"reserveFactor","nameLocation":"3461:13:2","nodeType":"VariableDeclaration","scope":945,"src":"3453:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"3453:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"reserveConfiguration","nameLocation":"3504:20:2","nodeType":"VariableDeclaration","scope":945,"src":"3480:44:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"ReserveConfigurationMap","nameLocations":["3480:23:2"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"3480:23:2"},"referencedDeclaration":884,"src":"3480:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$884_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"aTokenAddress","nameLocation":"3538:13:2","nodeType":"VariableDeclaration","scope":945,"src":"3530:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"3565:22:2","nodeType":"VariableDeclaration","scope":945,"src":"3557:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"3601:24:2","nodeType":"VariableDeclaration","scope":945,"src":"3593:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"3593:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"reserveLastUpdateTimestamp","nameLocation":"3638:26:2","nodeType":"VariableDeclaration","scope":945,"src":"3631:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":941,"name":"uint40","nodeType":"ElementaryTypeName","src":"3631:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nameLocation":"3677:29:2","nodeType":"VariableDeclaration","scope":945,"src":"3670:36:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":943,"name":"uint40","nodeType":"ElementaryTypeName","src":"3670:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"ReserveCache","nameLocation":"2980:12:2","nodeType":"StructDefinition","scope":1199,"src":"2973:738:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteLiquidationCallParams","id":964,"members":[{"constant":false,"id":947,"mutability":"mutable","name":"reservesCount","nameLocation":"3765:13:2","nodeType":"VariableDeclaration","scope":964,"src":"3757:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"debtToCover","nameLocation":"3792:11:2","nodeType":"VariableDeclaration","scope":964,"src":"3784:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3784:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"collateralAsset","nameLocation":"3817:15:2","nodeType":"VariableDeclaration","scope":964,"src":"3809:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"3809:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"debtAsset","nameLocation":"3846:9:2","nodeType":"VariableDeclaration","scope":964,"src":"3838:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3838:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"user","nameLocation":"3869:4:2","nodeType":"VariableDeclaration","scope":964,"src":"3861:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"3861:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"receiveAToken","nameLocation":"3884:13:2","nodeType":"VariableDeclaration","scope":964,"src":"3879:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"3879:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"priceOracle","nameLocation":"3911:11:2","nodeType":"VariableDeclaration","scope":964,"src":"3903:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"userEModeCategory","nameLocation":"3934:17:2","nodeType":"VariableDeclaration","scope":964,"src":"3928:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":960,"name":"uint8","nodeType":"ElementaryTypeName","src":"3928:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"3965:19:2","nodeType":"VariableDeclaration","scope":964,"src":"3957:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteLiquidationCallParams","nameLocation":"3722:28:2","nodeType":"StructDefinition","scope":1199,"src":"3715:274:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSupplyParams","id":973,"members":[{"constant":false,"id":966,"mutability":"mutable","name":"asset","nameLocation":"4034:5:2","nodeType":"VariableDeclaration","scope":973,"src":"4026:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"4026:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"amount","nameLocation":"4053:6:2","nodeType":"VariableDeclaration","scope":973,"src":"4045:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4073:10:2","nodeType":"VariableDeclaration","scope":973,"src":"4065:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"referralCode","nameLocation":"4096:12:2","nodeType":"VariableDeclaration","scope":973,"src":"4089:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":971,"name":"uint16","nodeType":"ElementaryTypeName","src":"4089:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"ExecuteSupplyParams","nameLocation":"4000:19:2","nodeType":"StructDefinition","scope":1199,"src":"3993:120:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":999,"members":[{"constant":false,"id":975,"mutability":"mutable","name":"asset","nameLocation":"4158:5:2","nodeType":"VariableDeclaration","scope":999,"src":"4150:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"user","nameLocation":"4177:4:2","nodeType":"VariableDeclaration","scope":999,"src":"4169:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"4169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4195:10:2","nodeType":"VariableDeclaration","scope":999,"src":"4187:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"amount","nameLocation":"4219:6:2","nodeType":"VariableDeclaration","scope":999,"src":"4211:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"4211:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"interestRateMode","nameLocation":"4248:16:2","nodeType":"VariableDeclaration","scope":999,"src":"4231:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":983,"nodeType":"UserDefinedTypeName","pathNode":{"id":982,"name":"InterestRateMode","nameLocations":["4231:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"4231:16:2"},"referencedDeclaration":903,"src":"4231:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"referralCode","nameLocation":"4277:12:2","nodeType":"VariableDeclaration","scope":999,"src":"4270:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":985,"name":"uint16","nodeType":"ElementaryTypeName","src":"4270:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"releaseUnderlying","nameLocation":"4300:17:2","nodeType":"VariableDeclaration","scope":999,"src":"4295:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"4295:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"4331:30:2","nodeType":"VariableDeclaration","scope":999,"src":"4323:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"reservesCount","nameLocation":"4375:13:2","nodeType":"VariableDeclaration","scope":999,"src":"4367:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"oracle","nameLocation":"4402:6:2","nodeType":"VariableDeclaration","scope":999,"src":"4394:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4420:17:2","nodeType":"VariableDeclaration","scope":999,"src":"4414:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":995,"name":"uint8","nodeType":"ElementaryTypeName","src":"4414:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"4451:19:2","nodeType":"VariableDeclaration","scope":999,"src":"4443:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nameLocation":"4124:19:2","nodeType":"StructDefinition","scope":1199,"src":"4117:358:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteRepayParams","id":1011,"members":[{"constant":false,"id":1001,"mutability":"mutable","name":"asset","nameLocation":"4519:5:2","nodeType":"VariableDeclaration","scope":1011,"src":"4511:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"4511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"amount","nameLocation":"4538:6:2","nodeType":"VariableDeclaration","scope":1011,"src":"4530:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"interestRateMode","nameLocation":"4567:16:2","nodeType":"VariableDeclaration","scope":1011,"src":"4550:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1005,"nodeType":"UserDefinedTypeName","pathNode":{"id":1004,"name":"InterestRateMode","nameLocations":["4550:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"4550:16:2"},"referencedDeclaration":903,"src":"4550:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4597:10:2","nodeType":"VariableDeclaration","scope":1011,"src":"4589:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"4589:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"useATokens","nameLocation":"4618:10:2","nodeType":"VariableDeclaration","scope":1011,"src":"4613:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1009,"name":"bool","nodeType":"ElementaryTypeName","src":"4613:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExecuteRepayParams","nameLocation":"4486:18:2","nodeType":"StructDefinition","scope":1199,"src":"4479:154:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteWithdrawParams","id":1024,"members":[{"constant":false,"id":1013,"mutability":"mutable","name":"asset","nameLocation":"4680:5:2","nodeType":"VariableDeclaration","scope":1024,"src":"4672:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"4672:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"amount","nameLocation":"4699:6:2","nodeType":"VariableDeclaration","scope":1024,"src":"4691:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"4691:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"4719:2:2","nodeType":"VariableDeclaration","scope":1024,"src":"4711:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"4711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"reservesCount","nameLocation":"4735:13:2","nodeType":"VariableDeclaration","scope":1024,"src":"4727:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"oracle","nameLocation":"4762:6:2","nodeType":"VariableDeclaration","scope":1024,"src":"4754:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"4754:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4780:17:2","nodeType":"VariableDeclaration","scope":1024,"src":"4774:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1022,"name":"uint8","nodeType":"ElementaryTypeName","src":"4774:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteWithdrawParams","nameLocation":"4644:21:2","nodeType":"StructDefinition","scope":1199,"src":"4637:165:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSetUserEModeParams","id":1031,"members":[{"constant":false,"id":1026,"mutability":"mutable","name":"reservesCount","nameLocation":"4853:13:2","nodeType":"VariableDeclaration","scope":1031,"src":"4845:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"4845:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"oracle","nameLocation":"4880:6:2","nodeType":"VariableDeclaration","scope":1031,"src":"4872:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"4872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"categoryId","nameLocation":"4898:10:2","nodeType":"VariableDeclaration","scope":1031,"src":"4892:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1029,"name":"uint8","nodeType":"ElementaryTypeName","src":"4892:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteSetUserEModeParams","nameLocation":"4813:25:2","nodeType":"StructDefinition","scope":1199,"src":"4806:107:2","visibility":"public"},{"canonicalName":"DataTypes.FinalizeTransferParams","id":1050,"members":[{"constant":false,"id":1033,"mutability":"mutable","name":"asset","nameLocation":"4961:5:2","nodeType":"VariableDeclaration","scope":1050,"src":"4953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"4953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"from","nameLocation":"4980:4:2","nodeType":"VariableDeclaration","scope":1050,"src":"4972:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"4972:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"4998:2:2","nodeType":"VariableDeclaration","scope":1050,"src":"4990:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"4990:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"amount","nameLocation":"5014:6:2","nodeType":"VariableDeclaration","scope":1050,"src":"5006:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"5006:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"5034:17:2","nodeType":"VariableDeclaration","scope":1050,"src":"5026:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"balanceToBefore","nameLocation":"5065:15:2","nodeType":"VariableDeclaration","scope":1050,"src":"5057:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"5057:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"reservesCount","nameLocation":"5094:13:2","nodeType":"VariableDeclaration","scope":1050,"src":"5086:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"5086:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"oracle","nameLocation":"5121:6:2","nodeType":"VariableDeclaration","scope":1050,"src":"5113:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"5113:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"fromEModeCategory","nameLocation":"5139:17:2","nodeType":"VariableDeclaration","scope":1050,"src":"5133:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1048,"name":"uint8","nodeType":"ElementaryTypeName","src":"5133:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FinalizeTransferParams","nameLocation":"4924:22:2","nodeType":"StructDefinition","scope":1199,"src":"4917:244:2","visibility":"public"},{"canonicalName":"DataTypes.FlashloanParams","id":1082,"members":[{"constant":false,"id":1052,"mutability":"mutable","name":"receiverAddress","nameLocation":"5202:15:2","nodeType":"VariableDeclaration","scope":1082,"src":"5194:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"assets","nameLocation":"5233:6:2","nodeType":"VariableDeclaration","scope":1082,"src":"5223:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1054,"nodeType":"ArrayTypeName","src":"5223:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"amounts","nameLocation":"5255:7:2","nodeType":"VariableDeclaration","scope":1082,"src":"5245:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5245:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ArrayTypeName","src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"interestRateModes","nameLocation":"5278:17:2","nodeType":"VariableDeclaration","scope":1082,"src":"5268:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5268:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1060,"nodeType":"ArrayTypeName","src":"5268:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"onBehalfOf","nameLocation":"5309:10:2","nodeType":"VariableDeclaration","scope":1082,"src":"5301:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"5301:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"params","nameLocation":"5331:6:2","nodeType":"VariableDeclaration","scope":1082,"src":"5325:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"referralCode","nameLocation":"5350:12:2","nodeType":"VariableDeclaration","scope":1082,"src":"5343:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1066,"name":"uint16","nodeType":"ElementaryTypeName","src":"5343:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5376:26:2","nodeType":"VariableDeclaration","scope":1082,"src":"5368:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"5368:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5416:21:2","nodeType":"VariableDeclaration","scope":1082,"src":"5408:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"5408:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"5451:30:2","nodeType":"VariableDeclaration","scope":1082,"src":"5443:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5443:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"reservesCount","nameLocation":"5495:13:2","nodeType":"VariableDeclaration","scope":1082,"src":"5487:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"addressesProvider","nameLocation":"5522:17:2","nodeType":"VariableDeclaration","scope":1082,"src":"5514:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"5514:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"userEModeCategory","nameLocation":"5551:17:2","nodeType":"VariableDeclaration","scope":1082,"src":"5545:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"5545:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"isAuthorizedFlashBorrower","nameLocation":"5579:25:2","nodeType":"VariableDeclaration","scope":1082,"src":"5574:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1080,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlashloanParams","nameLocation":"5172:15:2","nodeType":"StructDefinition","scope":1199,"src":"5165:444:2","visibility":"public"},{"canonicalName":"DataTypes.FlashloanSimpleParams","id":1097,"members":[{"constant":false,"id":1084,"mutability":"mutable","name":"receiverAddress","nameLocation":"5656:15:2","nodeType":"VariableDeclaration","scope":1097,"src":"5648:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"5648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"asset","nameLocation":"5685:5:2","nodeType":"VariableDeclaration","scope":1097,"src":"5677:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"5677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"amount","nameLocation":"5704:6:2","nodeType":"VariableDeclaration","scope":1097,"src":"5696:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"params","nameLocation":"5722:6:2","nodeType":"VariableDeclaration","scope":1097,"src":"5716:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"5716:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"referralCode","nameLocation":"5741:12:2","nodeType":"VariableDeclaration","scope":1097,"src":"5734:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1091,"name":"uint16","nodeType":"ElementaryTypeName","src":"5734:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5767:26:2","nodeType":"VariableDeclaration","scope":1097,"src":"5759:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5759:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5807:21:2","nodeType":"VariableDeclaration","scope":1097,"src":"5799:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FlashloanSimpleParams","nameLocation":"5620:21:2","nodeType":"StructDefinition","scope":1199,"src":"5613:220:2","visibility":"public"},{"canonicalName":"DataTypes.FlashLoanRepaymentParams","id":1110,"members":[{"constant":false,"id":1099,"mutability":"mutable","name":"amount","nameLocation":"5883:6:2","nodeType":"VariableDeclaration","scope":1110,"src":"5875:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"totalPremium","nameLocation":"5903:12:2","nodeType":"VariableDeclaration","scope":1110,"src":"5895:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5895:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5929:26:2","nodeType":"VariableDeclaration","scope":1110,"src":"5921:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5921:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"asset","nameLocation":"5969:5:2","nodeType":"VariableDeclaration","scope":1110,"src":"5961:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"5961:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"receiverAddress","nameLocation":"5988:15:2","nodeType":"VariableDeclaration","scope":1110,"src":"5980:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"referralCode","nameLocation":"6016:12:2","nodeType":"VariableDeclaration","scope":1110,"src":"6009:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1108,"name":"uint16","nodeType":"ElementaryTypeName","src":"6009:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FlashLoanRepaymentParams","nameLocation":"5844:24:2","nodeType":"StructDefinition","scope":1199,"src":"5837:196:2","visibility":"public"},{"canonicalName":"DataTypes.CalculateUserAccountDataParams","id":1122,"members":[{"constant":false,"id":1113,"mutability":"mutable","name":"userConfig","nameLocation":"6102:10:2","nodeType":"VariableDeclaration","scope":1122,"src":"6081:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1112,"nodeType":"UserDefinedTypeName","pathNode":{"id":1111,"name":"UserConfigurationMap","nameLocations":["6081:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":888,"src":"6081:20:2"},"referencedDeclaration":888,"src":"6081:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"reservesCount","nameLocation":"6126:13:2","nodeType":"VariableDeclaration","scope":1122,"src":"6118:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"6118:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"user","nameLocation":"6153:4:2","nodeType":"VariableDeclaration","scope":1122,"src":"6145:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"6145:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"oracle","nameLocation":"6171:6:2","nodeType":"VariableDeclaration","scope":1122,"src":"6163:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"6163:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6189:17:2","nodeType":"VariableDeclaration","scope":1122,"src":"6183:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1120,"name":"uint8","nodeType":"ElementaryTypeName","src":"6183:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"CalculateUserAccountDataParams","nameLocation":"6044:30:2","nodeType":"StructDefinition","scope":1199,"src":"6037:174:2","visibility":"public"},{"canonicalName":"DataTypes.ValidateBorrowParams","id":1154,"members":[{"constant":false,"id":1125,"mutability":"mutable","name":"reserveCache","nameLocation":"6262:12:2","nodeType":"VariableDeclaration","scope":1154,"src":"6249:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$945_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1124,"nodeType":"UserDefinedTypeName","pathNode":{"id":1123,"name":"ReserveCache","nameLocations":["6249:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"6249:12:2"},"referencedDeclaration":945,"src":"6249:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$945_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"userConfig","nameLocation":"6301:10:2","nodeType":"VariableDeclaration","scope":1154,"src":"6280:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1127,"nodeType":"UserDefinedTypeName","pathNode":{"id":1126,"name":"UserConfigurationMap","nameLocations":["6280:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":888,"src":"6280:20:2"},"referencedDeclaration":888,"src":"6280:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$888_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"asset","nameLocation":"6325:5:2","nodeType":"VariableDeclaration","scope":1154,"src":"6317:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"6317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"userAddress","nameLocation":"6344:11:2","nodeType":"VariableDeclaration","scope":1154,"src":"6336:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"6336:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"amount","nameLocation":"6369:6:2","nodeType":"VariableDeclaration","scope":1154,"src":"6361:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"6361:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"interestRateMode","nameLocation":"6398:16:2","nodeType":"VariableDeclaration","scope":1154,"src":"6381:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1136,"nodeType":"UserDefinedTypeName","pathNode":{"id":1135,"name":"InterestRateMode","nameLocations":["6381:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"6381:16:2"},"referencedDeclaration":903,"src":"6381:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$903","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"maxStableLoanPercent","nameLocation":"6428:20:2","nodeType":"VariableDeclaration","scope":1154,"src":"6420:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6420:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"reservesCount","nameLocation":"6462:13:2","nodeType":"VariableDeclaration","scope":1154,"src":"6454:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"6454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"oracle","nameLocation":"6489:6:2","nodeType":"VariableDeclaration","scope":1154,"src":"6481:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"6481:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6507:17:2","nodeType":"VariableDeclaration","scope":1154,"src":"6501:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1144,"name":"uint8","nodeType":"ElementaryTypeName","src":"6501:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6538:19:2","nodeType":"VariableDeclaration","scope":1154,"src":"6530:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"6530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"isolationModeActive","nameLocation":"6568:19:2","nodeType":"VariableDeclaration","scope":1154,"src":"6563:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"6563:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"isolationModeCollateralAddress","nameLocation":"6601:30:2","nodeType":"VariableDeclaration","scope":1154,"src":"6593:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"6593:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"isolationModeDebtCeiling","nameLocation":"6645:24:2","nodeType":"VariableDeclaration","scope":1154,"src":"6637:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"6637:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidateBorrowParams","nameLocation":"6222:20:2","nodeType":"StructDefinition","scope":1199,"src":"6215:459:2","visibility":"public"},{"canonicalName":"DataTypes.ValidateLiquidationCallParams","id":1164,"members":[{"constant":false,"id":1157,"mutability":"mutable","name":"debtReserveCache","nameLocation":"6734:16:2","nodeType":"VariableDeclaration","scope":1164,"src":"6721:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$945_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1156,"nodeType":"UserDefinedTypeName","pathNode":{"id":1155,"name":"ReserveCache","nameLocations":["6721:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":945,"src":"6721:12:2"},"referencedDeclaration":945,"src":"6721:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$945_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"totalDebt","nameLocation":"6764:9:2","nodeType":"VariableDeclaration","scope":1164,"src":"6756:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"6756:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"healthFactor","nameLocation":"6787:12:2","nodeType":"VariableDeclaration","scope":1164,"src":"6779:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"6779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6813:19:2","nodeType":"VariableDeclaration","scope":1164,"src":"6805:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"6805:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ValidateLiquidationCallParams","nameLocation":"6685:29:2","nodeType":"StructDefinition","scope":1199,"src":"6678:159:2","visibility":"public"},{"canonicalName":"DataTypes.CalculateInterestRatesParams","id":1183,"members":[{"constant":false,"id":1166,"mutability":"mutable","name":"unbacked","nameLocation":"6891:8:2","nodeType":"VariableDeclaration","scope":1183,"src":"6883:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6883:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"liquidityAdded","nameLocation":"6913:14:2","nodeType":"VariableDeclaration","scope":1183,"src":"6905:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6905:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"liquidityTaken","nameLocation":"6941:14:2","nodeType":"VariableDeclaration","scope":1183,"src":"6933:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6933:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"totalStableDebt","nameLocation":"6969:15:2","nodeType":"VariableDeclaration","scope":1183,"src":"6961:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"totalVariableDebt","nameLocation":"6998:17:2","nodeType":"VariableDeclaration","scope":1183,"src":"6990:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"6990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"averageStableBorrowRate","nameLocation":"7029:23:2","nodeType":"VariableDeclaration","scope":1183,"src":"7021:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"7021:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"reserveFactor","nameLocation":"7066:13:2","nodeType":"VariableDeclaration","scope":1183,"src":"7058:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"reserve","nameLocation":"7093:7:2","nodeType":"VariableDeclaration","scope":1183,"src":"7085:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"7085:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"aToken","nameLocation":"7114:6:2","nodeType":"VariableDeclaration","scope":1183,"src":"7106:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CalculateInterestRatesParams","nameLocation":"6848:28:2","nodeType":"StructDefinition","scope":1199,"src":"6841:284:2","visibility":"public"},{"canonicalName":"DataTypes.InitReserveParams","id":1198,"members":[{"constant":false,"id":1185,"mutability":"mutable","name":"asset","nameLocation":"7168:5:2","nodeType":"VariableDeclaration","scope":1198,"src":"7160:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"7160:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"aTokenAddress","nameLocation":"7187:13:2","nodeType":"VariableDeclaration","scope":1198,"src":"7179:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"7179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"7214:17:2","nodeType":"VariableDeclaration","scope":1198,"src":"7206:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"7206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"7245:19:2","nodeType":"VariableDeclaration","scope":1198,"src":"7237:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"7237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"7278:27:2","nodeType":"VariableDeclaration","scope":1198,"src":"7270:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"7270:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"reservesCount","nameLocation":"7318:13:2","nodeType":"VariableDeclaration","scope":1198,"src":"7311:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1194,"name":"uint16","nodeType":"ElementaryTypeName","src":"7311:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"maxNumberReserves","nameLocation":"7344:17:2","nodeType":"VariableDeclaration","scope":1198,"src":"7337:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1196,"name":"uint16","nodeType":"ElementaryTypeName","src":"7337:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"InitReserveParams","nameLocation":"7136:17:2","nodeType":"StructDefinition","scope":1199,"src":"7129:237:2","visibility":"public"}],"scope":1200,"src":"62:7306:2","usedErrors":[],"usedEvents":[]}],"src":"37:7332:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1277]},"id":1278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1201,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1277,"linearizedBaseContracts":[1277],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1211,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":1211,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":1211,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":1211,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1220,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":1220,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":1220,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":1220,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":1277,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1234,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":1234,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":1277,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1244,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":1244,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":1244,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1241,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":1277,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1254,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":1254,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":1254,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":1277,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1264,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":1264,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":1264,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1264,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":1277,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1276,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":1276,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":1276,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":1276,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1273,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":1277,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1278,"src":"204:2575:3","usedErrors":[],"usedEvents":[1211,1220]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1329]},"id":1330,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1279,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"125:489:4","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1329,"linearizedBaseContracts":[1329],"name":"Panic","nameLocation":"665:5:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"677:36:4","text":"@dev generic / unspecified error"},"id":1284,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:4","nodeType":"VariableDeclaration","scope":1329,"src":"718:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"764:37:4","text":"@dev used by the assert() builtin"},"id":1288,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:4","nodeType":"VariableDeclaration","scope":1329,"src":"806:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"851:41:4","text":"@dev arithmetic underflow or overflow"},"id":1292,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:4","nodeType":"VariableDeclaration","scope":1329,"src":"897:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:4","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"950:35:4","text":"@dev division or modulo by zero"},"id":1296,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:4","nodeType":"VariableDeclaration","scope":1329,"src":"990:49:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"1045:30:4","text":"@dev enum conversion error"},"id":1300,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:4","nodeType":"VariableDeclaration","scope":1329,"src":"1080:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:4","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1140:36:4","text":"@dev invalid encoding in storage"},"id":1304,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:4","nodeType":"VariableDeclaration","scope":1329,"src":"1181:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"1242:24:4","text":"@dev empty array pop"},"id":1308,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:4","nodeType":"VariableDeclaration","scope":1329,"src":"1271:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"1325:35:4","text":"@dev array out of bounds access"},"id":1312,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:4","nodeType":"VariableDeclaration","scope":1329,"src":"1365:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"1423:65:4","text":"@dev resource error (too large allocation or too large array)"},"id":1316,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:4","nodeType":"VariableDeclaration","scope":1329,"src":"1493:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"1546:42:4","text":"@dev calling invalid internal function"},"id":1320,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:4","nodeType":"VariableDeclaration","scope":1329,"src":"1593:58:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:4","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1327,"nodeType":"Block","src":"1819:151:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:4"},"nodeType":"YulFunctionCall","src":"1868:24:4"},"nodeType":"YulExpressionStatement","src":"1868:24:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:4","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:4"},"nodeType":"YulFunctionCall","src":"1905:18:4"},"nodeType":"YulExpressionStatement","src":"1905:18:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:4","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:4"},"nodeType":"YulFunctionCall","src":"1936:18:4"},"nodeType":"YulExpressionStatement","src":"1936:18:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1323,"isOffset":false,"isSlot":false,"src":"1918:4:4","valueSize":1}],"flags":["memory-safe"],"id":1326,"nodeType":"InlineAssembly","src":"1829:135:4"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"1658:113:4","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:4","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"code","nameLocation":"1799:4:4","nodeType":"VariableDeclaration","scope":1328,"src":"1791:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:4"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"1819:0:4"},"scope":1329,"src":"1776:194:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1330,"src":"657:1315:4","usedErrors":[],"usedEvents":[]}],"src":"99:1874:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4352],"SafeCast":[6117],"SignedMath":[6261],"Strings":[2731]},"id":2732,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1331,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":4353,"src":"127:37:5","symbolAliases":[{"foreign":{"id":1332,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"135:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":6118,"src":"165:45:5","symbolAliases":[{"foreign":{"id":1334,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":6262,"src":"211:49:5","symbolAliases":[{"foreign":{"id":1336,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"219:10:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"262:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":2731,"linearizedBaseContracts":[2731],"name":"Strings","nameLocation":"305:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1340,"libraryName":{"id":1339,"name":"SafeCast","nameLocations":["325:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":6117,"src":"325:8:5"},"nodeType":"UsingForDirective","src":"319:21:5"},{"constant":true,"id":1343,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:5","nodeType":"VariableDeclaration","scope":2731,"src":"346:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1341,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1346,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:5","nodeType":"VariableDeclaration","scope":2731,"src":"408:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1344,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1382,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:5","nodeType":"VariableDeclaration","scope":2731,"src":"456:302:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:5","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:5","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:5","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:5","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:5","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"778:81:5","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1389,"name":"StringsInsufficientHexLength","nameLocation":"870:28:5","nodeType":"ErrorDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"value","nameLocation":"907:5:5","nodeType":"VariableDeclaration","scope":1389,"src":"899:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"length","nameLocation":"922:6:5","nodeType":"VariableDeclaration","scope":1389,"src":"914:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:5"},"src":"864:66:5"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"936:108:5","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1392,"name":"StringsInvalidChar","nameLocation":"1055:18:5","nodeType":"ErrorDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"1073:2:5"},"src":"1049:27:5"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"1082:84:5","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1395,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:5","nodeType":"ErrorDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"1204:2:5"},"src":"1171:36:5"},{"body":{"id":1442,"nodeType":"Block","src":"1379:561:5","statements":[{"id":1441,"nodeType":"UncheckedBlock","src":"1389:545:5","statements":[{"assignments":[1404],"declarations":[{"constant":false,"id":1404,"mutability":"mutable","name":"length","nameLocation":"1421:6:5","nodeType":"VariableDeclaration","scope":1441,"src":"1413:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1411,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1441:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1405,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"1430:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4352_$","typeString":"type(library Math)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4184,"src":"1430:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:5"},{"assignments":[1413],"declarations":[{"constant":false,"id":1413,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:5","nodeType":"VariableDeclaration","scope":1441,"src":"1465:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1418,"initialValue":{"arguments":[{"id":1416,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1499:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1414,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:5"},{"assignments":[1420],"declarations":[{"constant":false,"id":1420,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:5","nodeType":"VariableDeclaration","scope":1441,"src":"1520:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1421,"nodeType":"VariableDeclarationStatement","src":"1520:11:5"},{"AST":{"nodeType":"YulBlock","src":"1570:67:5","statements":[{"nodeType":"YulAssignment","src":"1588:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:5"},"nodeType":"YulFunctionCall","src":"1607:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:5"},"nodeType":"YulFunctionCall","src":"1595:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1413,"isOffset":false,"isSlot":false,"src":"1599:6:5","valueSize":1},{"declaration":1404,"isOffset":false,"isSlot":false,"src":"1615:6:5","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"1588:3:5","valueSize":1}],"flags":["memory-safe"],"id":1422,"nodeType":"InlineAssembly","src":"1545:92:5"},{"body":{"id":1437,"nodeType":"Block","src":"1663:234:5","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:5","subExpression":{"id":1424,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1681:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"1681:5:5"},{"AST":{"nodeType":"YulBlock","src":"1729:86:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:5"},"nodeType":"YulFunctionCall","src":"1769:14:5"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:5"},"nodeType":"YulFunctionCall","src":"1764:32:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:5"},"nodeType":"YulFunctionCall","src":"1751:46:5"},"nodeType":"YulExpressionStatement","src":"1751:46:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1343,"isOffset":false,"isSlot":false,"src":"1785:10:5","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":false,"src":"1759:3:5","valueSize":1},{"declaration":1398,"isOffset":false,"isSlot":false,"src":"1773:5:5","valueSize":1}],"flags":["memory-safe"],"id":1427,"nodeType":"InlineAssembly","src":"1704:111:5"},{"expression":{"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1832:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1431,"nodeType":"ExpressionStatement","src":"1832:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1865:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1436,"nodeType":"IfStatement","src":"1861:21:5","trueBody":{"id":1435,"nodeType":"Break","src":"1877:5:5"}}]},"condition":{"hexValue":"74727565","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1438,"nodeType":"WhileStatement","src":"1650:247:5"},{"expression":{"id":1439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"1917:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1402,"id":1440,"nodeType":"Return","src":"1910:13:5"}]}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"1213:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"value","nameLocation":"1334:5:5","nodeType":"VariableDeclaration","scope":1443,"src":"1326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1443,"src":"1364:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:5"},"scope":2731,"src":"1308:632:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"2116:92:5","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"2147:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:5","trueExpression":{"hexValue":"2d","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"2193:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1461,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"2178:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6261_$","typeString":"type(library SignedMath)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6260,"src":"2178:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"2169:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1451,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:5","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1450,"id":1467,"nodeType":"Return","src":"2126:75:5"}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1946:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:5","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"value","nameLocation":"2071:5:5","nodeType":"VariableDeclaration","scope":1469,"src":"2064:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1445,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:5"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"2101:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1448,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:5"},"scope":2731,"src":"2040:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1488,"nodeType":"Block","src":"2387:100:5","statements":[{"id":1487,"nodeType":"UncheckedBlock","src":"2397:84:5","statements":[{"expression":{"arguments":[{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2440:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1479,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"2447:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4352_$","typeString":"type(library Math)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4295,"src":"2447:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1477,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1489,1572,1592],"referencedDeclaration":1572,"src":"2428:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1476,"id":1486,"nodeType":"Return","src":"2421:49:5"}]}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"2214:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:5","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"2342:5:5","nodeType":"VariableDeclaration","scope":1489,"src":"2334:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:5"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1489,"src":"2372:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1474,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:5"},"scope":2731,"src":"2313:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"2700:435:5","statements":[{"assignments":[1500],"declarations":[{"constant":false,"id":1500,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:5","nodeType":"VariableDeclaration","scope":1571,"src":"2710:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"id":1501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"2731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:5"},{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:5","nodeType":"VariableDeclaration","scope":1571,"src":"2746:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1513,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1508,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:5"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1514,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2803:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"indexExpression":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1519,"nodeType":"ExpressionStatement","src":"2803:15:5"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1520,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2828:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1522,"indexExpression":{"hexValue":"31","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1525,"nodeType":"ExpressionStatement","src":"2828:15:5"},{"body":{"id":1554,"nodeType":"Block","src":"2898:95:5","statements":[{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1540,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2912:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1542,"indexExpression":{"id":1541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2919:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1543,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2924:10:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1547,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2935:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1549,"nodeType":"ExpressionStatement","src":"2912:40:5"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2966:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"2966:16:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2886:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"initializationExpression":{"assignments":[1527],"declarations":[{"constant":false,"id":1527,"mutability":"mutable","name":"i","nameLocation":"2866:1:5","nodeType":"VariableDeclaration","scope":1555,"src":"2858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1533,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1529,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"2874:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:5"},"loopExpression":{"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:5","subExpression":{"id":1537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2895:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1539,"nodeType":"ExpressionStatement","src":"2893:3:5"},"nodeType":"ForStatement","src":"2853:140:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3006:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1565,"nodeType":"IfStatement","src":"3002:96:5","trueBody":{"id":1564,"nodeType":"Block","src":"3023:75:5","statements":[{"errorCall":{"arguments":[{"id":1560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"3073:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1561,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3080:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1559,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3044:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"RevertStatement","src":"3037:50:5"}]}},{"expression":{"arguments":[{"id":1568,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3121:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1566,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:5","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1498,"id":1570,"nodeType":"Return","src":"3107:21:5"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"2493:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:5","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"value","nameLocation":"2639:5:5","nodeType":"VariableDeclaration","scope":1572,"src":"2631:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"length","nameLocation":"2654:6:5","nodeType":"VariableDeclaration","scope":1572,"src":"2646:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:5"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"2685:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1496,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:5"},"scope":2731,"src":"2610:525:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"3367:75:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1585,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"3412:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1583,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:5","typeDescriptions":{}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:5","typeDescriptions":{}}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1588,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3420:14:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1580,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1489,1572,1592],"referencedDeclaration":1572,"src":"3384:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1579,"id":1590,"nodeType":"Return","src":"3377:58:5"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"3141:148:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:5","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"addr","nameLocation":"3323:4:5","nodeType":"VariableDeclaration","scope":1592,"src":"3315:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:5"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"3352:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:5"},"scope":2731,"src":"3294:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"3699:642:5","statements":[{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:5","nodeType":"VariableDeclaration","scope":1656,"src":"3709:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1608,"initialValue":{"arguments":[{"arguments":[{"id":1605,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3749:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1604,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1489,1572,1592],"referencedDeclaration":1592,"src":"3737:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:5","typeDescriptions":{}}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:5"},{"assignments":[1610],"declarations":[{"constant":false,"id":1610,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:5","nodeType":"VariableDeclaration","scope":1656,"src":"3840:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1611,"nodeType":"VariableDeclarationStatement","src":"3840:17:5"},{"AST":{"nodeType":"YulBlock","src":"3892:78:5","statements":[{"nodeType":"YulAssignment","src":"3906:54:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:5","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:5","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:5"},"nodeType":"YulFunctionCall","src":"3937:17:5"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:5","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:5"},"nodeType":"YulFunctionCall","src":"3927:32:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:5"},"nodeType":"YulFunctionCall","src":"3919:41:5"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1601,"isOffset":false,"isSlot":false,"src":"3941:6:5","valueSize":1},{"declaration":1610,"isOffset":false,"isSlot":false,"src":"3906:9:5","valueSize":1}],"flags":["memory-safe"],"id":1612,"nodeType":"InlineAssembly","src":"3867:103:5"},{"body":{"id":1649,"nodeType":"Block","src":"4013:291:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4119:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:5","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1630,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4148:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1632,"indexExpression":{"id":1631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4155:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1628,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:5","typeDescriptions":{}}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1644,"nodeType":"IfStatement","src":"4115:150:5","trueBody":{"id":1643,"nodeType":"Block","src":"4165:100:5","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4233:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1639,"indexExpression":{"id":1638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4240:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1642,"nodeType":"ExpressionStatement","src":"4233:17:5"}]}},{"expression":{"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1645,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4278:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ExpressionStatement","src":"4278:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4001:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"initializationExpression":{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"i","nameLocation":"3993:1:5","nodeType":"VariableDeclaration","scope":1650,"src":"3985:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1616,"initialValue":{"hexValue":"3431","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:5","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:5"},"loopExpression":{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:5","subExpression":{"id":1620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4010:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1622,"nodeType":"ExpressionStatement","src":"4008:3:5"},"nodeType":"ForStatement","src":"3980:324:5"},{"expression":{"arguments":[{"id":1653,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4327:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1651,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:5","typeDescriptions":{}}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1599,"id":1655,"nodeType":"Return","src":"4313:21:5"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"3448:165:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:5","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"addr","nameLocation":"3655:4:5","nodeType":"VariableDeclaration","scope":1657,"src":"3647:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:5"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"3684:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:5"},"scope":2731,"src":"3618:723:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"4496:104:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4519:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:5","typeDescriptions":{}}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:5","memberName":"length","nodeType":"MemberAccess","src":"4513:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1674,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4538:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:5","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:5","memberName":"length","nodeType":"MemberAccess","src":"4532:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4567:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1679,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:5","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1678,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4590:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1685,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:5","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1666,"id":1692,"nodeType":"Return","src":"4506:87:5"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"4347:66:5","text":" @dev Returns true if the two strings are equal."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:5","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"a","nameLocation":"4447:1:5","nodeType":"VariableDeclaration","scope":1694,"src":"4433:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1659,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"b","nameLocation":"4464:1:5","nodeType":"VariableDeclaration","scope":1694,"src":"4450:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1661,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:5"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"4490:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1664,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:5"},"scope":2731,"src":"4418:182:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"4897:64:5","statements":[{"expression":{"arguments":[{"id":1703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"4924:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1707,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"4940:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1705,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:5","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:5","memberName":"length","nodeType":"MemberAccess","src":"4934:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1713,1744],"referencedDeclaration":1744,"src":"4914:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1711,"nodeType":"Return","src":"4907:47:5"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"4606:214:5","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:5","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"input","nameLocation":"4858:5:5","nodeType":"VariableDeclaration","scope":1713,"src":"4844:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1696,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:5"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"4888:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:5"},"scope":2731,"src":"4825:136:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"5366:153:5","statements":[{"assignments":[1726,1728],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"success","nameLocation":"5382:7:5","nodeType":"VariableDeclaration","scope":1743,"src":"5377:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"value","nameLocation":"5399:5:5","nodeType":"VariableDeclaration","scope":1743,"src":"5391:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1734,"initialValue":{"arguments":[{"id":1730,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5421:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1731,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5428:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1732,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"5435:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1765,1802],"referencedDeclaration":1802,"src":"5408:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:5"},{"condition":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:5","subExpression":{"id":1735,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"IfStatement","src":"5449:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1737,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5470:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"RevertStatement","src":"5463:27:5"}},{"expression":{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"5507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1724,"id":1742,"nodeType":"Return","src":"5500:12:5"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"4967:294:5","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:5","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"input","nameLocation":"5299:5:5","nodeType":"VariableDeclaration","scope":1744,"src":"5285:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1715,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"begin","nameLocation":"5314:5:5","nodeType":"VariableDeclaration","scope":1744,"src":"5306:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"end","nameLocation":"5329:3:5","nodeType":"VariableDeclaration","scope":1744,"src":"5321:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:5"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"5357:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:5"},"scope":2731,"src":"5266:253:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"5840:83:5","statements":[{"expression":{"arguments":[{"id":1755,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5886:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1759,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"5902:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1757,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:5","typeDescriptions":{}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:5","memberName":"length","nodeType":"MemberAccess","src":"5896:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"5857:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1753,"id":1763,"nodeType":"Return","src":"5850:66:5"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"5525:215:5","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:5","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"input","nameLocation":"5781:5:5","nodeType":"VariableDeclaration","scope":1765,"src":"5767:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1746,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:5"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"success","nameLocation":"5816:7:5","nodeType":"VariableDeclaration","scope":1765,"src":"5811:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1749,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"value","nameLocation":"5833:5:5","nodeType":"VariableDeclaration","scope":1765,"src":"5825:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:5"},"scope":2731,"src":"5745:178:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"6325:144:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"6339:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1782,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6351:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:5","typeDescriptions":{}}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:5","memberName":"length","nodeType":"MemberAccess","src":"6345:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6368:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1787,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"6376:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"6335:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1778,"id":1793,"nodeType":"Return","src":"6381:17:5"}},{"expression":{"arguments":[{"id":1796,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"6444:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"6451:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"6458:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6415:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1778,"id":1800,"nodeType":"Return","src":"6408:54:5"}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"5929:238:5","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:5","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"input","nameLocation":"6217:5:5","nodeType":"VariableDeclaration","scope":1802,"src":"6203:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1767,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1770,"mutability":"mutable","name":"begin","nameLocation":"6240:5:5","nodeType":"VariableDeclaration","scope":1802,"src":"6232:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"end","nameLocation":"6263:3:5","nodeType":"VariableDeclaration","scope":1802,"src":"6255:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:5"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"success","nameLocation":"6301:7:5","nodeType":"VariableDeclaration","scope":1802,"src":"6296:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1774,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"6318:5:5","nodeType":"VariableDeclaration","scope":1802,"src":"6310:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:5"},"scope":2731,"src":"6172:297:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"6872:347:5","statements":[{"assignments":[1817],"declarations":[{"constant":false,"id":1817,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:5","nodeType":"VariableDeclaration","scope":1871,"src":"6882:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1822,"initialValue":{"arguments":[{"id":1820,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"6910:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1818,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:5","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:5"},{"assignments":[1824],"declarations":[{"constant":false,"id":1824,"mutability":"mutable","name":"result","nameLocation":"6935:6:5","nodeType":"VariableDeclaration","scope":1871,"src":"6927:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1826,"initialValue":{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:5"},{"body":{"id":1865,"nodeType":"Block","src":"6993:189:5","statements":[{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"chr","nameLocation":"7013:3:5","nodeType":"VariableDeclaration","scope":1865,"src":"7007:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1837,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1848,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1843,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"7062:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"7070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7039:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1840,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:5","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1839,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"7019:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7092:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"7088:30:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1815,"id":1855,"nodeType":"Return","src":"7101:17:5"}},{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"7132:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1860,"nodeType":"ExpressionStatement","src":"7132:12:5"},{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"7158:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1862,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7168:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"7158:13:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6979:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1832,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6983:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1866,"initializationExpression":{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"i","nameLocation":"6968:1:5","nodeType":"VariableDeclaration","scope":1866,"src":"6960:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1830,"initialValue":{"id":1829,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6972:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:5"},"loopExpression":{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:5","subExpression":{"id":1834,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"6990:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"nodeType":"ExpressionStatement","src":"6988:3:5"},"nodeType":"ForStatement","src":"6955:227:5"},{"expression":{"components":[{"hexValue":"74727565","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"7205:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1815,"id":1870,"nodeType":"Return","src":"7191:21:5"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"6475:224:5","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:5","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"input","nameLocation":"6765:5:5","nodeType":"VariableDeclaration","scope":1872,"src":"6751:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1804,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"begin","nameLocation":"6788:5:5","nodeType":"VariableDeclaration","scope":1872,"src":"6780:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"end","nameLocation":"6811:3:5","nodeType":"VariableDeclaration","scope":1872,"src":"6803:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:5"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"success","nameLocation":"6848:7:5","nodeType":"VariableDeclaration","scope":1872,"src":"6843:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1811,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"value","nameLocation":"6865:5:5","nodeType":"VariableDeclaration","scope":1872,"src":"6857:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:5"},"scope":2731,"src":"6704:515:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1890,"nodeType":"Block","src":"7516:63:5","statements":[{"expression":{"arguments":[{"id":1881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7542:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1885,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7558:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1883,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:5","typeDescriptions":{}}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:5","memberName":"length","nodeType":"MemberAccess","src":"7552:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1891,1922],"referencedDeclaration":1922,"src":"7533:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1879,"id":1889,"nodeType":"Return","src":"7526:46:5"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"7225:216:5","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:5","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"input","nameLocation":"7478:5:5","nodeType":"VariableDeclaration","scope":1891,"src":"7464:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1874,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:5"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"7508:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1877,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:5"},"scope":2731,"src":"7446:133:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"7984:151:5","statements":[{"assignments":[1904,1906],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"success","nameLocation":"8000:7:5","nodeType":"VariableDeclaration","scope":1921,"src":"7995:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1903,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"value","nameLocation":"8016:5:5","nodeType":"VariableDeclaration","scope":1921,"src":"8009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1905,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1912,"initialValue":{"arguments":[{"id":1908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8037:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1909,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8044:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1910,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"8051:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1943,1985],"referencedDeclaration":1985,"src":"8025:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:5"},{"condition":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:5","subExpression":{"id":1913,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8070:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1918,"nodeType":"IfStatement","src":"8065:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1915,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"8086:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1917,"nodeType":"RevertStatement","src":"8079:27:5"}},{"expression":{"id":1919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8123:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1902,"id":1920,"nodeType":"Return","src":"8116:12:5"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"7585:296:5","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:5","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"input","nameLocation":"7918:5:5","nodeType":"VariableDeclaration","scope":1922,"src":"7904:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1893,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"begin","nameLocation":"7933:5:5","nodeType":"VariableDeclaration","scope":1922,"src":"7925:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"end","nameLocation":"7948:3:5","nodeType":"VariableDeclaration","scope":1922,"src":"7940:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:5"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"7976:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1900,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:5"},"scope":2731,"src":"7886:249:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"8526:82:5","statements":[{"expression":{"arguments":[{"id":1933,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"8571:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"8587:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:5","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:5","memberName":"length","nodeType":"MemberAccess","src":"8581:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1932,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"8543:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1931,"id":1941,"nodeType":"Return","src":"8536:65:5"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"8141:287:5","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:5","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"input","nameLocation":"8468:5:5","nodeType":"VariableDeclaration","scope":1943,"src":"8454:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:5"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"success","nameLocation":"8503:7:5","nodeType":"VariableDeclaration","scope":1943,"src":"8498:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1927,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"value","nameLocation":"8519:5:5","nodeType":"VariableDeclaration","scope":1943,"src":"8512:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1929,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:5"},"scope":2731,"src":"8433:175:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1948,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:5","nodeType":"VariableDeclaration","scope":2731,"src":"8614:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1984,"nodeType":"Block","src":"9130:143:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9144:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1965,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"9156:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1963,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:5","typeDescriptions":{}}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:5","memberName":"length","nodeType":"MemberAccess","src":"9150:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9173:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1970,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9181:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1977,"nodeType":"IfStatement","src":"9140:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1961,"id":1976,"nodeType":"Return","src":"9186:17:5"}},{"expression":{"arguments":[{"id":1979,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"9248:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1980,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9255:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1981,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9262:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1978,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"9220:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1961,"id":1983,"nodeType":"Return","src":"9213:53:5"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"8671:303:5","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:5","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"input","nameLocation":"9023:5:5","nodeType":"VariableDeclaration","scope":1985,"src":"9009:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"begin","nameLocation":"9046:5:5","nodeType":"VariableDeclaration","scope":1985,"src":"9038:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"end","nameLocation":"9069:3:5","nodeType":"VariableDeclaration","scope":1985,"src":"9061:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:5"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"success","nameLocation":"9107:7:5","nodeType":"VariableDeclaration","scope":1985,"src":"9102:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1957,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"value","nameLocation":"9123:5:5","nodeType":"VariableDeclaration","scope":1985,"src":"9116:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1959,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:5"},"scope":2731,"src":"8979:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"9673:812:5","statements":[{"assignments":[2000],"declarations":[{"constant":false,"id":2000,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:5","nodeType":"VariableDeclaration","scope":2105,"src":"9683:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"9711:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:5","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:5"},{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"sign","nameLocation":"9781:4:5","nodeType":"VariableDeclaration","scope":2105,"src":"9774:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2006,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2023,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"9788:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2009,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"9797:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2018,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"9845:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2019,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"9853:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"9822:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2015,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:5","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:5","trueExpression":{"arguments":[{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2011,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:5","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:5"},{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:5","nodeType":"VariableDeclaration","scope":2105,"src":"9941:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2024,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2032,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"9961:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2027,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:5","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:5"},{"assignments":[2034],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:5","nodeType":"VariableDeclaration","scope":2105,"src":"9990:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2033,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2041,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10010:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2036,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:5","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:5"},{"assignments":[2043],"declarations":[{"constant":false,"id":2043,"mutability":"mutable","name":"offset","nameLocation":"10047:6:5","nodeType":"VariableDeclaration","scope":2105,"src":"10039:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2050,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"10057:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2045,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"10073:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"10056:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:5"},{"assignments":[2052,2054],"declarations":[{"constant":false,"id":2052,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:5","nodeType":"VariableDeclaration","scope":2105,"src":"10107:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2051,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:5","nodeType":"VariableDeclaration","scope":2105,"src":"10124:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2062,"initialValue":{"arguments":[{"id":2056,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"10157:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"10164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2058,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"10172:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2060,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"10180:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2055,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1765,1802],"referencedDeclaration":1802,"src":"10144:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"10199:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10213:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2065,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"10224:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"10341:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2084,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"10355:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10371:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2087,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"10383:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1998,"id":2102,"nodeType":"Return","src":"10461:17:5"},"id":2103,"nodeType":"IfStatement","src":"10337:141:5","trueBody":{"id":2098,"nodeType":"Block","src":"10399:56:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2092,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2091,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:5","memberName":"min","nodeType":"MemberAccess","src":"10427:16:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1998,"id":2097,"nodeType":"Return","src":"10413:31:5"}]}},"id":2104,"nodeType":"IfStatement","src":"10195:283:5","trueBody":{"id":2082,"nodeType":"Block","src":"10240:91:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2069,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"10268:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2077,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10310:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2075,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:5","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:5","trueExpression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:5","subExpression":{"arguments":[{"id":2072,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"10291:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2070,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:5","typeDescriptions":{}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1998,"id":2081,"nodeType":"Return","src":"10254:66:5"}]}}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"9279:223:5","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:5","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"input","nameLocation":"9567:5:5","nodeType":"VariableDeclaration","scope":2106,"src":"9553:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1987,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"begin","nameLocation":"9590:5:5","nodeType":"VariableDeclaration","scope":2106,"src":"9582:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"end","nameLocation":"9613:3:5","nodeType":"VariableDeclaration","scope":2106,"src":"9605:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:5"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"success","nameLocation":"9650:7:5","nodeType":"VariableDeclaration","scope":2106,"src":"9645:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"value","nameLocation":"9666:5:5","nodeType":"VariableDeclaration","scope":2106,"src":"9659:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1996,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:5"},"scope":2731,"src":"9507:978:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2124,"nodeType":"Block","src":"10830:67:5","statements":[{"expression":{"arguments":[{"id":2115,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"10860:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2119,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"10876:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:5","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:5","memberName":"length","nodeType":"MemberAccess","src":"10870:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2125,2156],"referencedDeclaration":2156,"src":"10847:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2113,"id":2123,"nodeType":"Return","src":"10840:50:5"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"10491:259:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:5","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"input","nameLocation":"10791:5:5","nodeType":"VariableDeclaration","scope":2125,"src":"10777:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:5"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"10821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:5"},"scope":2731,"src":"10755:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"11318:156:5","statements":[{"assignments":[2138,2140],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"success","nameLocation":"11334:7:5","nodeType":"VariableDeclaration","scope":2155,"src":"11329:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"value","nameLocation":"11351:5:5","nodeType":"VariableDeclaration","scope":2155,"src":"11343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2146,"initialValue":{"arguments":[{"id":2142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"11376:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2143,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"11383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"11390:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2177,2214],"referencedDeclaration":2214,"src":"11360:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:5"},{"condition":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:5","subExpression":{"id":2147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"11409:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"11404:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"11425:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"11418:27:5"}},{"expression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"11462:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2136,"id":2154,"nodeType":"Return","src":"11455:12:5"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"10903:307:5","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:5","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"input","nameLocation":"11251:5:5","nodeType":"VariableDeclaration","scope":2156,"src":"11237:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"begin","nameLocation":"11266:5:5","nodeType":"VariableDeclaration","scope":2156,"src":"11258:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"end","nameLocation":"11281:3:5","nodeType":"VariableDeclaration","scope":2156,"src":"11273:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:5"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"11309:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:5"},"scope":2731,"src":"11215:259:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"11801:86:5","statements":[{"expression":{"arguments":[{"id":2167,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"11850:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"11866:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:5","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:5","memberName":"length","nodeType":"MemberAccess","src":"11860:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"11818:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2165,"id":2175,"nodeType":"Return","src":"11811:69:5"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"11480:218:5","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:5","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"input","nameLocation":"11742:5:5","nodeType":"VariableDeclaration","scope":2177,"src":"11728:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:5"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"success","nameLocation":"11777:7:5","nodeType":"VariableDeclaration","scope":2177,"src":"11772:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"11794:5:5","nodeType":"VariableDeclaration","scope":2177,"src":"11786:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:5"},"scope":2731,"src":"11703:184:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2213,"nodeType":"Block","src":"12295:147:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"12309:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2194,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"12321:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2192,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:5","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:5","memberName":"length","nodeType":"MemberAccess","src":"12315:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12338:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2199,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"12346:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"12305:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2190,"id":2205,"nodeType":"Return","src":"12351:17:5"}},{"expression":{"arguments":[{"id":2208,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"12417:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2209,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"12424:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"12431:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2207,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12385:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2190,"id":2212,"nodeType":"Return","src":"12378:57:5"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"11893:241:5","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:5","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"input","nameLocation":"12187:5:5","nodeType":"VariableDeclaration","scope":2214,"src":"12173:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2179,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"begin","nameLocation":"12210:5:5","nodeType":"VariableDeclaration","scope":2214,"src":"12202:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"end","nameLocation":"12233:3:5","nodeType":"VariableDeclaration","scope":2214,"src":"12225:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:5"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"success","nameLocation":"12271:7:5","nodeType":"VariableDeclaration","scope":2214,"src":"12266:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2186,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"value","nameLocation":"12288:5:5","nodeType":"VariableDeclaration","scope":2214,"src":"12280:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:5"},"scope":2731,"src":"12139:303:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"12851:881:5","statements":[{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:5","nodeType":"VariableDeclaration","scope":2316,"src":"12861:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2228,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2234,"initialValue":{"arguments":[{"id":2232,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"12889:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2230,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:5","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:5"},{"assignments":[2236],"declarations":[{"constant":false,"id":2236,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:5","nodeType":"VariableDeclaration","scope":2316,"src":"12943:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2235,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2256,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"12961:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2238,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"12967:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2246,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"13011:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2247,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13019:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"12988:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2243,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:5","typeDescriptions":{}}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2250,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:5","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:5"},{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"offset","nameLocation":"13131:6:5","nodeType":"VariableDeclaration","scope":2316,"src":"13123:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2264,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2259,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"13140:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"13140:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:5"},{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"result","nameLocation":"13181:6:5","nodeType":"VariableDeclaration","scope":2316,"src":"13173:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2268,"initialValue":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:5"},{"body":{"id":2310,"nodeType":"Block","src":"13248:447:5","statements":[{"assignments":[2282],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"chr","nameLocation":"13268:3:5","nodeType":"VariableDeclaration","scope":2310,"src":"13262:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2281,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2292,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2287,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"13317:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"13325:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"13294:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2284,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:5","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2283,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"13274:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"13347:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"13343:31:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2227,"id":2299,"nodeType":"Return","src":"13357:17:5"}},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"13388:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"13388:12:5"},{"id":2309,"nodeType":"UncheckedBlock","src":"13414:271:5","statements":[{"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"13657:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2306,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"13667:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"nodeType":"ExpressionStatement","src":"13657:13:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"13234:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2276,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"13238:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"initializationExpression":{"assignments":[2270],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"i","nameLocation":"13214:1:5","nodeType":"VariableDeclaration","scope":2311,"src":"13206:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2274,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2271,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"13218:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2272,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"13226:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:5"},"loopExpression":{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:5","subExpression":{"id":2278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"13245:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2280,"nodeType":"ExpressionStatement","src":"13243:3:5"},"nodeType":"ForStatement","src":"13201:494:5"},{"expression":{"components":[{"hexValue":"74727565","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"13718:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2227,"id":2315,"nodeType":"Return","src":"13704:21:5"}]},"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"12448:227:5","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:5","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"input","nameLocation":"12744:5:5","nodeType":"VariableDeclaration","scope":2317,"src":"12730:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2216,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"begin","nameLocation":"12767:5:5","nodeType":"VariableDeclaration","scope":2317,"src":"12759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"end","nameLocation":"12790:3:5","nodeType":"VariableDeclaration","scope":2317,"src":"12782:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:5"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"success","nameLocation":"12827:7:5","nodeType":"VariableDeclaration","scope":2317,"src":"12822:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"value","nameLocation":"12844:5:5","nodeType":"VariableDeclaration","scope":2317,"src":"12836:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:5"},"scope":2731,"src":"12680:1052:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2335,"nodeType":"Block","src":"14030:67:5","statements":[{"expression":{"arguments":[{"id":2326,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"14060:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2330,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"14076:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2328,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:5","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:5","memberName":"length","nodeType":"MemberAccess","src":"14070:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2336,2367],"referencedDeclaration":2367,"src":"14047:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2324,"id":2334,"nodeType":"Return","src":"14040:50:5"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"13738:212:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2336,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:5","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"input","nameLocation":"13991:5:5","nodeType":"VariableDeclaration","scope":2336,"src":"13977:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:5"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2336,"src":"14021:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:5"},"scope":2731,"src":"13955:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"14470:165:5","statements":[{"assignments":[2349,2351],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"success","nameLocation":"14486:7:5","nodeType":"VariableDeclaration","scope":2366,"src":"14481:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2348,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"value","nameLocation":"14503:5:5","nodeType":"VariableDeclaration","scope":2366,"src":"14495:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2357,"initialValue":{"arguments":[{"id":2353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"14528:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2354,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"14535:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2355,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"14542:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2352,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2388,2492],"referencedDeclaration":2492,"src":"14512:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:5"},{"condition":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:5","subExpression":{"id":2358,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"14561:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"14556:50:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2360,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"14577:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"RevertStatement","src":"14570:36:5"}},{"expression":{"id":2364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"14623:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2347,"id":2365,"nodeType":"Return","src":"14616:12:5"}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"14103:259:5","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:5","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"input","nameLocation":"14403:5:5","nodeType":"VariableDeclaration","scope":2367,"src":"14389:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"begin","nameLocation":"14418:5:5","nodeType":"VariableDeclaration","scope":2367,"src":"14410:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"end","nameLocation":"14433:3:5","nodeType":"VariableDeclaration","scope":2367,"src":"14425:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:5"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"14461:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:5"},"scope":2731,"src":"14367:268:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"14942:70:5","statements":[{"expression":{"arguments":[{"id":2378,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"14975:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"14991:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:5","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:5","memberName":"length","nodeType":"MemberAccess","src":"14985:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2377,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2388,2492],"referencedDeclaration":2492,"src":"14959:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2376,"id":2386,"nodeType":"Return","src":"14952:53:5"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"14641:198:5","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:5","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"input","nameLocation":"14883:5:5","nodeType":"VariableDeclaration","scope":2388,"src":"14869:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2369,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:5"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"success","nameLocation":"14918:7:5","nodeType":"VariableDeclaration","scope":2388,"src":"14913:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2372,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"value","nameLocation":"14935:5:5","nodeType":"VariableDeclaration","scope":2388,"src":"14927:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:5"},"scope":2731,"src":"14844:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2491,"nodeType":"Block","src":"15405:733:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15419:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2405,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"15431:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:5","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:5","memberName":"length","nodeType":"MemberAccess","src":"15425:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"15448:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2410,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15456:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"15415:72:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:5","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2401,"id":2419,"nodeType":"Return","src":"15461:26:5"}},{"assignments":[2422],"declarations":[{"constant":false,"id":2422,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:5","nodeType":"VariableDeclaration","scope":2491,"src":"15498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2421,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2445,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15516:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"15522:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2434,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"15572:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2432,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:5","typeDescriptions":{}}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2436,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"15580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"15543:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2429,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:5","typeDescriptions":{}}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2439,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:5","typeDescriptions":{}}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:5"},{"assignments":[2447],"declarations":[{"constant":false,"id":2447,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:5","nodeType":"VariableDeclaration","scope":2491,"src":"15684:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2455,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:5","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2449,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"15714:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"15714:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15801:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2457,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"15807:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2459,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"15816:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2489,"nodeType":"Block","src":"16081:51:5","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2483,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:5","typeDescriptions":{}}},"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2401,"id":2488,"nodeType":"Return","src":"16095:26:5"}]},"id":2490,"nodeType":"IfStatement","src":"15797:335:5","trueBody":{"id":2481,"nodeType":"Block","src":"15832:243:5","statements":[{"assignments":[2462,2464],"declarations":[{"constant":false,"id":2462,"mutability":"mutable","name":"s","nameLocation":"15953:1:5","nodeType":"VariableDeclaration","scope":2481,"src":"15948:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2461,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"v","nameLocation":"15964:1:5","nodeType":"VariableDeclaration","scope":2481,"src":"15956:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2470,"initialValue":{"arguments":[{"id":2466,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"16001:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2467,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"16008:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2468,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"16015:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2465,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"15969:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:5"},{"expression":{"components":[{"id":2471,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"16041:1:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2476,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"16060:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2474,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:5","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:5","typeDescriptions":{}}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2401,"id":2480,"nodeType":"Return","src":"16033:31:5"}]}}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"15018:226:5","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:5","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"input","nameLocation":"15297:5:5","nodeType":"VariableDeclaration","scope":2492,"src":"15283:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2390,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"begin","nameLocation":"15320:5:5","nodeType":"VariableDeclaration","scope":2492,"src":"15312:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"end","nameLocation":"15343:3:5","nodeType":"VariableDeclaration","scope":2492,"src":"15335:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:5"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"success","nameLocation":"15381:7:5","nodeType":"VariableDeclaration","scope":2492,"src":"15376:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"value","nameLocation":"15398:5:5","nodeType":"VariableDeclaration","scope":2492,"src":"15390:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:5"},"scope":2731,"src":"15249:889:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"16207:461:5","statements":[{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"value","nameLocation":"16223:5:5","nodeType":"VariableDeclaration","scope":2551,"src":"16217:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2499,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[{"id":2503,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"16237:3:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2501,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:5","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:5"},{"id":2548,"nodeType":"UncheckedBlock","src":"16401:238:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16429:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:5","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16443:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:5","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16489:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16503:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:5","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16550:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16564:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:5","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2540,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:5","memberName":"max","nodeType":"MemberAccess","src":"16613:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2498,"id":2544,"nodeType":"Return","src":"16606:22:5"},"id":2545,"nodeType":"IfStatement","src":"16546:82:5","trueBody":{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16576:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:5","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2538,"nodeType":"ExpressionStatement","src":"16576:11:5"}},"id":2546,"nodeType":"IfStatement","src":"16485:143:5","trueBody":{"expression":{"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16516:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:5","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2527,"nodeType":"ExpressionStatement","src":"16516:11:5"}},"id":2547,"nodeType":"IfStatement","src":"16425:203:5","trueBody":{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16455:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:5","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2516,"nodeType":"ExpressionStatement","src":"16455:11:5"}}]},{"expression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"16656:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2498,"id":2550,"nodeType":"Return","src":"16649:12:5"}]},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:5","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"chr","nameLocation":"16173:3:5","nodeType":"VariableDeclaration","scope":2552,"src":"16166:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2493,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:5"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"16200:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2496,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:5"},"scope":2731,"src":"16144:524:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2717,"nodeType":"Block","src":"17334:1331:5","statements":[{"assignments":[2561],"declarations":[{"constant":false,"id":2561,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:5","nodeType":"VariableDeclaration","scope":2717,"src":"17344:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2566,"initialValue":{"arguments":[{"id":2564,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"17372:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:5","typeDescriptions":{}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:5"},{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"output","nameLocation":"17401:6:5","nodeType":"VariableDeclaration","scope":2717,"src":"17388:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2567,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2576,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2572,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"17424:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:5","memberName":"length","nodeType":"MemberAccess","src":"17424:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:5"},{"assignments":[2578],"declarations":[{"constant":false,"id":2578,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:5","nodeType":"VariableDeclaration","scope":2717,"src":"17471:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"initialValue":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:5"},{"body":{"id":2709,"nodeType":"Block","src":"17546:854:5","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"char","nameLocation":"17567:4:5","nodeType":"VariableDeclaration","scope":2709,"src":"17560:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2591,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"arguments":[{"id":2596,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"17604:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"17612:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2595,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"17581:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2593,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:5","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:5"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"17635:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2605,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17670:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2603,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:5","typeDescriptions":{}}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2707,"nodeType":"Block","src":"18328:62:5","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2700,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"18346:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2703,"indexExpression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:5","subExpression":{"id":2701,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"18353:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2704,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18371:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2706,"nodeType":"ExpressionStatement","src":"18346:29:5"}]},"id":2708,"nodeType":"IfStatement","src":"17629:761:5","trueBody":{"id":2699,"nodeType":"Block","src":"17685:637:5","statements":[{"expression":{"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2614,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"17703:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2617,"indexExpression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:5","subExpression":{"id":2615,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17710:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2620,"nodeType":"ExpressionStatement","src":"17703:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17754:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17823:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17892:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"17961:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18030:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18099:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"18169:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2692,"nodeType":"IfStatement","src":"18165:143:5","trueBody":{"id":2691,"nodeType":"Block","src":"18183:125:5","statements":[{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2684,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"18261:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2687,"indexExpression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:5","subExpression":{"id":2685,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"18268:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2690,"nodeType":"ExpressionStatement","src":"18261:28:5"}]}},"id":2693,"nodeType":"IfStatement","src":"18095:213:5","trueBody":{"expression":{"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2674,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"18113:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2677,"indexExpression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:5","subExpression":{"id":2675,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"18120:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2680,"nodeType":"ExpressionStatement","src":"18113:29:5"}},"id":2694,"nodeType":"IfStatement","src":"18026:282:5","trueBody":{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2664,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"18044:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2667,"indexExpression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:5","subExpression":{"id":2665,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"18051:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2670,"nodeType":"ExpressionStatement","src":"18044:28:5"}},"id":2695,"nodeType":"IfStatement","src":"17957:351:5","trueBody":{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2654,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"17975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2657,"indexExpression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:5","subExpression":{"id":2655,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17982:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2660,"nodeType":"ExpressionStatement","src":"17975:28:5"}},"id":2696,"nodeType":"IfStatement","src":"17888:420:5","trueBody":{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2644,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"17906:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2647,"indexExpression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:5","subExpression":{"id":2645,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17913:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2650,"nodeType":"ExpressionStatement","src":"17906:28:5"}},"id":2697,"nodeType":"IfStatement","src":"17819:489:5","trueBody":{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2634,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"17837:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2637,"indexExpression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:5","subExpression":{"id":2635,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17844:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2640,"nodeType":"ExpressionStatement","src":"17837:28:5"}},"id":2698,"nodeType":"IfStatement","src":"17750:558:5","trueBody":{"expression":{"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2624,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"17768:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"indexExpression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:5","subExpression":{"id":2625,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17775:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2630,"nodeType":"ExpressionStatement","src":"17768:28:5"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"17522:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2585,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"17526:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:5","memberName":"length","nodeType":"MemberAccess","src":"17526:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2710,"initializationExpression":{"assignments":[2582],"declarations":[{"constant":false,"id":2582,"mutability":"mutable","name":"i","nameLocation":"17519:1:5","nodeType":"VariableDeclaration","scope":2710,"src":"17511:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2583,"nodeType":"VariableDeclarationStatement","src":"17511:9:5"},"loopExpression":{"expression":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:5","subExpression":{"id":2588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"17543:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2590,"nodeType":"ExpressionStatement","src":"17541:3:5"},"nodeType":"ForStatement","src":"17506:894:5"},{"AST":{"nodeType":"YulBlock","src":"18498:129:5","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:5"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:5"},"nodeType":"YulFunctionCall","src":"18512:28:5"},"nodeType":"YulExpressionStatement","src":"18512:28:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:5","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:5","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:5","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:5"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:5","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:5"},"nodeType":"YulFunctionCall","src":"18592:21:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:5"},"nodeType":"YulFunctionCall","src":"18585:29:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:5"},"nodeType":"YulFunctionCall","src":"18578:37:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:5"},"nodeType":"YulFunctionCall","src":"18566:50:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:5"},"nodeType":"YulFunctionCall","src":"18553:64:5"},"nodeType":"YulExpressionStatement","src":"18553:64:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":2568,"isOffset":false,"isSlot":false,"src":"18519:6:5","valueSize":1},{"declaration":2568,"isOffset":false,"isSlot":false,"src":"18570:6:5","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"18527:12:5","valueSize":1},{"declaration":2578,"isOffset":false,"isSlot":false,"src":"18596:12:5","valueSize":1}],"flags":["memory-safe"],"id":2711,"nodeType":"InlineAssembly","src":"18473:154:5"},{"expression":{"arguments":[{"id":2714,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"18651:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2712,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:5","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2559,"id":2716,"nodeType":"Return","src":"18637:21:5"}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"16674:576:5","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:5","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"input","nameLocation":"17289:5:5","nodeType":"VariableDeclaration","scope":2718,"src":"17275:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2554,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:5"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"17319:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2557,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:5"},"scope":2731,"src":"17255:1410:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"19050:225:5","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:5","statements":[{"nodeType":"YulAssignment","src":"19213:46:5","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:5","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:5"},"nodeType":"YulFunctionCall","src":"19240:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:5"},"nodeType":"YulFunctionCall","src":"19228:30:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:5"},"nodeType":"YulFunctionCall","src":"19222:37:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2721,"isOffset":false,"isSlot":false,"src":"19232:6:5","valueSize":1},{"declaration":2723,"isOffset":false,"isSlot":false,"src":"19250:6:5","valueSize":1},{"declaration":2726,"isOffset":false,"isSlot":false,"src":"19213:5:5","valueSize":1}],"flags":["memory-safe"],"id":2728,"nodeType":"InlineAssembly","src":"19174:95:5"}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"18671:268:5","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:5","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:5","nodeType":"VariableDeclaration","scope":2730,"src":"18976:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2720,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"offset","nameLocation":"19005:6:5","nodeType":"VariableDeclaration","scope":2730,"src":"18997:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:5"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"value","nameLocation":"19043:5:5","nodeType":"VariableDeclaration","scope":2730,"src":"19035:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:5"},"scope":2731,"src":"18944:331:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2732,"src":"297:18980:5","usedErrors":[1389,1392,1395],"usedEvents":[]}],"src":"101:19177:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4352],"Panic":[1329],"SafeCast":[6117]},"id":4353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2733,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4353,"sourceUnit":1330,"src":"129:35:6","symbolAliases":[{"foreign":{"id":2734,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"137:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4353,"sourceUnit":6118,"src":"165:40:6","symbolAliases":[{"foreign":{"id":2736,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"173:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"207:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4352,"linearizedBaseContracts":[4352],"name":"Math","nameLocation":"289:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2743,"members":[{"id":2739,"name":"Floor","nameLocation":"324:5:6","nodeType":"EnumValue","src":"324:5:6"},{"id":2740,"name":"Ceil","nameLocation":"367:4:6","nodeType":"EnumValue","src":"367:4:6"},{"id":2741,"name":"Trunc","nameLocation":"409:5:6","nodeType":"EnumValue","src":"409:5:6"},{"id":2742,"name":"Expand","nameLocation":"439:6:6","nodeType":"EnumValue","src":"439:6:6"}],"name":"Rounding","nameLocation":"305:8:6","nodeType":"EnumDefinition","src":"300:169:6"},{"body":{"id":2756,"nodeType":"Block","src":"731:112:6","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:6","statements":[{"nodeType":"YulAssignment","src":"780:16:6","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:6"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:6"},"nodeType":"YulFunctionCall","src":"787:9:6"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:6"}]},{"nodeType":"YulAssignment","src":"809:18:6","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:6"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:6"},"nodeType":"YulFunctionCall","src":"817:10:6"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2746,"isOffset":false,"isSlot":false,"src":"791:1:6","valueSize":1},{"declaration":2746,"isOffset":false,"isSlot":false,"src":"825:1:6","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"794:1:6","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":false,"src":"809:4:6","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"780:3:6","valueSize":1},{"declaration":2753,"isOffset":false,"isSlot":false,"src":"820:3:6","valueSize":1}],"flags":["memory-safe"],"id":2755,"nodeType":"InlineAssembly","src":"741:96:6"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"475:163:6","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:6","nodeType":"FunctionDefinition","parameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"a","nameLocation":"667:1:6","nodeType":"VariableDeclaration","scope":2757,"src":"659:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"b","nameLocation":"678:1:6","nodeType":"VariableDeclaration","scope":2757,"src":"670:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:6"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"high","nameLocation":"712:4:6","nodeType":"VariableDeclaration","scope":2757,"src":"704:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"low","nameLocation":"726:3:6","nodeType":"VariableDeclaration","scope":2757,"src":"718:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:6"},"scope":4352,"src":"643:200:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2770,"nodeType":"Block","src":"1115:462:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:6","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:6"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:6"},"nodeType":"YulFunctionCall","src":"1474:6:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:6"},"nodeType":"YulFunctionCall","src":"1461:20:6"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:6","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:6","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:6"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:6"},"nodeType":"YulFunctionCall","src":"1501:9:6"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:6"}]},{"nodeType":"YulAssignment","src":"1523:38:6","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:6"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:6"},"nodeType":"YulFunctionCall","src":"1535:12:6"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:6"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:6"},"nodeType":"YulFunctionCall","src":"1549:11:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:6"},"nodeType":"YulFunctionCall","src":"1531:30:6"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2760,"isOffset":false,"isSlot":false,"src":"1468:1:6","valueSize":1},{"declaration":2760,"isOffset":false,"isSlot":false,"src":"1505:1:6","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"1471:1:6","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"1508:1:6","valueSize":1},{"declaration":2765,"isOffset":false,"isSlot":false,"src":"1523:4:6","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"1494:3:6","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"1543:3:6","valueSize":1},{"declaration":2767,"isOffset":false,"isSlot":false,"src":"1556:3:6","valueSize":1}],"flags":["memory-safe"],"id":2769,"nodeType":"InlineAssembly","src":"1412:159:6"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"849:173:6","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:6","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"a","nameLocation":"1051:1:6","nodeType":"VariableDeclaration","scope":2771,"src":"1043:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"b","nameLocation":"1062:1:6","nodeType":"VariableDeclaration","scope":2771,"src":"1054:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:6"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"high","nameLocation":"1096:4:6","nodeType":"VariableDeclaration","scope":2771,"src":"1088:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"low","nameLocation":"1110:3:6","nodeType":"VariableDeclaration","scope":2771,"src":"1102:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:6"},"scope":4352,"src":"1027:550:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2805,"nodeType":"Block","src":"1784:149:6","statements":[{"id":2804,"nodeType":"UncheckedBlock","src":"1794:133:6","statements":[{"assignments":[2784],"declarations":[{"constant":false,"id":2784,"mutability":"mutable","name":"c","nameLocation":"1826:1:6","nodeType":"VariableDeclaration","scope":2804,"src":"1818:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2788,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"1830:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"1834:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:6"},{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2789,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"1849:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1859:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"1864:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2794,"nodeType":"ExpressionStatement","src":"1849:16:6"},{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"1879:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1888:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2799,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"1908:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2797,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"1892:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"1892:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"1879:37:6"}]}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"1583:105:6","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2806,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:6","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"a","nameLocation":"1717:1:6","nodeType":"VariableDeclaration","scope":2806,"src":"1709:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"b","nameLocation":"1728:1:6","nodeType":"VariableDeclaration","scope":2806,"src":"1720:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:6"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"success","nameLocation":"1759:7:6","nodeType":"VariableDeclaration","scope":2806,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2778,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"result","nameLocation":"1776:6:6","nodeType":"VariableDeclaration","scope":2806,"src":"1768:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:6"},"scope":4352,"src":"1693:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"2143:149:6","statements":[{"id":2839,"nodeType":"UncheckedBlock","src":"2153:133:6","statements":[{"assignments":[2819],"declarations":[{"constant":false,"id":2819,"mutability":"mutable","name":"c","nameLocation":"2185:1:6","nodeType":"VariableDeclaration","scope":2839,"src":"2177:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2823,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2189:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2193:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:6"},{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"2208:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2218:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2223:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2829,"nodeType":"ExpressionStatement","src":"2208:16:6"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2238:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2247:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2834,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"2267:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"2251:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"2251:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2838,"nodeType":"ExpressionStatement","src":"2238:37:6"}]}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"1939:108:6","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:6","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"a","nameLocation":"2076:1:6","nodeType":"VariableDeclaration","scope":2841,"src":"2068:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2811,"mutability":"mutable","name":"b","nameLocation":"2087:1:6","nodeType":"VariableDeclaration","scope":2841,"src":"2079:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:6"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"success","nameLocation":"2118:7:6","nodeType":"VariableDeclaration","scope":2841,"src":"2113:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2813,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"result","nameLocation":"2135:6:6","nodeType":"VariableDeclaration","scope":2841,"src":"2127:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:6"},"scope":4352,"src":"2052:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"2505:391:6","statements":[{"id":2869,"nodeType":"UncheckedBlock","src":"2515:375:6","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"c","nameLocation":"2547:1:6","nodeType":"VariableDeclaration","scope":2869,"src":"2539:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"2551:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2555:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:6"},{"AST":{"nodeType":"YulBlock","src":"2595:188:6","statements":[{"nodeType":"YulAssignment","src":"2727:42:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:6"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:6"},"nodeType":"YulFunctionCall","src":"2744:9:6"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:6"},"nodeType":"YulFunctionCall","src":"2741:16:6"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:6"},"nodeType":"YulFunctionCall","src":"2759:9:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:6"},"nodeType":"YulFunctionCall","src":"2738:31:6"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2844,"isOffset":false,"isSlot":false,"src":"2751:1:6","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"2766:1:6","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"2755:1:6","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"2748:1:6","valueSize":1},{"declaration":2849,"isOffset":false,"isSlot":false,"src":"2727:7:6","valueSize":1}],"flags":["memory-safe"],"id":2859,"nodeType":"InlineAssembly","src":"2570:213:6"},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"2842:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2864,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"2871:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2862,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"2855:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"2855:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"2842:37:6"}]}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"2298:111:6","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:6","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"a","nameLocation":"2438:1:6","nodeType":"VariableDeclaration","scope":2871,"src":"2430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"b","nameLocation":"2449:1:6","nodeType":"VariableDeclaration","scope":2871,"src":"2441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:6"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"success","nameLocation":"2480:7:6","nodeType":"VariableDeclaration","scope":2871,"src":"2475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2848,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"result","nameLocation":"2497:6:6","nodeType":"VariableDeclaration","scope":2871,"src":"2489:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:6"},"scope":4352,"src":"2414:482:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2891,"nodeType":"Block","src":"3111:231:6","statements":[{"id":2890,"nodeType":"UncheckedBlock","src":"3121:215:6","statements":[{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"3145:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"3155:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"ExpressionStatement","src":"3145:15:6"},{"AST":{"nodeType":"YulBlock","src":"3199:127:6","statements":[{"nodeType":"YulAssignment","src":"3293:19:6","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:6"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:6"},"nodeType":"YulFunctionCall","src":"3303:9:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2874,"isOffset":false,"isSlot":false,"src":"3307:1:6","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"3310:1:6","valueSize":1},{"declaration":2881,"isOffset":false,"isSlot":false,"src":"3293:6:6","valueSize":1}],"flags":["memory-safe"],"id":2889,"nodeType":"InlineAssembly","src":"3174:152:6"}]}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"2902:113:6","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:6","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"a","nameLocation":"3044:1:6","nodeType":"VariableDeclaration","scope":2892,"src":"3036:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"b","nameLocation":"3055:1:6","nodeType":"VariableDeclaration","scope":2892,"src":"3047:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:6"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"success","nameLocation":"3086:7:6","nodeType":"VariableDeclaration","scope":2892,"src":"3081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"result","nameLocation":"3103:6:6","nodeType":"VariableDeclaration","scope":2892,"src":"3095:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:6"},"scope":4352,"src":"3020:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"3567:231:6","statements":[{"id":2911,"nodeType":"UncheckedBlock","src":"3577:215:6","statements":[{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"3601:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3611:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2909,"nodeType":"ExpressionStatement","src":"3601:15:6"},{"AST":{"nodeType":"YulBlock","src":"3655:127:6","statements":[{"nodeType":"YulAssignment","src":"3749:19:6","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:6"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:6"},"nodeType":"YulFunctionCall","src":"3759:9:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2895,"isOffset":false,"isSlot":false,"src":"3763:1:6","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"3766:1:6","valueSize":1},{"declaration":2902,"isOffset":false,"isSlot":false,"src":"3749:6:6","valueSize":1}],"flags":["memory-safe"],"id":2910,"nodeType":"InlineAssembly","src":"3630:152:6"}]}]},"documentation":{"id":2893,"nodeType":"StructuredDocumentation","src":"3348:123:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:6","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"a","nameLocation":"3500:1:6","nodeType":"VariableDeclaration","scope":2913,"src":"3492:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"b","nameLocation":"3511:1:6","nodeType":"VariableDeclaration","scope":2913,"src":"3503:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:6"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"success","nameLocation":"3542:7:6","nodeType":"VariableDeclaration","scope":2913,"src":"3537:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2899,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"result","nameLocation":"3559:6:6","nodeType":"VariableDeclaration","scope":2913,"src":"3551:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:6"},"scope":4352,"src":"3476:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"3989:122:6","statements":[{"assignments":[2924,2926],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"success","nameLocation":"4005:7:6","nodeType":"VariableDeclaration","scope":2942,"src":"4000:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"result","nameLocation":"4022:6:6","nodeType":"VariableDeclaration","scope":2942,"src":"4014:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2931,"initialValue":{"arguments":[{"id":2928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4039:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4042:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2927,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"4032:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:6"},{"expression":{"arguments":[{"id":2933,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"4069:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"4078:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:6","memberName":"max","nodeType":"MemberAccess","src":"4086:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4061:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2922,"id":2941,"nodeType":"Return","src":"4054:50:6"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"3804:103:6","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:6","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"a","nameLocation":"3943:1:6","nodeType":"VariableDeclaration","scope":2943,"src":"3935:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"b","nameLocation":"3954:1:6","nodeType":"VariableDeclaration","scope":2943,"src":"3946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:6"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"3980:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:6"},"scope":4352,"src":"3912:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"4294:73:6","statements":[{"assignments":[null,2954],"declarations":[null,{"constant":false,"id":2954,"mutability":"mutable","name":"result","nameLocation":"4315:6:6","nodeType":"VariableDeclaration","scope":2962,"src":"4307:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"arguments":[{"id":2956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"4332:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4335:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2955,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4325:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:6"},{"expression":{"id":2960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"4354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2952,"id":2961,"nodeType":"Return","src":"4347:13:6"}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"4117:95:6","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:6","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"a","nameLocation":"4248:1:6","nodeType":"VariableDeclaration","scope":2963,"src":"4240:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"b","nameLocation":"4259:1:6","nodeType":"VariableDeclaration","scope":2963,"src":"4251:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:6"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"4285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:6"},"scope":4352,"src":"4217:150:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"4564:122:6","statements":[{"assignments":[2974,2976],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"success","nameLocation":"4580:7:6","nodeType":"VariableDeclaration","scope":2992,"src":"4575:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2973,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"result","nameLocation":"4597:6:6","nodeType":"VariableDeclaration","scope":2992,"src":"4589:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2981,"initialValue":{"arguments":[{"id":2978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4614:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"4617:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4607:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:6"},{"expression":{"arguments":[{"id":2983,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4644:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"4653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2985,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:6","memberName":"max","nodeType":"MemberAccess","src":"4661:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4636:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2972,"id":2991,"nodeType":"Return","src":"4629:50:6"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"4373:109:6","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:6","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"a","nameLocation":"4518:1:6","nodeType":"VariableDeclaration","scope":2993,"src":"4510:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"b","nameLocation":"4529:1:6","nodeType":"VariableDeclaration","scope":2993,"src":"4521:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:6"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"4555:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:6"},"scope":4352,"src":"4487:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3019,"nodeType":"Block","src":"5158:207:6","statements":[{"id":3018,"nodeType":"UncheckedBlock","src":"5168:191:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"5306:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"5312:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3007,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"5316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3012,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"5337:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3010,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"5321:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"5321:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3004,"id":3017,"nodeType":"Return","src":"5299:49:6"}]}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"4692:374:6","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3020,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:6","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"condition","nameLocation":"5093:9:6","nodeType":"VariableDeclaration","scope":3020,"src":"5088:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2995,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"a","nameLocation":"5112:1:6","nodeType":"VariableDeclaration","scope":3020,"src":"5104:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"b","nameLocation":"5123:1:6","nodeType":"VariableDeclaration","scope":3020,"src":"5115:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:6"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3020,"src":"5149:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:6"},"scope":4352,"src":"5071:294:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3038,"nodeType":"Block","src":"5502:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5527:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"5531:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5534:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"5537:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3030,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5519:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3029,"id":3037,"nodeType":"Return","src":"5512:27:6"}]},"documentation":{"id":3021,"nodeType":"StructuredDocumentation","src":"5371:59:6","text":" @dev Returns the largest of two numbers."},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:6","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"a","nameLocation":"5456:1:6","nodeType":"VariableDeclaration","scope":3039,"src":"5448:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"b","nameLocation":"5467:1:6","nodeType":"VariableDeclaration","scope":3039,"src":"5459:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:6"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"5493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:6"},"scope":4352,"src":"5435:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3057,"nodeType":"Block","src":"5684:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5709:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"5713:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3054,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"5719:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5701:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3048,"id":3056,"nodeType":"Return","src":"5694:27:6"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"5552:60:6","text":" @dev Returns the smallest of two numbers."},"id":3058,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:6","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"a","nameLocation":"5638:1:6","nodeType":"VariableDeclaration","scope":3058,"src":"5630:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"b","nameLocation":"5649:1:6","nodeType":"VariableDeclaration","scope":3058,"src":"5641:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:6"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3058,"src":"5675:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:6"},"scope":4352,"src":"5617:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"5912:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"5967:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"5971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"5977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3073,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"5981:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3067,"id":3079,"nodeType":"Return","src":"5959:28:6"}]},"documentation":{"id":3059,"nodeType":"StructuredDocumentation","src":"5734:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:6","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"a","nameLocation":"5866:1:6","nodeType":"VariableDeclaration","scope":3081,"src":"5858:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"b","nameLocation":"5877:1:6","nodeType":"VariableDeclaration","scope":3081,"src":"5869:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:6"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"5903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:6"},"scope":4352,"src":"5841:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"6286:633:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"6300:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"6296:150:6","trueBody":{"id":3101,"nodeType":"Block","src":"6308:138:6","statements":[{"expression":{"arguments":[{"expression":{"id":3097,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6412:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1296,"src":"6412:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3094,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6400:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"6400:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3100,"nodeType":"ExpressionStatement","src":"6400:35:6"}]}},{"id":3120,"nodeType":"UncheckedBlock","src":"6829:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"6876:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3103,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"6860:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"6860:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"6887:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"6896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3090,"id":3119,"nodeType":"Return","src":"6853:49:6"}]}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"6000:210:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:6","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"a","nameLocation":"6240:1:6","nodeType":"VariableDeclaration","scope":3122,"src":"6232:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"b","nameLocation":"6251:1:6","nodeType":"VariableDeclaration","scope":3122,"src":"6243:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:6"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"6277:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:6"},"scope":4352,"src":"6215:704:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"7340:3585:6","statements":[{"id":3256,"nodeType":"UncheckedBlock","src":"7350:3569:6","statements":[{"assignments":[3135,3137],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"high","nameLocation":"7383:4:6","nodeType":"VariableDeclaration","scope":3256,"src":"7375:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"low","nameLocation":"7397:3:6","nodeType":"VariableDeclaration","scope":3256,"src":"7389:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3142,"initialValue":{"arguments":[{"id":3139,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"7411:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3140,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7414:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3138,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"7404:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"7498:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"IfStatement","src":"7494:365:6","trueBody":{"id":3150,"nodeType":"Block","src":"7509:350:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"7827:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3147,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7833:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3133,"id":3149,"nodeType":"Return","src":"7820:24:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7969:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3153,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"7984:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3170,"nodeType":"IfStatement","src":"7965:142:6","trueBody":{"id":3169,"nodeType":"Block","src":"7990:117:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"8028:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3162,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8046:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1296,"src":"8046:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3164,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8070:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1292,"src":"8070:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3158,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"8020:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3155,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"8008:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"8008:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"8008:84:6"}]}},{"assignments":[3172],"declarations":[{"constant":false,"id":3172,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:6","nodeType":"VariableDeclaration","scope":3256,"src":"8359:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3173,"nodeType":"VariableDeclarationStatement","src":"8359:17:6"},{"AST":{"nodeType":"YulBlock","src":"8415:283:6","statements":[{"nodeType":"YulAssignment","src":"8484:38:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:6"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:6"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:6"},"nodeType":"YulFunctionCall","src":"8497:25:6"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:6"}]},{"nodeType":"YulAssignment","src":"8604:37:6","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:6"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:6"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:6"},"nodeType":"YulFunctionCall","src":"8622:18:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:6"},"nodeType":"YulFunctionCall","src":"8612:29:6"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:6"}]},{"nodeType":"YulAssignment","src":"8658:26:6","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:6"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:6"},"nodeType":"YulFunctionCall","src":"8665:19:6"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3129,"isOffset":false,"isSlot":false,"src":"8510:11:6","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"8604:4:6","valueSize":1},{"declaration":3135,"isOffset":false,"isSlot":false,"src":"8616:4:6","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8636:3:6","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8658:3:6","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8669:3:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"8484:9:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"8625:9:6","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"8674:9:6","valueSize":1},{"declaration":3125,"isOffset":false,"isSlot":false,"src":"8504:1:6","valueSize":1},{"declaration":3127,"isOffset":false,"isSlot":false,"src":"8507:1:6","valueSize":1}],"flags":["memory-safe"],"id":3174,"nodeType":"InlineAssembly","src":"8390:308:6"},{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"twos","nameLocation":"8910:4:6","nodeType":"VariableDeclaration","scope":3256,"src":"8902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"8917:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3179,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"8936:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:6"},{"AST":{"nodeType":"YulBlock","src":"8987:359:6","statements":[{"nodeType":"YulAssignment","src":"9052:37:6","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:6"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:6"},"nodeType":"YulFunctionCall","src":"9067:22:6"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:6"}]},{"nodeType":"YulAssignment","src":"9153:21:6","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:6"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:6"},"nodeType":"YulFunctionCall","src":"9160:14:6"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:6"}]},{"nodeType":"YulAssignment","src":"9293:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:6","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:6"},"nodeType":"YulFunctionCall","src":"9309:12:6"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:6"},"nodeType":"YulFunctionCall","src":"9305:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:6"},"nodeType":"YulFunctionCall","src":"9301:31:6"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3129,"isOffset":false,"isSlot":false,"src":"9052:11:6","valueSize":1},{"declaration":3129,"isOffset":false,"isSlot":false,"src":"9071:11:6","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"9153:3:6","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"9164:3:6","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"9084:4:6","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"9169:4:6","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"9293:4:6","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"9316:4:6","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"9323:4:6","valueSize":1}],"flags":["memory-safe"],"id":3184,"nodeType":"InlineAssembly","src":"8962:384:6"},{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"9409:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"9416:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3187,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"9423:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"9409:18:6"},{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:6","nodeType":"VariableDeclaration","scope":3256,"src":"9762:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"9785:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:6"},{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10018:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10033:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3203,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3207,"nodeType":"ExpressionStatement","src":"10018:36:6"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10103:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"10088:36:6"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10175:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10189:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3223,"nodeType":"ExpressionStatement","src":"10160:36:6"},{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10246:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3227,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10260:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"10231:36:6"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10304:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10319:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3235,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"10304:36:6"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3240,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10378:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10393:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3243,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"10378:36:6"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"10859:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"10868:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3250,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"10874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"10859:22:6"},{"expression":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"10902:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3133,"id":3255,"nodeType":"Return","src":"10895:13:6"}]}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"6925:312:6","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:6","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"x","nameLocation":"7266:1:6","nodeType":"VariableDeclaration","scope":3258,"src":"7258:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"y","nameLocation":"7277:1:6","nodeType":"VariableDeclaration","scope":3258,"src":"7269:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:6","nodeType":"VariableDeclaration","scope":3258,"src":"7280:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:6"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"result","nameLocation":"7332:6:6","nodeType":"VariableDeclaration","scope":3258,"src":"7324:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:6"},"scope":4352,"src":"7242:3683:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3294,"nodeType":"Block","src":"11164:128:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"11188:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3275,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"11191:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3276,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11194:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3273,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3258,3295],"referencedDeclaration":3258,"src":"11181:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3281,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11242:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":3280,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"11225:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3284,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"11262:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3285,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"11265:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3286,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11268:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3283,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3278,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"11209:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"11209:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3272,"id":3293,"nodeType":"Return","src":"11174:111:6"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"10931:118:6","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3295,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:6","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"x","nameLocation":"11078:1:6","nodeType":"VariableDeclaration","scope":3295,"src":"11070:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"y","nameLocation":"11089:1:6","nodeType":"VariableDeclaration","scope":3295,"src":"11081:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:6","nodeType":"VariableDeclaration","scope":3295,"src":"11092:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:6","nodeType":"VariableDeclaration","scope":3295,"src":"11113:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":3267,"nodeType":"UserDefinedTypeName","pathNode":{"id":3266,"name":"Rounding","nameLocations":["11113:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"11113:8:6"},"referencedDeclaration":2743,"src":"11113:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:6"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3295,"src":"11155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:6"},"scope":4352,"src":"11054:238:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"11500:245:6","statements":[{"id":3343,"nodeType":"UncheckedBlock","src":"11510:229:6","statements":[{"assignments":[3308,3310],"declarations":[{"constant":false,"id":3308,"mutability":"mutable","name":"high","nameLocation":"11543:4:6","nodeType":"VariableDeclaration","scope":3343,"src":"11535:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"low","nameLocation":"11557:3:6","nodeType":"VariableDeclaration","scope":3343,"src":"11549:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3315,"initialValue":{"arguments":[{"id":3312,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"11571:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3313,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"11574:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3311,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"11564:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"11594:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3318,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"11607:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"nodeType":"IfStatement","src":"11590:86:6","trueBody":{"id":3328,"nodeType":"Block","src":"11610:66:6","statements":[{"expression":{"arguments":[{"expression":{"id":3324,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11640:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1292,"src":"11640:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3321,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"11628:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"11628:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3327,"nodeType":"ExpressionStatement","src":"11628:33:6"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"11697:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"11712:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"11719:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3338,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"11726:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3306,"id":3342,"nodeType":"Return","src":"11689:39:6"}]}]},"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"11298:111:6","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:6","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"x","nameLocation":"11438:1:6","nodeType":"VariableDeclaration","scope":3345,"src":"11430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"y","nameLocation":"11449:1:6","nodeType":"VariableDeclaration","scope":3345,"src":"11441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"n","nameLocation":"11458:1:6","nodeType":"VariableDeclaration","scope":3345,"src":"11452:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3301,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:6"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"result","nameLocation":"11492:6:6","nodeType":"VariableDeclaration","scope":3345,"src":"11484:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:6"},"scope":4352,"src":"11414:331:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3383,"nodeType":"Block","src":"11963:113:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3361,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"11987:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3362,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"11990:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"11993:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3360,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3345,3384],"referencedDeclaration":3345,"src":"11980:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3368,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"12031:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":3367,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"12014:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"12051:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3372,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"12054:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3374,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"12062:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3370,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"11998:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"11998:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3359,"id":3382,"nodeType":"Return","src":"11973:96:6"}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"11751:109:6","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:6","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"x","nameLocation":"11889:1:6","nodeType":"VariableDeclaration","scope":3384,"src":"11881:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"y","nameLocation":"11900:1:6","nodeType":"VariableDeclaration","scope":3384,"src":"11892:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"n","nameLocation":"11909:1:6","nodeType":"VariableDeclaration","scope":3384,"src":"11903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3351,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:6","nodeType":"VariableDeclaration","scope":3384,"src":"11912:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":3354,"nodeType":"UserDefinedTypeName","pathNode":{"id":3353,"name":"Rounding","nameLocations":["11912:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"11912:8:6"},"referencedDeclaration":2743,"src":"11912:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:6"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3384,"src":"11954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:6"},"scope":4352,"src":"11865:211:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"12710:1849:6","statements":[{"id":3479,"nodeType":"UncheckedBlock","src":"12720:1833:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"12748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3399,"nodeType":"IfStatement","src":"12744:20:6","trueBody":{"expression":{"hexValue":"30","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3393,"id":3398,"nodeType":"Return","src":"12756:8:6"}},{"assignments":[3401],"declarations":[{"constant":false,"id":3401,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:6","nodeType":"VariableDeclaration","scope":3479,"src":"13235:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3405,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"13255:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3403,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"13259:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:6"},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:6","nodeType":"VariableDeclaration","scope":3479,"src":"13274:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3409,"initialValue":{"id":3408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"13288:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:6"},{"assignments":[3411],"declarations":[{"constant":false,"id":3411,"mutability":"mutable","name":"x","nameLocation":"13432:1:6","nodeType":"VariableDeclaration","scope":3479,"src":"13425:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3410,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3413,"initialValue":{"hexValue":"30","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:6"},{"assignments":[3415],"declarations":[{"constant":false,"id":3415,"mutability":"mutable","name":"y","nameLocation":"13458:1:6","nodeType":"VariableDeclaration","scope":3479,"src":"13451:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3414,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3417,"initialValue":{"hexValue":"31","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:6"},{"body":{"id":3454,"nodeType":"Block","src":"13501:882:6","statements":[{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:6","nodeType":"VariableDeclaration","scope":3454,"src":"13519:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3426,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"13538:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3424,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13544:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:6"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3427,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"13573:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3428,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3429,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3430,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13678:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"13923:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13929:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3433,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"13941:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"ExpressionStatement","src":"13572:395:6"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3439,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"13987:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3440,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"13990:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3441,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3442,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"14072:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"14326:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"14330:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3447,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"14341:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3445,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:6","typeDescriptions":{}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"ExpressionStatement","src":"13986:382:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13485:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"WhileStatement","src":"13478:905:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"14401:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3461,"nodeType":"IfStatement","src":"14397:22:6","trueBody":{"expression":{"hexValue":"30","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3393,"id":3460,"nodeType":"Return","src":"14411:8:6"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"14470:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"14477:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:6","subExpression":{"id":3469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"14490:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:6","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3475,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"14502:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:6","typeDescriptions":{}}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3462,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"14462:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3393,"id":3478,"nodeType":"Return","src":"14455:50:6"}]}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"12082:553:6","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:6","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"a","nameLocation":"12664:1:6","nodeType":"VariableDeclaration","scope":3481,"src":"12656:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"n","nameLocation":"12675:1:6","nodeType":"VariableDeclaration","scope":3481,"src":"12667:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:6"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"12701:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:6"},"scope":4352,"src":"12640:1919:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"15159:82:6","statements":[{"id":3500,"nodeType":"UncheckedBlock","src":"15169:66:6","statements":[{"expression":{"arguments":[{"id":3493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"15212:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"15215:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3497,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"15222:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3491,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"15200:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4352_$","typeString":"type(library Math)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:6","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3538,"src":"15200:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3490,"id":3499,"nodeType":"Return","src":"15193:31:6"}]}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"14565:514:6","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:6","nodeType":"FunctionDefinition","parameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"a","nameLocation":"15113:1:6","nodeType":"VariableDeclaration","scope":3502,"src":"15105:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"p","nameLocation":"15124:1:6","nodeType":"VariableDeclaration","scope":3502,"src":"15116:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:6"},"returnParameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"15150:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:6"},"scope":4352,"src":"15084:157:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3537,"nodeType":"Block","src":"16011:174:6","statements":[{"assignments":[3515,3517],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"success","nameLocation":"16027:7:6","nodeType":"VariableDeclaration","scope":3537,"src":"16022:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3514,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"result","nameLocation":"16044:6:6","nodeType":"VariableDeclaration","scope":3537,"src":"16036:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3523,"initialValue":{"arguments":[{"id":3519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"16064:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3520,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"16067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3521,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"16070:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3518,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3562,3644],"referencedDeclaration":3562,"src":"16054:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:6"},{"condition":{"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:6","subExpression":{"id":3524,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"16087:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3534,"nodeType":"IfStatement","src":"16082:74:6","trueBody":{"id":3533,"nodeType":"Block","src":"16096:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":3529,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"16122:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1296,"src":"16122:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3526,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"16110:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"16110:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3532,"nodeType":"ExpressionStatement","src":"16110:35:6"}]}},{"expression":{"id":3535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"16172:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3513,"id":3536,"nodeType":"Return","src":"16165:13:6"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"15247:678:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3538,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:6","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"b","nameLocation":"15954:1:6","nodeType":"VariableDeclaration","scope":3538,"src":"15946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"e","nameLocation":"15965:1:6","nodeType":"VariableDeclaration","scope":3538,"src":"15957:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"m","nameLocation":"15976:1:6","nodeType":"VariableDeclaration","scope":3538,"src":"15968:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:6"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3538,"src":"16002:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:6"},"scope":4352,"src":"15930:255:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3561,"nodeType":"Block","src":"17039:1493:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17053:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"17049:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3551,"id":3558,"nodeType":"Return","src":"17061:17:6"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:6","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:6"},"nodeType":"YulFunctionCall","src":"17138:11:6"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:6"},"nodeType":"YulFunctionCall","src":"18050:17:6"},"nodeType":"YulExpressionStatement","src":"18050:17:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:6"},"nodeType":"YulFunctionCall","src":"18087:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:6"},"nodeType":"YulFunctionCall","src":"18080:28:6"},"nodeType":"YulExpressionStatement","src":"18080:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:6"},"nodeType":"YulFunctionCall","src":"18128:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:6"},"nodeType":"YulFunctionCall","src":"18121:28:6"},"nodeType":"YulExpressionStatement","src":"18121:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:6"},"nodeType":"YulFunctionCall","src":"18169:14:6"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:6"},"nodeType":"YulFunctionCall","src":"18162:25:6"},"nodeType":"YulExpressionStatement","src":"18162:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:6"},"nodeType":"YulFunctionCall","src":"18207:14:6"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:6"},"nodeType":"YulFunctionCall","src":"18200:25:6"},"nodeType":"YulExpressionStatement","src":"18200:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:6"},"nodeType":"YulFunctionCall","src":"18245:14:6"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:6"},"nodeType":"YulFunctionCall","src":"18238:25:6"},"nodeType":"YulExpressionStatement","src":"18238:25:6"},{"nodeType":"YulAssignment","src":"18425:57:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:6"},"nodeType":"YulFunctionCall","src":"18447:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:6","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:6","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:6","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:6"},"nodeType":"YulFunctionCall","src":"18436:46:6"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:6"}]},{"nodeType":"YulAssignment","src":"18495:21:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:6","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:6"},"nodeType":"YulFunctionCall","src":"18505:11:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3541,"isOffset":false,"isSlot":false,"src":"18185:1:6","valueSize":1},{"declaration":3543,"isOffset":false,"isSlot":false,"src":"18223:1:6","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"18261:1:6","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"18495:6:6","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"18425:7:6","valueSize":1}],"flags":["memory-safe"],"id":3560,"nodeType":"InlineAssembly","src":"17088:1438:6"}]},"documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"16191:738:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3562,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:6","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"b","nameLocation":"16961:1:6","nodeType":"VariableDeclaration","scope":3562,"src":"16953:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"e","nameLocation":"16972:1:6","nodeType":"VariableDeclaration","scope":3562,"src":"16964:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"m","nameLocation":"16983:1:6","nodeType":"VariableDeclaration","scope":3562,"src":"16975:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:6"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"success","nameLocation":"17014:7:6","nodeType":"VariableDeclaration","scope":3562,"src":"17009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3547,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"result","nameLocation":"17031:6:6","nodeType":"VariableDeclaration","scope":3562,"src":"17023:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:6"},"scope":4352,"src":"16934:1598:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3597,"nodeType":"Block","src":"18729:179:6","statements":[{"assignments":[3575,3577],"declarations":[{"constant":false,"id":3575,"mutability":"mutable","name":"success","nameLocation":"18745:7:6","nodeType":"VariableDeclaration","scope":3597,"src":"18740:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3574,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"result","nameLocation":"18767:6:6","nodeType":"VariableDeclaration","scope":3597,"src":"18754:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3576,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3583,"initialValue":{"arguments":[{"id":3579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"18787:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3580,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"18790:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3581,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"18793:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3578,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3562,3644],"referencedDeclaration":3644,"src":"18777:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:6"},{"condition":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:6","subExpression":{"id":3584,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"18810:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"18805:74:6","trueBody":{"id":3593,"nodeType":"Block","src":"18819:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":3589,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"18845:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1296,"src":"18845:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3586,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"18833:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1329_$","typeString":"type(library Panic)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1328,"src":"18833:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3592,"nodeType":"ExpressionStatement","src":"18833:35:6"}]}},{"expression":{"id":3595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"18895:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3573,"id":3596,"nodeType":"Return","src":"18888:13:6"}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"18538:85:6","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3598,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:6","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"b","nameLocation":"18657:1:6","nodeType":"VariableDeclaration","scope":3598,"src":"18644:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3564,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"e","nameLocation":"18673:1:6","nodeType":"VariableDeclaration","scope":3598,"src":"18660:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3566,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3569,"mutability":"mutable","name":"m","nameLocation":"18689:1:6","nodeType":"VariableDeclaration","scope":3598,"src":"18676:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:6"},"returnParameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3598,"src":"18715:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:6"},"scope":4352,"src":"18628:280:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3643,"nodeType":"Block","src":"19162:771:6","statements":[{"condition":{"arguments":[{"id":3613,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"19187:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3612,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"19176:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"19172:47:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3616,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3611,"id":3621,"nodeType":"Return","src":"19191:28:6"}},{"assignments":[3624],"declarations":[{"constant":false,"id":3624,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:6","nodeType":"VariableDeclaration","scope":3643,"src":"19230:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"initialValue":{"expression":{"id":3625,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"19245:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:6","memberName":"length","nodeType":"MemberAccess","src":"19245:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:6"},{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"19335:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19361:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:6","memberName":"length","nodeType":"MemberAccess","src":"19361:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3633,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"19371:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:6","memberName":"length","nodeType":"MemberAccess","src":"19371:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3635,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"19381:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19387:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3637,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"19390:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3638,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"19393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3629,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3641,"nodeType":"ExpressionStatement","src":"19335:60:6"},{"AST":{"nodeType":"YulBlock","src":"19431:496:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:6","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:6"},"nodeType":"YulFunctionCall","src":"19460:17:6"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:6","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:6"},"nodeType":"YulFunctionCall","src":"19589:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:6","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:6"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:6"},"nodeType":"YulFunctionCall","src":"19611:13:6"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:6"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:6"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:6"},"nodeType":"YulFunctionCall","src":"19578:62:6"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:6"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:6"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:6"},"nodeType":"YulFunctionCall","src":"19789:20:6"},"nodeType":"YulExpressionStatement","src":"19789:20:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:6","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:6"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:6"},"nodeType":"YulFunctionCall","src":"19898:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:6"},"nodeType":"YulFunctionCall","src":"19885:32:6"},"nodeType":"YulExpressionStatement","src":"19885:32:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":3624,"isOffset":false,"isSlot":false,"src":"19635:4:6","valueSize":1},{"declaration":3624,"isOffset":false,"isSlot":false,"src":"19804:4:6","valueSize":1},{"declaration":3624,"isOffset":false,"isSlot":false,"src":"19911:4:6","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"19464:6:6","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"19617:6:6","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"19796:6:6","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"19567:7:6","valueSize":1}],"flags":["memory-safe"],"id":3642,"nodeType":"InlineAssembly","src":"19406:521:6"}]},"documentation":{"id":3599,"nodeType":"StructuredDocumentation","src":"18914:88:6","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:6","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"b","nameLocation":"19048:1:6","nodeType":"VariableDeclaration","scope":3644,"src":"19035:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3600,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"e","nameLocation":"19072:1:6","nodeType":"VariableDeclaration","scope":3644,"src":"19059:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3602,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"m","nameLocation":"19096:1:6","nodeType":"VariableDeclaration","scope":3644,"src":"19083:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3604,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:6"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"success","nameLocation":"19132:7:6","nodeType":"VariableDeclaration","scope":3644,"src":"19127:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3607,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"result","nameLocation":"19154:6:6","nodeType":"VariableDeclaration","scope":3644,"src":"19141:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:6"},"scope":4352,"src":"19007:926:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"20088:176:6","statements":[{"body":{"id":3672,"nodeType":"Block","src":"20145:92:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3663,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"20163:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3665,"indexExpression":{"id":3664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"20173:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"IfStatement","src":"20159:68:6","trueBody":{"id":3670,"nodeType":"Block","src":"20182:45:6","statements":[{"expression":{"hexValue":"66616c7365","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3651,"id":3669,"nodeType":"Return","src":"20200:12:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"20118:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3657,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"20122:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:6","memberName":"length","nodeType":"MemberAccess","src":"20122:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3673,"initializationExpression":{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"i","nameLocation":"20111:1:6","nodeType":"VariableDeclaration","scope":3673,"src":"20103:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3655,"initialValue":{"hexValue":"30","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:6"},"loopExpression":{"expression":{"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:6","subExpression":{"id":3660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"20142:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3662,"nodeType":"ExpressionStatement","src":"20140:3:6"},"nodeType":"ForStatement","src":"20098:139:6"},{"expression":{"hexValue":"74727565","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3651,"id":3675,"nodeType":"Return","src":"20246:11:6"}]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"19939:72:6","text":" @dev Returns whether the provided byte array is zero."},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:6","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:6","nodeType":"VariableDeclaration","scope":3677,"src":"20036:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3646,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:6"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"20082:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3649,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:6"},"scope":4352,"src":"20016:248:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3895,"nodeType":"Block","src":"20624:5124:6","statements":[{"id":3894,"nodeType":"UncheckedBlock","src":"20634:5108:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"20728:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3691,"nodeType":"IfStatement","src":"20724:53:6","trueBody":{"id":3690,"nodeType":"Block","src":"20736:41:6","statements":[{"expression":{"id":3688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"20761:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3684,"id":3689,"nodeType":"Return","src":"20754:8:6"}]}},{"assignments":[3693],"declarations":[{"constant":false,"id":3693,"mutability":"mutable","name":"aa","nameLocation":"21712:2:6","nodeType":"VariableDeclaration","scope":3894,"src":"21704:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"id":3694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"21717:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:6"},{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"xn","nameLocation":"21740:2:6","nodeType":"VariableDeclaration","scope":3894,"src":"21732:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3699,"initialValue":{"hexValue":"31","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3700,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"21765:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3715,"nodeType":"IfStatement","src":"21761:92:6","trueBody":{"id":3714,"nodeType":"Block","src":"21783:70:6","statements":[{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3706,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"21801:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"21801:10:6"},{"expression":{"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"21829:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3713,"nodeType":"ExpressionStatement","src":"21829:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"21870:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"21866:90:6","trueBody":{"id":3730,"nodeType":"Block","src":"21887:69:6","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3722,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"21905:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"21905:9:6"},{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"21932:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"21932:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"21973:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"IfStatement","src":"21969:90:6","trueBody":{"id":3746,"nodeType":"Block","src":"21990:69:6","statements":[{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22008:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ExpressionStatement","src":"22008:9:6"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22035:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"22035:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22076:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3763,"nodeType":"IfStatement","src":"22072:89:6","trueBody":{"id":3762,"nodeType":"Block","src":"22093:68:6","statements":[{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22111:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"22111:9:6"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22138:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"22138:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22178:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3779,"nodeType":"IfStatement","src":"22174:87:6","trueBody":{"id":3778,"nodeType":"Block","src":"22194:67:6","statements":[{"expression":{"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3770,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22212:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3773,"nodeType":"ExpressionStatement","src":"22212:8:6"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22238:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"22238:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22278:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"22274:87:6","trueBody":{"id":3794,"nodeType":"Block","src":"22294:67:6","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22312:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"22312:8:6"},{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22338:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"22338:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"22378:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3807,"nodeType":"IfStatement","src":"22374:61:6","trueBody":{"id":3806,"nodeType":"Block","src":"22394:41:6","statements":[{"expression":{"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3802,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22412:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3805,"nodeType":"ExpressionStatement","src":"22412:8:6"}]}},{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22855:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3810,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22865:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ExpressionStatement","src":"22855:18:6"},{"expression":{"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24760:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24766:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"24771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3820,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24775:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3827,"nodeType":"ExpressionStatement","src":"24760:23:6"},{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24869:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24875:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"24880:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3831,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24884:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3838,"nodeType":"ExpressionStatement","src":"24869:23:6"},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3839,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24980:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24986:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"24991:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3842,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"24995:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3849,"nodeType":"ExpressionStatement","src":"24980:23:6"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3850,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25089:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25095:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"25100:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3853,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25104:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"25089:23:6"},{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25199:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25205:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"25210:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25214:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"25199:23:6"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25309:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25315:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"25320:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3875,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25324:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"25309:23:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25698:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25719:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"25724:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3888,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"25728:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3884,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"25703:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"25703:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3684,"id":3893,"nodeType":"Return","src":"25691:40:6"}]}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"20270:292:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:6","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"a","nameLocation":"20589:1:6","nodeType":"VariableDeclaration","scope":3896,"src":"20581:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:6"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"20615:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:6"},"scope":4352,"src":"20567:5181:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3929,"nodeType":"Block","src":"25921:171:6","statements":[{"id":3928,"nodeType":"UncheckedBlock","src":"25931:155:6","statements":[{"assignments":[3908],"declarations":[{"constant":false,"id":3908,"mutability":"mutable","name":"result","nameLocation":"25963:6:6","nodeType":"VariableDeclaration","scope":3928,"src":"25955:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3912,"initialValue":{"arguments":[{"id":3910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"25977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3909,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3896,3930],"referencedDeclaration":3896,"src":"25972:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"26000:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3917,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"26042:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":3916,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"26025:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"26055:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"26064:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"26073:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26009:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26009:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3906,"id":3927,"nodeType":"Return","src":"25993:82:6"}]}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"25754:86:6","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3930,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:6","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"a","nameLocation":"25867:1:6","nodeType":"VariableDeclaration","scope":3930,"src":"25859:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:6","nodeType":"VariableDeclaration","scope":3930,"src":"25870:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":3901,"nodeType":"UserDefinedTypeName","pathNode":{"id":3900,"name":"Rounding","nameLocations":["25870:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"25870:8:6"},"referencedDeclaration":2743,"src":"25870:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:6"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3930,"src":"25912:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:6"},"scope":4352,"src":"25845:247:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"26281:2334:6","statements":[{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26363:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"26383:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3939,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26367:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26367:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"26363:64:6"},{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26503:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"26525:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3953,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26530:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26508:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26508:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ExpressionStatement","src":"26503:56:6"},{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3963,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"26656:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3967,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26661:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3964,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26639:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26639:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"26634:48:6"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3977,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26757:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"26779:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3981,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26784:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3978,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26762:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26762:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"26757:44:6"},{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26874:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"26896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3995,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3992,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26879:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26879:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"26874:42:6"},{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"26988:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"27010:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4009,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"27015:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"26993:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"26993:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"26988:41:6"},{"AST":{"nodeType":"YulBlock","src":"28490:119:6","statements":[{"nodeType":"YulAssignment","src":"28504:95:6","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:6"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:6"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:6"},"nodeType":"YulFunctionCall","src":"28520:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:6","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:6"},"nodeType":"YulFunctionCall","src":"28515:83:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:6"},"nodeType":"YulFunctionCall","src":"28509:90:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3936,"isOffset":false,"isSlot":false,"src":"28504:1:6","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"28512:1:6","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"28524:1:6","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"28527:1:6","valueSize":1}],"flags":["memory-safe"],"id":4019,"nodeType":"InlineAssembly","src":"28465:144:6"}]},"documentation":{"id":3931,"nodeType":"StructuredDocumentation","src":"26098:119:6","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:6","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"x","nameLocation":"26244:1:6","nodeType":"VariableDeclaration","scope":4021,"src":"26236:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:6"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"r","nameLocation":"26278:1:6","nodeType":"VariableDeclaration","scope":4021,"src":"26270:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:6"},"scope":4352,"src":"26222:2393:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"28848:175:6","statements":[{"id":4053,"nodeType":"UncheckedBlock","src":"28858:159:6","statements":[{"assignments":[4033],"declarations":[{"constant":false,"id":4033,"mutability":"mutable","name":"result","nameLocation":"28890:6:6","nodeType":"VariableDeclaration","scope":4053,"src":"28882:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4037,"initialValue":{"arguments":[{"id":4035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"28904:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4021,4055],"referencedDeclaration":4021,"src":"28899:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"28931:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4042,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"28973:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":4041,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"28956:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"28991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"29000:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4039,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"28940:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"28940:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4031,"id":4052,"nodeType":"Return","src":"28924:82:6"}]}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"28621:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:6","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"value","nameLocation":"28790:5:6","nodeType":"VariableDeclaration","scope":4055,"src":"28782:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:6","nodeType":"VariableDeclaration","scope":4055,"src":"28797:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":4026,"nodeType":"UserDefinedTypeName","pathNode":{"id":4025,"name":"Rounding","nameLocations":["28797:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"28797:8:6"},"referencedDeclaration":2743,"src":"28797:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:6"},"returnParameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"28839:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:6"},"scope":4352,"src":"28768:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4183,"nodeType":"Block","src":"29216:854:6","statements":[{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"result","nameLocation":"29234:6:6","nodeType":"VariableDeclaration","scope":4183,"src":"29226:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4066,"initialValue":{"hexValue":"30","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:6"},{"id":4180,"nodeType":"UncheckedBlock","src":"29254:787:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29282:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"IfStatement","src":"29278:103:6","trueBody":{"id":4082,"nodeType":"Block","src":"29301:80:6","statements":[{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29319:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4077,"nodeType":"ExpressionStatement","src":"29319:17:6"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"29354:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4100,"nodeType":"IfStatement","src":"29394:103:6","trueBody":{"id":4099,"nodeType":"Block","src":"29417:80:6","statements":[{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29435:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"29435:17:6"},{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29470:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"29470:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29514:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"29510:103:6","trueBody":{"id":4116,"nodeType":"Block","src":"29533:80:6","statements":[{"expression":{"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4111,"nodeType":"ExpressionStatement","src":"29551:17:6"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29586:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"29586:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29630:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4134,"nodeType":"IfStatement","src":"29626:100:6","trueBody":{"id":4133,"nodeType":"Block","src":"29648:78:6","statements":[{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29666:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4128,"nodeType":"ExpressionStatement","src":"29666:16:6"},{"expression":{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29700:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ExpressionStatement","src":"29700:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"29739:100:6","trueBody":{"id":4150,"nodeType":"Block","src":"29761:78:6","statements":[{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29779:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4145,"nodeType":"ExpressionStatement","src":"29779:16:6"},{"expression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29813:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4149,"nodeType":"ExpressionStatement","src":"29813:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29856:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4168,"nodeType":"IfStatement","src":"29852:100:6","trueBody":{"id":4167,"nodeType":"Block","src":"29874:78:6","statements":[{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29892:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"29892:16:6"},{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"29926:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4166,"nodeType":"ExpressionStatement","src":"29926:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29969:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4179,"nodeType":"IfStatement","src":"29965:66:6","trueBody":{"id":4178,"nodeType":"Block","src":"29987:44:6","statements":[{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"30005:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4177,"nodeType":"ExpressionStatement","src":"30005:11:6"}]}}]},{"expression":{"id":4181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"30057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4062,"id":4182,"nodeType":"Return","src":"30050:13:6"}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"29029:120:6","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:6","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"value","nameLocation":"29177:5:6","nodeType":"VariableDeclaration","scope":4184,"src":"29169:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:6"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"29207:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:6"},"scope":4352,"src":"29154:916:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"30305:177:6","statements":[{"id":4216,"nodeType":"UncheckedBlock","src":"30315:161:6","statements":[{"assignments":[4196],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"result","nameLocation":"30347:6:6","nodeType":"VariableDeclaration","scope":4216,"src":"30339:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4200,"initialValue":{"arguments":[{"id":4198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4197,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4184,4218],"referencedDeclaration":4184,"src":"30356:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"30389:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4205,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"30431:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":4204,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"30414:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"30450:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"30459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4202,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"30398:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"30398:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4194,"id":4215,"nodeType":"Return","src":"30382:83:6"}]}]},"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"30076:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:6","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"value","nameLocation":"30247:5:6","nodeType":"VariableDeclaration","scope":4218,"src":"30239:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:6","nodeType":"VariableDeclaration","scope":4218,"src":"30254:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":4189,"nodeType":"UserDefinedTypeName","pathNode":{"id":4188,"name":"Rounding","nameLocations":["30254:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"30254:8:6"},"referencedDeclaration":2743,"src":"30254:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:6"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"30296:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:6"},"scope":4352,"src":"30224:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"30800:675:6","statements":[{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"30882:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"30902:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4227,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"30886:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"30886:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4236,"nodeType":"ExpressionStatement","src":"30882:64:6"},{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4237,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31022:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"31044:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4241,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31049:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4238,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"31027:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"31027:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"31022:56:6"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31153:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"31175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4255,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31180:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4252,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"31158:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"31158:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"31153:48:6"},{"expression":{"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4265,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31276:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"31298:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4269,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31303:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"31281:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"31281:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4278,"nodeType":"ExpressionStatement","src":"31276:44:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31426:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"31453:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4286,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"31458:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4283,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"31436:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"31436:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4225,"id":4293,"nodeType":"Return","src":"31418:50:6"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"30488:246:6","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:6","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"x","nameLocation":"30763:1:6","nodeType":"VariableDeclaration","scope":4295,"src":"30755:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:6"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"r","nameLocation":"30797:1:6","nodeType":"VariableDeclaration","scope":4295,"src":"30789:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:6"},"scope":4352,"src":"30739:736:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"31712:184:6","statements":[{"id":4330,"nodeType":"UncheckedBlock","src":"31722:168:6","statements":[{"assignments":[4307],"declarations":[{"constant":false,"id":4307,"mutability":"mutable","name":"result","nameLocation":"31754:6:6","nodeType":"VariableDeclaration","scope":4330,"src":"31746:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"arguments":[{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"31770:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4308,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4295,4332],"referencedDeclaration":4295,"src":"31763:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"31797:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4316,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"31839:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":4315,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"31822:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2743_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"31873:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4313,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"31806:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"31806:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4305,"id":4329,"nodeType":"Return","src":"31790:89:6"}]}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"31481:144:6","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:6","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"value","nameLocation":"31654:5:6","nodeType":"VariableDeclaration","scope":4332,"src":"31646:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:6","nodeType":"VariableDeclaration","scope":4332,"src":"31661:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":4300,"nodeType":"UserDefinedTypeName","pathNode":{"id":4299,"name":"Rounding","nameLocations":["31661:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"31661:8:6"},"referencedDeclaration":2743,"src":"31661:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:6"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"31703:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:6"},"scope":4352,"src":"31630:266:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4350,"nodeType":"Block","src":"32094:48:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4343,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"32117:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4341,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:6","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4340,"id":4349,"nodeType":"Return","src":"32104:31:6"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"31902:113:6","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4351,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:6","nodeType":"FunctionDefinition","parameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:6","nodeType":"VariableDeclaration","scope":4351,"src":"32046:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"},"typeName":{"id":4335,"nodeType":"UserDefinedTypeName","pathNode":{"id":4334,"name":"Rounding","nameLocations":["32046:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"32046:8:6"},"referencedDeclaration":2743,"src":"32046:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2743","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:6"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4351,"src":"32088:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4338,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:6"},"scope":4352,"src":"32020:122:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4353,"src":"281:31863:6","usedErrors":[],"usedEvents":[]}],"src":"103:32042:6"},"id":6},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6117]},"id":6118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4354,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4355,"nodeType":"StructuredDocumentation","src":"218:550:7","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6117,"linearizedBaseContracts":[6117],"name":"SafeCast","nameLocation":"777:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"792:68:7","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4362,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:7","nodeType":"ErrorDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"bits","nameLocation":"908:4:7","nodeType":"VariableDeclaration","scope":4362,"src":"902:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4357,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"value","nameLocation":"922:5:7","nodeType":"VariableDeclaration","scope":4362,"src":"914:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:7"},"src":"865:64:7"},{"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"935:75:7","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4367,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:7","nodeType":"ErrorDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"value","nameLocation":"1056:5:7","nodeType":"VariableDeclaration","scope":4367,"src":"1049:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4364,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:7"},"src":"1015:48:7"},{"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"1069:67:7","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4374,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:7","nodeType":"ErrorDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"bits","nameLocation":"1183:4:7","nodeType":"VariableDeclaration","scope":4374,"src":"1177:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4369,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"value","nameLocation":"1196:5:7","nodeType":"VariableDeclaration","scope":4374,"src":"1189:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4371,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:7"},"src":"1141:62:7"},{"documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"1209:75:7","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4379,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:7","nodeType":"ErrorDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"value","nameLocation":"1331:5:7","nodeType":"VariableDeclaration","scope":4379,"src":"1323:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:7"},"src":"1289:49:7"},{"body":{"id":4406,"nodeType":"Block","src":"1695:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"1709:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4389,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4388,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:7","memberName":"max","nodeType":"MemberAccess","src":"1717:17:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4400,"nodeType":"IfStatement","src":"1705:105:7","trueBody":{"id":4399,"nodeType":"Block","src":"1736:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"1793:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4394,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"1757:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4398,"nodeType":"RevertStatement","src":"1750:49:7"}]}},{"expression":{"arguments":[{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"1834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4401,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:7","typeDescriptions":{}}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4386,"id":4405,"nodeType":"Return","src":"1819:21:7"}]},"documentation":{"id":4380,"nodeType":"StructuredDocumentation","src":"1344:280:7","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:7","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"value","nameLocation":"1656:5:7","nodeType":"VariableDeclaration","scope":4407,"src":"1648:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:7"},"returnParameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4407,"src":"1686:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4384,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:7"},"scope":6117,"src":"1629:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"2204:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2218:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4417,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4416,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:7","memberName":"max","nodeType":"MemberAccess","src":"2226:17:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4428,"nodeType":"IfStatement","src":"2214:105:7","trueBody":{"id":4427,"nodeType":"Block","src":"2245:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2302:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4422,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"2266:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4426,"nodeType":"RevertStatement","src":"2259:49:7"}]}},{"expression":{"arguments":[{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4429,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:7","typeDescriptions":{}}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4414,"id":4433,"nodeType":"Return","src":"2328:21:7"}]},"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"1853:280:7","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:7","nodeType":"FunctionDefinition","parameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"value","nameLocation":"2165:5:7","nodeType":"VariableDeclaration","scope":4435,"src":"2157:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:7"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4435,"src":"2195:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4412,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:7"},"scope":6117,"src":"2138:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"2713:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2727:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4445,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:7","memberName":"max","nodeType":"MemberAccess","src":"2735:17:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"nodeType":"IfStatement","src":"2723:105:7","trueBody":{"id":4455,"nodeType":"Block","src":"2754:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2811:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4450,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"2775:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4454,"nodeType":"RevertStatement","src":"2768:49:7"}]}},{"expression":{"arguments":[{"id":4459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"2852:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4457,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:7","typeDescriptions":{}}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4442,"id":4461,"nodeType":"Return","src":"2837:21:7"}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"2362:280:7","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"value","nameLocation":"2674:5:7","nodeType":"VariableDeclaration","scope":4463,"src":"2666:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:7"},"returnParameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"2704:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4440,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:7"},"scope":6117,"src":"2647:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4490,"nodeType":"Block","src":"3222:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3236:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4473,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:7","memberName":"max","nodeType":"MemberAccess","src":"3244:17:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4484,"nodeType":"IfStatement","src":"3232:105:7","trueBody":{"id":4483,"nodeType":"Block","src":"3263:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3320:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4478,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"3284:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4482,"nodeType":"RevertStatement","src":"3277:49:7"}]}},{"expression":{"arguments":[{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"3361:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4485,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:7","typeDescriptions":{}}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4470,"id":4489,"nodeType":"Return","src":"3346:21:7"}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"2871:280:7","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4491,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:7","nodeType":"FunctionDefinition","parameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"value","nameLocation":"3183:5:7","nodeType":"VariableDeclaration","scope":4491,"src":"3175:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:7"},"returnParameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"3213:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4468,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:7"},"scope":6117,"src":"3156:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"3731:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"3745:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4501,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4500,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:7","memberName":"max","nodeType":"MemberAccess","src":"3753:17:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4512,"nodeType":"IfStatement","src":"3741:105:7","trueBody":{"id":4511,"nodeType":"Block","src":"3772:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"3829:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4506,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"3793:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4510,"nodeType":"RevertStatement","src":"3786:49:7"}]}},{"expression":{"arguments":[{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"3870:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4513,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:7","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4498,"id":4517,"nodeType":"Return","src":"3855:21:7"}]},"documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"3380:280:7","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4519,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:7","nodeType":"FunctionDefinition","parameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"3692:5:7","nodeType":"VariableDeclaration","scope":4519,"src":"3684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:7"},"returnParameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4519,"src":"3722:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4496,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:7"},"scope":6117,"src":"3665:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4546,"nodeType":"Block","src":"4240:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4254:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4529,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4528,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:7","memberName":"max","nodeType":"MemberAccess","src":"4262:17:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4540,"nodeType":"IfStatement","src":"4250:105:7","trueBody":{"id":4539,"nodeType":"Block","src":"4281:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4338:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"4302:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4538,"nodeType":"RevertStatement","src":"4295:49:7"}]}},{"expression":{"arguments":[{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4541,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:7","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4526,"id":4545,"nodeType":"Return","src":"4364:21:7"}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"3889:280:7","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4547,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:7","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"value","nameLocation":"4201:5:7","nodeType":"VariableDeclaration","scope":4547,"src":"4193:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:7"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4547,"src":"4231:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4524,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:7"},"scope":6117,"src":"4174:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"4749:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"4763:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4557,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:7","memberName":"max","nodeType":"MemberAccess","src":"4771:17:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"4759:105:7","trueBody":{"id":4567,"nodeType":"Block","src":"4790:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"4847:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"4811:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4566,"nodeType":"RevertStatement","src":"4804:49:7"}]}},{"expression":{"arguments":[{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"4888:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4569,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:7","typeDescriptions":{}}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4554,"id":4573,"nodeType":"Return","src":"4873:21:7"}]},"documentation":{"id":4548,"nodeType":"StructuredDocumentation","src":"4398:280:7","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:7","nodeType":"FunctionDefinition","parameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"value","nameLocation":"4710:5:7","nodeType":"VariableDeclaration","scope":4575,"src":"4702:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:7"},"returnParameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4575,"src":"4740:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4552,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:7"},"scope":6117,"src":"4683:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"5258:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"5272:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4585,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4584,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:7","memberName":"max","nodeType":"MemberAccess","src":"5280:17:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4596,"nodeType":"IfStatement","src":"5268:105:7","trueBody":{"id":4595,"nodeType":"Block","src":"5299:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"5356:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4590,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"5320:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4594,"nodeType":"RevertStatement","src":"5313:49:7"}]}},{"expression":{"arguments":[{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"5397:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4597,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:7","typeDescriptions":{}}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4582,"id":4601,"nodeType":"Return","src":"5382:21:7"}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"4907:280:7","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:7","nodeType":"FunctionDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"value","nameLocation":"5219:5:7","nodeType":"VariableDeclaration","scope":4603,"src":"5211:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:7"},"returnParameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4603,"src":"5249:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4580,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:7"},"scope":6117,"src":"5192:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4630,"nodeType":"Block","src":"5767:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"5781:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4613,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:7","memberName":"max","nodeType":"MemberAccess","src":"5789:17:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4624,"nodeType":"IfStatement","src":"5777:105:7","trueBody":{"id":4623,"nodeType":"Block","src":"5808:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"5865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4618,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"5829:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"RevertStatement","src":"5822:49:7"}]}},{"expression":{"arguments":[{"id":4627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"5906:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4625,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{}}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4610,"id":4629,"nodeType":"Return","src":"5891:21:7"}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"5416:280:7","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4631,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:7","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"value","nameLocation":"5728:5:7","nodeType":"VariableDeclaration","scope":4631,"src":"5720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:7"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4631,"src":"5758:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4608,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:7"},"scope":6117,"src":"5701:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4658,"nodeType":"Block","src":"6276:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"6290:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4641,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4640,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:7","memberName":"max","nodeType":"MemberAccess","src":"6298:17:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4652,"nodeType":"IfStatement","src":"6286:105:7","trueBody":{"id":4651,"nodeType":"Block","src":"6317:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"6374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4646,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"6338:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"RevertStatement","src":"6331:49:7"}]}},{"expression":{"arguments":[{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"6415:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4653,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:7","typeDescriptions":{}}},"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4638,"id":4657,"nodeType":"Return","src":"6400:21:7"}]},"documentation":{"id":4632,"nodeType":"StructuredDocumentation","src":"5925:280:7","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4659,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:7","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"value","nameLocation":"6237:5:7","nodeType":"VariableDeclaration","scope":4659,"src":"6229:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:7"},"returnParameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4659,"src":"6267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4636,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:7"},"scope":6117,"src":"6210:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4686,"nodeType":"Block","src":"6785:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"6799:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4669,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4668,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:7","memberName":"max","nodeType":"MemberAccess","src":"6807:17:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"6795:105:7","trueBody":{"id":4679,"nodeType":"Block","src":"6826:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"6883:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4674,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"6847:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"RevertStatement","src":"6840:49:7"}]}},{"expression":{"arguments":[{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"6924:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4681,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:7","typeDescriptions":{}}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4666,"id":4685,"nodeType":"Return","src":"6909:21:7"}]},"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"6434:280:7","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:7","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"value","nameLocation":"6746:5:7","nodeType":"VariableDeclaration","scope":4687,"src":"6738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:7"},"returnParameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4687,"src":"6776:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4664,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:7"},"scope":6117,"src":"6719:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4714,"nodeType":"Block","src":"7294:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"7308:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4697,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:7","memberName":"max","nodeType":"MemberAccess","src":"7316:17:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4708,"nodeType":"IfStatement","src":"7304:105:7","trueBody":{"id":4707,"nodeType":"Block","src":"7335:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"7392:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"7356:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4706,"nodeType":"RevertStatement","src":"7349:49:7"}]}},{"expression":{"arguments":[{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"7433:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4709,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:7","typeDescriptions":{}}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4694,"id":4713,"nodeType":"Return","src":"7418:21:7"}]},"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"6943:280:7","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4715,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:7","nodeType":"FunctionDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"value","nameLocation":"7255:5:7","nodeType":"VariableDeclaration","scope":4715,"src":"7247:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:7"},"returnParameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4715,"src":"7285:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4692,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:7"},"scope":6117,"src":"7228:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"7803:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"7817:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4725,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:7","memberName":"max","nodeType":"MemberAccess","src":"7825:17:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"7813:105:7","trueBody":{"id":4735,"nodeType":"Block","src":"7844:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"7901:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"7865:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4734,"nodeType":"RevertStatement","src":"7858:49:7"}]}},{"expression":{"arguments":[{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"7942:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4737,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:7","typeDescriptions":{}}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4722,"id":4741,"nodeType":"Return","src":"7927:21:7"}]},"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"7452:280:7","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:7","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"value","nameLocation":"7764:5:7","nodeType":"VariableDeclaration","scope":4743,"src":"7756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:7"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"7794:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4720,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:7"},"scope":6117,"src":"7737:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4770,"nodeType":"Block","src":"8312:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"8326:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4753,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:7","memberName":"max","nodeType":"MemberAccess","src":"8334:17:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4764,"nodeType":"IfStatement","src":"8322:105:7","trueBody":{"id":4763,"nodeType":"Block","src":"8353:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"8410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"8374:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4762,"nodeType":"RevertStatement","src":"8367:49:7"}]}},{"expression":{"arguments":[{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"8451:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4765,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:7","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4750,"id":4769,"nodeType":"Return","src":"8436:21:7"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"7961:280:7","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4771,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:7","nodeType":"FunctionDefinition","parameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"value","nameLocation":"8273:5:7","nodeType":"VariableDeclaration","scope":4771,"src":"8265:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:7"},"returnParameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4771,"src":"8303:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4748,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:7"},"scope":6117,"src":"8246:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4798,"nodeType":"Block","src":"8821:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"8835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4781,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:7","memberName":"max","nodeType":"MemberAccess","src":"8843:17:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"8831:105:7","trueBody":{"id":4791,"nodeType":"Block","src":"8862:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"8919:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"8883:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4790,"nodeType":"RevertStatement","src":"8876:49:7"}]}},{"expression":{"arguments":[{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"8960:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4793,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:7","typeDescriptions":{}}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4778,"id":4797,"nodeType":"Return","src":"8945:21:7"}]},"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"8470:280:7","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:7","nodeType":"FunctionDefinition","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"value","nameLocation":"8782:5:7","nodeType":"VariableDeclaration","scope":4799,"src":"8774:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:7"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"8812:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4776,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:7"},"scope":6117,"src":"8755:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"9330:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"9344:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4809,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4808,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:7","memberName":"max","nodeType":"MemberAccess","src":"9352:17:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"nodeType":"IfStatement","src":"9340:105:7","trueBody":{"id":4819,"nodeType":"Block","src":"9371:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"9428:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9392:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4818,"nodeType":"RevertStatement","src":"9385:49:7"}]}},{"expression":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"9469:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4821,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:7","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4806,"id":4825,"nodeType":"Return","src":"9454:21:7"}]},"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"8979:280:7","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:7","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"value","nameLocation":"9291:5:7","nodeType":"VariableDeclaration","scope":4827,"src":"9283:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:7"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"9321:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4804,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:7"},"scope":6117,"src":"9264:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4854,"nodeType":"Block","src":"9839:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"9853:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4837,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:7","memberName":"max","nodeType":"MemberAccess","src":"9861:17:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"IfStatement","src":"9849:105:7","trueBody":{"id":4847,"nodeType":"Block","src":"9880:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"9937:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9901:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4846,"nodeType":"RevertStatement","src":"9894:49:7"}]}},{"expression":{"arguments":[{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"9978:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4849,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:7","typeDescriptions":{}}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4834,"id":4853,"nodeType":"Return","src":"9963:21:7"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"9488:280:7","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4855,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:7","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"9800:5:7","nodeType":"VariableDeclaration","scope":4855,"src":"9792:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:7"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4855,"src":"9830:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4832,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:7"},"scope":6117,"src":"9773:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4882,"nodeType":"Block","src":"10348:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"10362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4865,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:7","memberName":"max","nodeType":"MemberAccess","src":"10370:17:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"10358:105:7","trueBody":{"id":4875,"nodeType":"Block","src":"10389:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"10446:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"10410:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4874,"nodeType":"RevertStatement","src":"10403:49:7"}]}},{"expression":{"arguments":[{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"10487:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4877,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:7","typeDescriptions":{}}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4862,"id":4881,"nodeType":"Return","src":"10472:21:7"}]},"documentation":{"id":4856,"nodeType":"StructuredDocumentation","src":"9997:280:7","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4883,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:7","nodeType":"FunctionDefinition","parameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"value","nameLocation":"10309:5:7","nodeType":"VariableDeclaration","scope":4883,"src":"10301:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:7"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4883,"src":"10339:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4860,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:7"},"scope":6117,"src":"10282:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4910,"nodeType":"Block","src":"10857:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"10871:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4893,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:7","memberName":"max","nodeType":"MemberAccess","src":"10879:17:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"10867:105:7","trueBody":{"id":4903,"nodeType":"Block","src":"10898:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"10955:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4898,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"10919:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"RevertStatement","src":"10912:49:7"}]}},{"expression":{"arguments":[{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"10996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4905,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:7","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4890,"id":4909,"nodeType":"Return","src":"10981:21:7"}]},"documentation":{"id":4884,"nodeType":"StructuredDocumentation","src":"10506:280:7","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4911,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:7","nodeType":"FunctionDefinition","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"value","nameLocation":"10818:5:7","nodeType":"VariableDeclaration","scope":4911,"src":"10810:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:7"},"returnParameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"10848:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4888,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:7"},"scope":6117,"src":"10791:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4938,"nodeType":"Block","src":"11360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"11374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4921,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:7","memberName":"max","nodeType":"MemberAccess","src":"11382:16:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"11370:103:7","trueBody":{"id":4931,"nodeType":"Block","src":"11400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"11456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4930,"nodeType":"RevertStatement","src":"11414:48:7"}]}},{"expression":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"11496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4933,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:7","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4918,"id":4937,"nodeType":"Return","src":"11482:20:7"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"11015:276:7","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"value","nameLocation":"11322:5:7","nodeType":"VariableDeclaration","scope":4939,"src":"11314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:7"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"11352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4916,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:7"},"scope":6117,"src":"11296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"11860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"11874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4949,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:7","memberName":"max","nodeType":"MemberAccess","src":"11882:16:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"11870:103:7","trueBody":{"id":4959,"nodeType":"Block","src":"11900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"11956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"11921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"RevertStatement","src":"11914:48:7"}]}},{"expression":{"arguments":[{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"11996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4961,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:7","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4946,"id":4965,"nodeType":"Return","src":"11982:20:7"}]},"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"11515:276:7","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"value","nameLocation":"11822:5:7","nodeType":"VariableDeclaration","scope":4967,"src":"11814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:7"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"11852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4944,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:7"},"scope":6117,"src":"11796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"12360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"12374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4977,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:7","memberName":"max","nodeType":"MemberAccess","src":"12382:16:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"12370:103:7","trueBody":{"id":4987,"nodeType":"Block","src":"12400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"12456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"12421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4986,"nodeType":"RevertStatement","src":"12414:48:7"}]}},{"expression":{"arguments":[{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"12496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4989,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:7","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4974,"id":4993,"nodeType":"Return","src":"12482:20:7"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"12015:276:7","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"12322:5:7","nodeType":"VariableDeclaration","scope":4995,"src":"12314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:7"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"12352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4972,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:7"},"scope":6117,"src":"12296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5022,"nodeType":"Block","src":"12860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"12874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5005,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:7","memberName":"max","nodeType":"MemberAccess","src":"12882:16:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"12870:103:7","trueBody":{"id":5015,"nodeType":"Block","src":"12900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"12956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"12921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5014,"nodeType":"RevertStatement","src":"12914:48:7"}]}},{"expression":{"arguments":[{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"12996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5017,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:7","typeDescriptions":{}}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5002,"id":5021,"nodeType":"Return","src":"12982:20:7"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"12515:276:7","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"12822:5:7","nodeType":"VariableDeclaration","scope":5023,"src":"12814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:7"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5023,"src":"12852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5000,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:7"},"scope":6117,"src":"12796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"13360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"13374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5033,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:7","memberName":"max","nodeType":"MemberAccess","src":"13382:16:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"13370:103:7","trueBody":{"id":5043,"nodeType":"Block","src":"13400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"13456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"13421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"13414:48:7"}]}},{"expression":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"13496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5045,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:7","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5030,"id":5049,"nodeType":"Return","src":"13482:20:7"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"13015:276:7","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:7","nodeType":"FunctionDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"value","nameLocation":"13322:5:7","nodeType":"VariableDeclaration","scope":5051,"src":"13314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:7"},"returnParameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"13352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5028,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:7"},"scope":6117,"src":"13296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"13860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"13874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5061,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:7","memberName":"max","nodeType":"MemberAccess","src":"13882:16:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"13870:103:7","trueBody":{"id":5071,"nodeType":"Block","src":"13900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"13956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"13921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"RevertStatement","src":"13914:48:7"}]}},{"expression":{"arguments":[{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"13996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5073,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:7","typeDescriptions":{}}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5058,"id":5077,"nodeType":"Return","src":"13982:20:7"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"13515:276:7","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:7","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"13822:5:7","nodeType":"VariableDeclaration","scope":5079,"src":"13814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:7"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"13852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5056,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:7"},"scope":6117,"src":"13796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"14360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"14374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5089,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:7","memberName":"max","nodeType":"MemberAccess","src":"14382:16:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"14370:103:7","trueBody":{"id":5099,"nodeType":"Block","src":"14400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"14456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"14421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5098,"nodeType":"RevertStatement","src":"14414:48:7"}]}},{"expression":{"arguments":[{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"14496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5101,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:7","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5086,"id":5105,"nodeType":"Return","src":"14482:20:7"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"14015:276:7","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:7","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"14322:5:7","nodeType":"VariableDeclaration","scope":5107,"src":"14314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:7"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"14352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5084,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:7"},"scope":6117,"src":"14296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"14860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"14874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5117,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:7","memberName":"max","nodeType":"MemberAccess","src":"14882:16:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"nodeType":"IfStatement","src":"14870:103:7","trueBody":{"id":5127,"nodeType":"Block","src":"14900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"14956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"14921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5126,"nodeType":"RevertStatement","src":"14914:48:7"}]}},{"expression":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"14996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5129,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:7","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5114,"id":5133,"nodeType":"Return","src":"14982:20:7"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"14515:276:7","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:7","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"14822:5:7","nodeType":"VariableDeclaration","scope":5135,"src":"14814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:7"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"14852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5112,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:7"},"scope":6117,"src":"14796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5162,"nodeType":"Block","src":"15360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"15374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5145,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:7","memberName":"max","nodeType":"MemberAccess","src":"15382:16:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"15370:103:7","trueBody":{"id":5155,"nodeType":"Block","src":"15400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"15456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"15421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"RevertStatement","src":"15414:48:7"}]}},{"expression":{"arguments":[{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"15496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5157,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:7","typeDescriptions":{}}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5142,"id":5161,"nodeType":"Return","src":"15482:20:7"}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"15015:276:7","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:7","nodeType":"FunctionDefinition","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"value","nameLocation":"15322:5:7","nodeType":"VariableDeclaration","scope":5163,"src":"15314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:7"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5163,"src":"15352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5140,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:7"},"scope":6117,"src":"15296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"15860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"15874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5173,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:7","memberName":"max","nodeType":"MemberAccess","src":"15882:16:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"15870:103:7","trueBody":{"id":5183,"nodeType":"Block","src":"15900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"15956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"15921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5182,"nodeType":"RevertStatement","src":"15914:48:7"}]}},{"expression":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"15996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5185,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:7","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5170,"id":5189,"nodeType":"Return","src":"15982:20:7"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"15515:276:7","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:7","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"15822:5:7","nodeType":"VariableDeclaration","scope":5191,"src":"15814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:7"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"15852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5168,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:7"},"scope":6117,"src":"15796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"16360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"16374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5201,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:7","memberName":"max","nodeType":"MemberAccess","src":"16382:16:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5212,"nodeType":"IfStatement","src":"16370:103:7","trueBody":{"id":5211,"nodeType":"Block","src":"16400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"16456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"16421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5210,"nodeType":"RevertStatement","src":"16414:48:7"}]}},{"expression":{"arguments":[{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"16496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5213,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:7","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5198,"id":5217,"nodeType":"Return","src":"16482:20:7"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"16015:276:7","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:7","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"16322:5:7","nodeType":"VariableDeclaration","scope":5219,"src":"16314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:7"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"16352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5196,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:7"},"scope":6117,"src":"16296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"16854:146:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"16868:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5229,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:7","memberName":"max","nodeType":"MemberAccess","src":"16876:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"16864:101:7","trueBody":{"id":5239,"nodeType":"Block","src":"16893:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"16948:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"16914:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"RevertStatement","src":"16907:47:7"}]}},{"expression":{"arguments":[{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"16987:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5241,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:7","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5226,"id":5245,"nodeType":"Return","src":"16974:19:7"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"16515:272:7","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:7","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"16817:5:7","nodeType":"VariableDeclaration","scope":5247,"src":"16809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:7"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"16847:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5224,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:7"},"scope":6117,"src":"16792:208:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"17236:128:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"17250:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5263,"nodeType":"IfStatement","src":"17246:81:7","trueBody":{"id":5262,"nodeType":"Block","src":"17261:66:7","statements":[{"errorCall":{"arguments":[{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"17310:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5258,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"17282:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5261,"nodeType":"RevertStatement","src":"17275:41:7"}]}},{"expression":{"arguments":[{"id":5266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"17351:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:7","typeDescriptions":{}}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5254,"id":5268,"nodeType":"Return","src":"17336:21:7"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"17006:160:7","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:7","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"17197:5:7","nodeType":"VariableDeclaration","scope":5270,"src":"17190:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5249,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:7"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5270,"src":"17227:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:7"},"scope":6117,"src":"17171:193:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5295,"nodeType":"Block","src":"17761:150:7","statements":[{"expression":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17771:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17791:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5279,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:7","typeDescriptions":{}}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5284,"nodeType":"ExpressionStatement","src":"17771:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17811:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17825:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5294,"nodeType":"IfStatement","src":"17807:98:7","trueBody":{"id":5293,"nodeType":"Block","src":"17832:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"17888:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5288,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"17853:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"RevertStatement","src":"17846:48:7"}]}}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"17370:312:7","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5296,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:7","nodeType":"FunctionDefinition","parameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"value","nameLocation":"17712:5:7","nodeType":"VariableDeclaration","scope":5296,"src":"17705:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5272,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:7"},"returnParameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:7","nodeType":"VariableDeclaration","scope":5296,"src":"17742:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5275,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:7"},"scope":6117,"src":"17687:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"18308:150:7","statements":[{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"18318:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"18338:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5305,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:7","typeDescriptions":{}}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5310,"nodeType":"ExpressionStatement","src":"18318:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5302,"src":"18358:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"18372:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5320,"nodeType":"IfStatement","src":"18354:98:7","trueBody":{"id":5319,"nodeType":"Block","src":"18379:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"18435:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5314,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"18400:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5318,"nodeType":"RevertStatement","src":"18393:48:7"}]}}]},"documentation":{"id":5297,"nodeType":"StructuredDocumentation","src":"17917:312:7","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:7","nodeType":"FunctionDefinition","parameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"value","nameLocation":"18259:5:7","nodeType":"VariableDeclaration","scope":5322,"src":"18252:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5298,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:7"},"returnParameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:7","nodeType":"VariableDeclaration","scope":5322,"src":"18289:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5301,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:7"},"scope":6117,"src":"18234:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"18855:150:7","statements":[{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5330,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"18865:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"18885:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5331,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:7","typeDescriptions":{}}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5336,"nodeType":"ExpressionStatement","src":"18865:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"18905:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"18919:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"18901:98:7","trueBody":{"id":5345,"nodeType":"Block","src":"18926:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"18982:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5340,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"18947:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5344,"nodeType":"RevertStatement","src":"18940:48:7"}]}}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"18464:312:7","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:7","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"value","nameLocation":"18806:5:7","nodeType":"VariableDeclaration","scope":5348,"src":"18799:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5324,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:7"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:7","nodeType":"VariableDeclaration","scope":5348,"src":"18836:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5327,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:7"},"scope":6117,"src":"18781:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5373,"nodeType":"Block","src":"19402:150:7","statements":[{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"19412:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"19432:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5357,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:7","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5362,"nodeType":"ExpressionStatement","src":"19412:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"19452:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"19466:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5372,"nodeType":"IfStatement","src":"19448:98:7","trueBody":{"id":5371,"nodeType":"Block","src":"19473:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"19529:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5366,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"19494:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"RevertStatement","src":"19487:48:7"}]}}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"19011:312:7","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5374,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:7","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"value","nameLocation":"19353:5:7","nodeType":"VariableDeclaration","scope":5374,"src":"19346:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5350,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:7"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:7","nodeType":"VariableDeclaration","scope":5374,"src":"19383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5353,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:7"},"scope":6117,"src":"19328:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"19949:150:7","statements":[{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5382,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"19959:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"19979:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5383,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:7","typeDescriptions":{}}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5388,"nodeType":"ExpressionStatement","src":"19959:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"19999:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"20013:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"19995:98:7","trueBody":{"id":5397,"nodeType":"Block","src":"20020:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"20076:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5392,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"20041:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"RevertStatement","src":"20034:48:7"}]}}]},"documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"19558:312:7","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:7","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"value","nameLocation":"19900:5:7","nodeType":"VariableDeclaration","scope":5400,"src":"19893:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5376,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:7"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:7","nodeType":"VariableDeclaration","scope":5400,"src":"19930:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5379,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:7"},"scope":6117,"src":"19875:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5425,"nodeType":"Block","src":"20496:150:7","statements":[{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5408,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"20506:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"20526:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5409,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:7","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5414,"nodeType":"ExpressionStatement","src":"20506:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"20546:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"20560:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"nodeType":"IfStatement","src":"20542:98:7","trueBody":{"id":5423,"nodeType":"Block","src":"20567:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"20623:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5418,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"20588:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5422,"nodeType":"RevertStatement","src":"20581:48:7"}]}}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"20105:312:7","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:7","nodeType":"FunctionDefinition","parameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"value","nameLocation":"20447:5:7","nodeType":"VariableDeclaration","scope":5426,"src":"20440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5402,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:7"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:7","nodeType":"VariableDeclaration","scope":5426,"src":"20477:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5405,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:7"},"scope":6117,"src":"20422:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"21043:150:7","statements":[{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5434,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"21053:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"21073:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5435,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:7","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5440,"nodeType":"ExpressionStatement","src":"21053:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"21093:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"21107:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5450,"nodeType":"IfStatement","src":"21089:98:7","trueBody":{"id":5449,"nodeType":"Block","src":"21114:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"21170:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5444,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"21135:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5448,"nodeType":"RevertStatement","src":"21128:48:7"}]}}]},"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"20652:312:7","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:7","nodeType":"FunctionDefinition","parameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"value","nameLocation":"20994:5:7","nodeType":"VariableDeclaration","scope":5452,"src":"20987:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5428,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:7"},"returnParameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:7","nodeType":"VariableDeclaration","scope":5452,"src":"21024:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5431,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:7"},"scope":6117,"src":"20969:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5477,"nodeType":"Block","src":"21590:150:7","statements":[{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21600:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"21620:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5461,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:7","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5466,"nodeType":"ExpressionStatement","src":"21600:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"21640:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"21654:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"21636:98:7","trueBody":{"id":5475,"nodeType":"Block","src":"21661:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"21717:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5470,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"21682:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5474,"nodeType":"RevertStatement","src":"21675:48:7"}]}}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"21199:312:7","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:7","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"21541:5:7","nodeType":"VariableDeclaration","scope":5478,"src":"21534:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5454,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:7"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:7","nodeType":"VariableDeclaration","scope":5478,"src":"21571:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5457,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:7"},"scope":6117,"src":"21516:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5503,"nodeType":"Block","src":"22137:150:7","statements":[{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"22147:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"22167:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5487,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:7","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5492,"nodeType":"ExpressionStatement","src":"22147:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"22187:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"22201:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5502,"nodeType":"IfStatement","src":"22183:98:7","trueBody":{"id":5501,"nodeType":"Block","src":"22208:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"22264:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5496,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22229:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5500,"nodeType":"RevertStatement","src":"22222:48:7"}]}}]},"documentation":{"id":5479,"nodeType":"StructuredDocumentation","src":"21746:312:7","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5504,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:7","nodeType":"FunctionDefinition","parameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"value","nameLocation":"22088:5:7","nodeType":"VariableDeclaration","scope":5504,"src":"22081:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5480,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:7"},"returnParameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:7","nodeType":"VariableDeclaration","scope":5504,"src":"22118:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5483,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:7"},"scope":6117,"src":"22063:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"22684:150:7","statements":[{"expression":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"22694:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"22714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5513,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:7","typeDescriptions":{}}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5518,"nodeType":"ExpressionStatement","src":"22694:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"22734:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"22748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5528,"nodeType":"IfStatement","src":"22730:98:7","trueBody":{"id":5527,"nodeType":"Block","src":"22755:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"22811:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5522,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"22776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5526,"nodeType":"RevertStatement","src":"22769:48:7"}]}}]},"documentation":{"id":5505,"nodeType":"StructuredDocumentation","src":"22293:312:7","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:7","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"value","nameLocation":"22635:5:7","nodeType":"VariableDeclaration","scope":5530,"src":"22628:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5506,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:7"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5510,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:7","nodeType":"VariableDeclaration","scope":5530,"src":"22665:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5509,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:7"},"scope":6117,"src":"22610:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5555,"nodeType":"Block","src":"23231:150:7","statements":[{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23241:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"23261:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5539,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:7","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5544,"nodeType":"ExpressionStatement","src":"23241:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23281:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"23295:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5554,"nodeType":"IfStatement","src":"23277:98:7","trueBody":{"id":5553,"nodeType":"Block","src":"23302:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"23358:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5548,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"23323:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5552,"nodeType":"RevertStatement","src":"23316:48:7"}]}}]},"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"22840:312:7","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5556,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:7","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"23182:5:7","nodeType":"VariableDeclaration","scope":5556,"src":"23175:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5532,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:7"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:7","nodeType":"VariableDeclaration","scope":5556,"src":"23212:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5535,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:7"},"scope":6117,"src":"23157:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"23778:150:7","statements":[{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5564,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"23788:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"23808:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5565,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:7","typeDescriptions":{}}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5570,"nodeType":"ExpressionStatement","src":"23788:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"23828:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"23842:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5580,"nodeType":"IfStatement","src":"23824:98:7","trueBody":{"id":5579,"nodeType":"Block","src":"23849:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"23905:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5574,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"23870:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5578,"nodeType":"RevertStatement","src":"23863:48:7"}]}}]},"documentation":{"id":5557,"nodeType":"StructuredDocumentation","src":"23387:312:7","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:7","nodeType":"FunctionDefinition","parameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"value","nameLocation":"23729:5:7","nodeType":"VariableDeclaration","scope":5582,"src":"23722:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5558,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:7"},"returnParameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:7","nodeType":"VariableDeclaration","scope":5582,"src":"23759:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5561,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:7"},"scope":6117,"src":"23704:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5607,"nodeType":"Block","src":"24325:150:7","statements":[{"expression":{"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"24335:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"24355:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5591,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:7","typeDescriptions":{}}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5596,"nodeType":"ExpressionStatement","src":"24335:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"24375:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"24389:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5606,"nodeType":"IfStatement","src":"24371:98:7","trueBody":{"id":5605,"nodeType":"Block","src":"24396:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"24452:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5600,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"24417:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5604,"nodeType":"RevertStatement","src":"24410:48:7"}]}}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"23934:312:7","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:7","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"value","nameLocation":"24276:5:7","nodeType":"VariableDeclaration","scope":5608,"src":"24269:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5584,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:7"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:7","nodeType":"VariableDeclaration","scope":5608,"src":"24306:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5587,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:7"},"scope":6117,"src":"24251:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5633,"nodeType":"Block","src":"24872:150:7","statements":[{"expression":{"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24882:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"24902:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5617,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:7","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5622,"nodeType":"ExpressionStatement","src":"24882:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24922:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"24936:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5632,"nodeType":"IfStatement","src":"24918:98:7","trueBody":{"id":5631,"nodeType":"Block","src":"24943:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"24999:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5626,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"24964:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5630,"nodeType":"RevertStatement","src":"24957:48:7"}]}}]},"documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"24481:312:7","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5634,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:7","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"value","nameLocation":"24823:5:7","nodeType":"VariableDeclaration","scope":5634,"src":"24816:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5610,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:7"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:7","nodeType":"VariableDeclaration","scope":5634,"src":"24853:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5613,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:7"},"scope":6117,"src":"24798:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5659,"nodeType":"Block","src":"25419:150:7","statements":[{"expression":{"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5642,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"25429:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"25449:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5643,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:7","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5648,"nodeType":"ExpressionStatement","src":"25429:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"25469:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"25483:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"nodeType":"IfStatement","src":"25465:98:7","trueBody":{"id":5657,"nodeType":"Block","src":"25490:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5637,"src":"25546:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5652,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"25511:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"RevertStatement","src":"25504:48:7"}]}}]},"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"25028:312:7","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:7","nodeType":"FunctionDefinition","parameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"value","nameLocation":"25370:5:7","nodeType":"VariableDeclaration","scope":5660,"src":"25363:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5636,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:7"},"returnParameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:7","nodeType":"VariableDeclaration","scope":5660,"src":"25400:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5639,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:7"},"scope":6117,"src":"25345:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"25966:150:7","statements":[{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5668,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"25976:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"25996:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5669,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:7","typeDescriptions":{}}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5674,"nodeType":"ExpressionStatement","src":"25976:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"26016:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"26030:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"IfStatement","src":"26012:98:7","trueBody":{"id":5683,"nodeType":"Block","src":"26037:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"26093:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5678,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"26058:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5682,"nodeType":"RevertStatement","src":"26051:48:7"}]}}]},"documentation":{"id":5661,"nodeType":"StructuredDocumentation","src":"25575:312:7","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:7","nodeType":"FunctionDefinition","parameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"value","nameLocation":"25917:5:7","nodeType":"VariableDeclaration","scope":5686,"src":"25910:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5662,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:7"},"returnParameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:7","nodeType":"VariableDeclaration","scope":5686,"src":"25947:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5665,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:7"},"scope":6117,"src":"25892:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5711,"nodeType":"Block","src":"26513:150:7","statements":[{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"26523:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"26543:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5695,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:7","typeDescriptions":{}}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5700,"nodeType":"ExpressionStatement","src":"26523:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"26563:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"26577:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5710,"nodeType":"IfStatement","src":"26559:98:7","trueBody":{"id":5709,"nodeType":"Block","src":"26584:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"26640:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5704,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"26605:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5708,"nodeType":"RevertStatement","src":"26598:48:7"}]}}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"26122:312:7","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5712,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:7","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"value","nameLocation":"26464:5:7","nodeType":"VariableDeclaration","scope":5712,"src":"26457:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5688,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:7"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:7","nodeType":"VariableDeclaration","scope":5712,"src":"26494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5691,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:7"},"scope":6117,"src":"26439:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"27060:150:7","statements":[{"expression":{"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5720,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27070:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"27090:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5721,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:7","typeDescriptions":{}}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5726,"nodeType":"ExpressionStatement","src":"27070:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"27110:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"27124:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"27106:98:7","trueBody":{"id":5735,"nodeType":"Block","src":"27131:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"27187:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5730,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"27152:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5734,"nodeType":"RevertStatement","src":"27145:48:7"}]}}]},"documentation":{"id":5713,"nodeType":"StructuredDocumentation","src":"26669:312:7","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:7","nodeType":"FunctionDefinition","parameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"value","nameLocation":"27011:5:7","nodeType":"VariableDeclaration","scope":5738,"src":"27004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5714,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:7"},"returnParameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:7","nodeType":"VariableDeclaration","scope":5738,"src":"27041:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5717,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:7"},"scope":6117,"src":"26986:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"27607:150:7","statements":[{"expression":{"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5746,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"27617:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"27637:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5747,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:7","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5752,"nodeType":"ExpressionStatement","src":"27617:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"27657:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"27671:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"27653:98:7","trueBody":{"id":5761,"nodeType":"Block","src":"27678:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"27734:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5756,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"27699:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5760,"nodeType":"RevertStatement","src":"27692:48:7"}]}}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"27216:312:7","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:7","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"value","nameLocation":"27558:5:7","nodeType":"VariableDeclaration","scope":5764,"src":"27551:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5740,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:7"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:7","nodeType":"VariableDeclaration","scope":5764,"src":"27588:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5743,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:7"},"scope":6117,"src":"27533:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5789,"nodeType":"Block","src":"28147:148:7","statements":[{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5772,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28157:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"28176:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5773,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:7","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5778,"nodeType":"ExpressionStatement","src":"28157:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"28196:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"28210:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5788,"nodeType":"IfStatement","src":"28192:97:7","trueBody":{"id":5787,"nodeType":"Block","src":"28217:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"28272:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5782,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"28238:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5786,"nodeType":"RevertStatement","src":"28231:47:7"}]}}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"27763:307:7","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:7","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"28099:5:7","nodeType":"VariableDeclaration","scope":5790,"src":"28092:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5766,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:7"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:7","nodeType":"VariableDeclaration","scope":5790,"src":"28129:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5769,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:7"},"scope":6117,"src":"28075:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"28685:148:7","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"28695:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"28714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5799,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:7","typeDescriptions":{}}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5804,"nodeType":"ExpressionStatement","src":"28695:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"28734:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"28748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5814,"nodeType":"IfStatement","src":"28730:97:7","trueBody":{"id":5813,"nodeType":"Block","src":"28755:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"28810:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5808,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"28776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5812,"nodeType":"RevertStatement","src":"28769:47:7"}]}}]},"documentation":{"id":5791,"nodeType":"StructuredDocumentation","src":"28301:307:7","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:7","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"value","nameLocation":"28637:5:7","nodeType":"VariableDeclaration","scope":5816,"src":"28630:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5792,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:7"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:7","nodeType":"VariableDeclaration","scope":5816,"src":"28667:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5795,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:7"},"scope":6117,"src":"28613:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5841,"nodeType":"Block","src":"29223:148:7","statements":[{"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"29233:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"29252:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5825,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:7","typeDescriptions":{}}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5830,"nodeType":"ExpressionStatement","src":"29233:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"29272:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"29286:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"29268:97:7","trueBody":{"id":5839,"nodeType":"Block","src":"29293:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"29348:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5834,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"29314:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5838,"nodeType":"RevertStatement","src":"29307:47:7"}]}}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"28839:307:7","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:7","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"value","nameLocation":"29175:5:7","nodeType":"VariableDeclaration","scope":5842,"src":"29168:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5818,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:7"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:7","nodeType":"VariableDeclaration","scope":5842,"src":"29205:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5821,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:7"},"scope":6117,"src":"29151:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5867,"nodeType":"Block","src":"29761:148:7","statements":[{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5850,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"29771:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"29790:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5851,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:7","typeDescriptions":{}}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5856,"nodeType":"ExpressionStatement","src":"29771:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"29810:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"29824:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5866,"nodeType":"IfStatement","src":"29806:97:7","trueBody":{"id":5865,"nodeType":"Block","src":"29831:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"29886:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5860,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"29852:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5864,"nodeType":"RevertStatement","src":"29845:47:7"}]}}]},"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"29377:307:7","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5868,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:7","nodeType":"FunctionDefinition","parameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"value","nameLocation":"29713:5:7","nodeType":"VariableDeclaration","scope":5868,"src":"29706:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5844,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:7"},"returnParameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:7","nodeType":"VariableDeclaration","scope":5868,"src":"29743:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5847,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:7"},"scope":6117,"src":"29689:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5893,"nodeType":"Block","src":"30299:148:7","statements":[{"expression":{"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5876,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30309:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"30328:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5877,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:7","typeDescriptions":{}}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5882,"nodeType":"ExpressionStatement","src":"30309:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30348:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"30362:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"30344:97:7","trueBody":{"id":5891,"nodeType":"Block","src":"30369:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"30424:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5886,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"30390:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5890,"nodeType":"RevertStatement","src":"30383:47:7"}]}}]},"documentation":{"id":5869,"nodeType":"StructuredDocumentation","src":"29915:307:7","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5894,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:7","nodeType":"FunctionDefinition","parameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"value","nameLocation":"30251:5:7","nodeType":"VariableDeclaration","scope":5894,"src":"30244:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5870,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:7"},"returnParameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:7","nodeType":"VariableDeclaration","scope":5894,"src":"30281:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5873,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:7"},"scope":6117,"src":"30227:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5919,"nodeType":"Block","src":"30837:148:7","statements":[{"expression":{"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"30847:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"30866:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5903,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:7","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5908,"nodeType":"ExpressionStatement","src":"30847:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"30886:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"30900:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5918,"nodeType":"IfStatement","src":"30882:97:7","trueBody":{"id":5917,"nodeType":"Block","src":"30907:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"30962:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5912,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"30928:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5916,"nodeType":"RevertStatement","src":"30921:47:7"}]}}]},"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"30453:307:7","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5920,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:7","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"value","nameLocation":"30789:5:7","nodeType":"VariableDeclaration","scope":5920,"src":"30782:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5896,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:7"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:7","nodeType":"VariableDeclaration","scope":5920,"src":"30819:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5899,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:7"},"scope":6117,"src":"30765:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5945,"nodeType":"Block","src":"31375:148:7","statements":[{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5928,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31385:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"31404:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5929,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:7","typeDescriptions":{}}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5934,"nodeType":"ExpressionStatement","src":"31385:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"31424:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"31438:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5944,"nodeType":"IfStatement","src":"31420:97:7","trueBody":{"id":5943,"nodeType":"Block","src":"31445:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"31500:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5938,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"31466:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5942,"nodeType":"RevertStatement","src":"31459:47:7"}]}}]},"documentation":{"id":5921,"nodeType":"StructuredDocumentation","src":"30991:307:7","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5946,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:7","nodeType":"FunctionDefinition","parameters":{"id":5924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"value","nameLocation":"31327:5:7","nodeType":"VariableDeclaration","scope":5946,"src":"31320:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5922,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:7"},"returnParameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:7","nodeType":"VariableDeclaration","scope":5946,"src":"31357:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5925,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:7"},"scope":6117,"src":"31303:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5971,"nodeType":"Block","src":"31913:148:7","statements":[{"expression":{"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"31923:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"31942:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5955,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:7","typeDescriptions":{}}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5960,"nodeType":"ExpressionStatement","src":"31923:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5952,"src":"31962:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"31976:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5970,"nodeType":"IfStatement","src":"31958:97:7","trueBody":{"id":5969,"nodeType":"Block","src":"31983:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"32038:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5964,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"32004:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5968,"nodeType":"RevertStatement","src":"31997:47:7"}]}}]},"documentation":{"id":5947,"nodeType":"StructuredDocumentation","src":"31529:307:7","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5972,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:7","nodeType":"FunctionDefinition","parameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"value","nameLocation":"31865:5:7","nodeType":"VariableDeclaration","scope":5972,"src":"31858:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5948,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:7"},"returnParameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:7","nodeType":"VariableDeclaration","scope":5972,"src":"31895:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5951,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:7"},"scope":6117,"src":"31841:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5997,"nodeType":"Block","src":"32451:148:7","statements":[{"expression":{"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"32461:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"32480:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5981,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:7","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5986,"nodeType":"ExpressionStatement","src":"32461:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"32500:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"32514:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"32496:97:7","trueBody":{"id":5995,"nodeType":"Block","src":"32521:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"32576:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5990,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"32542:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"32535:47:7"}]}}]},"documentation":{"id":5973,"nodeType":"StructuredDocumentation","src":"32067:307:7","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5998,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:7","nodeType":"FunctionDefinition","parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"value","nameLocation":"32403:5:7","nodeType":"VariableDeclaration","scope":5998,"src":"32396:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5974,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:7"},"returnParameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:7","nodeType":"VariableDeclaration","scope":5998,"src":"32433:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5977,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:7"},"scope":6117,"src":"32379:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6023,"nodeType":"Block","src":"32989:148:7","statements":[{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6006,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"32999:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"33018:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6007,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:7","typeDescriptions":{}}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6012,"nodeType":"ExpressionStatement","src":"32999:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"33038:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"33052:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6022,"nodeType":"IfStatement","src":"33034:97:7","trueBody":{"id":6021,"nodeType":"Block","src":"33059:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"33114:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6016,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"33080:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6020,"nodeType":"RevertStatement","src":"33073:47:7"}]}}]},"documentation":{"id":5999,"nodeType":"StructuredDocumentation","src":"32605:307:7","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:7","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"value","nameLocation":"32941:5:7","nodeType":"VariableDeclaration","scope":6024,"src":"32934:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6000,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:7"},"returnParameters":{"id":6005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:7","nodeType":"VariableDeclaration","scope":6024,"src":"32971:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6003,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:7"},"scope":6117,"src":"32917:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"33527:148:7","statements":[{"expression":{"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"33537:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"33556:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6033,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:7","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6038,"nodeType":"ExpressionStatement","src":"33537:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"33576:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"33590:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6048,"nodeType":"IfStatement","src":"33572:97:7","trueBody":{"id":6047,"nodeType":"Block","src":"33597:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"33652:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6042,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"33618:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6046,"nodeType":"RevertStatement","src":"33611:47:7"}]}}]},"documentation":{"id":6025,"nodeType":"StructuredDocumentation","src":"33143:307:7","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:7","nodeType":"FunctionDefinition","parameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"value","nameLocation":"33479:5:7","nodeType":"VariableDeclaration","scope":6050,"src":"33472:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6026,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:7"},"returnParameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6030,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:7","nodeType":"VariableDeclaration","scope":6050,"src":"33509:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6029,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:7"},"scope":6117,"src":"33455:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6075,"nodeType":"Block","src":"34058:146:7","statements":[{"expression":{"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6058,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34068:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"34086:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6059,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:7","typeDescriptions":{}}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6064,"nodeType":"ExpressionStatement","src":"34068:24:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"34106:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"34120:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"34102:96:7","trueBody":{"id":6073,"nodeType":"Block","src":"34127:71:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"34181:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6068,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"34148:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6072,"nodeType":"RevertStatement","src":"34141:46:7"}]}}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"33681:302:7","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:7","nodeType":"FunctionDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"34011:5:7","nodeType":"VariableDeclaration","scope":6076,"src":"34004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6052,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:7"},"returnParameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:7","nodeType":"VariableDeclaration","scope":6076,"src":"34041:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6055,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:7"},"scope":6117,"src":"33988:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6105,"nodeType":"Block","src":"34444:250:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"34557:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:7","memberName":"max","nodeType":"MemberAccess","src":"34573:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6085,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:7","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6099,"nodeType":"IfStatement","src":"34553:105:7","trueBody":{"id":6098,"nodeType":"Block","src":"34592:66:7","statements":[{"errorCall":{"arguments":[{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"34641:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6094,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"34613:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"RevertStatement","src":"34606:41:7"}]}},{"expression":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"34681:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6100,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:7","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6083,"id":6104,"nodeType":"Return","src":"34667:20:7"}]},"documentation":{"id":6077,"nodeType":"StructuredDocumentation","src":"34210:165:7","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:7","nodeType":"FunctionDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6079,"mutability":"mutable","name":"value","nameLocation":"34406:5:7","nodeType":"VariableDeclaration","scope":6106,"src":"34398:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6078,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:7"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6106,"src":"34436:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6081,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:7"},"scope":6117,"src":"34380:314:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6115,"nodeType":"Block","src":"34853:87:7","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:7","statements":[{"nodeType":"YulAssignment","src":"34902:22:7","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:7"},"nodeType":"YulFunctionCall","src":"34914:9:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:7"},"nodeType":"YulFunctionCall","src":"34907:17:7"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6109,"isOffset":false,"isSlot":false,"src":"34921:1:7","valueSize":1},{"declaration":6112,"isOffset":false,"isSlot":false,"src":"34902:1:7","valueSize":1}],"flags":["memory-safe"],"id":6114,"nodeType":"InlineAssembly","src":"34863:71:7"}]},"documentation":{"id":6107,"nodeType":"StructuredDocumentation","src":"34700:90:7","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6116,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:7","nodeType":"FunctionDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"b","nameLocation":"34816:1:7","nodeType":"VariableDeclaration","scope":6116,"src":"34811:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6108,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:7"},"returnParameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"u","nameLocation":"34850:1:7","nodeType":"VariableDeclaration","scope":6116,"src":"34842:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:7"},"scope":6117,"src":"34795:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6118,"src":"769:34173:7","usedErrors":[4362,4367,4374,4379],"usedEvents":[]}],"src":"192:34751:7"},"id":7},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6117],"SignedMath":[6261]},"id":6262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6119,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6262,"sourceUnit":6118,"src":"135:40:8","symbolAliases":[{"foreign":{"id":6120,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"143:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"177:80:8","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6261,"linearizedBaseContracts":[6261],"name":"SignedMath","nameLocation":"266:10:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":6151,"nodeType":"Block","src":"746:215:8","statements":[{"id":6150,"nodeType":"UncheckedBlock","src":"756:199:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6134,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"894:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"900:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"904:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6143,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"932:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6141,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"916:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6117_$","typeString":"type(library SafeCast)"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"916:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:8","typeDescriptions":{}}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6133,"id":6149,"nodeType":"Return","src":"887:57:8"}]}]},"documentation":{"id":6123,"nodeType":"StructuredDocumentation","src":"283:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6152,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:8","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"condition","nameLocation":"684:9:8","nodeType":"VariableDeclaration","scope":6152,"src":"679:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6124,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6127,"mutability":"mutable","name":"a","nameLocation":"702:1:8","nodeType":"VariableDeclaration","scope":6152,"src":"695:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6126,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6129,"mutability":"mutable","name":"b","nameLocation":"712:1:8","nodeType":"VariableDeclaration","scope":6152,"src":"705:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6128,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:8"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6152,"src":"738:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6131,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:8"},"scope":6261,"src":"662:299:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"1102:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"1127:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1131:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"1134:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"1137:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6162,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"1119:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6161,"id":6169,"nodeType":"Return","src":"1112:27:8"}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"967:66:8","text":" @dev Returns the largest of two signed numbers."},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:8","nodeType":"FunctionDefinition","parameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"a","nameLocation":"1058:1:8","nodeType":"VariableDeclaration","scope":6171,"src":"1051:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6154,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6157,"mutability":"mutable","name":"b","nameLocation":"1068:1:8","nodeType":"VariableDeclaration","scope":6171,"src":"1061:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6156,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:8"},"returnParameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"1094:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6159,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:8"},"scope":6261,"src":"1038:108:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"1288:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"1313:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1317:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"1320:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6186,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"1323:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6181,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"1305:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6180,"id":6188,"nodeType":"Return","src":"1298:27:8"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"1152:67:8","text":" @dev Returns the smallest of two signed numbers."},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:8","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"a","nameLocation":"1244:1:8","nodeType":"VariableDeclaration","scope":6190,"src":"1237:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6173,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6176,"mutability":"mutable","name":"b","nameLocation":"1254:1:8","nodeType":"VariableDeclaration","scope":6190,"src":"1247:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:8"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6190,"src":"1280:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6178,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:8"},"scope":6261,"src":"1224:108:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"1537:162:8","statements":[{"assignments":[6201],"declarations":[{"constant":false,"id":6201,"mutability":"mutable","name":"x","nameLocation":"1606:1:8","nodeType":"VariableDeclaration","scope":6233,"src":"1599:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6200,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6214,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"1611:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"1615:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"1622:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6207,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"1626:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:8"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"1651:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6220,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"1671:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:8","typeDescriptions":{}}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6216,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:8","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"1685:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"1689:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6199,"id":6232,"nodeType":"Return","src":"1644:48:8"}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"1338:126:8","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:8","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"a","nameLocation":"1493:1:8","nodeType":"VariableDeclaration","scope":6234,"src":"1486:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"b","nameLocation":"1503:1:8","nodeType":"VariableDeclaration","scope":6234,"src":"1496:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6194,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:8"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6234,"src":"1529:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6197,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:8"},"scope":6261,"src":"1469:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"1843:767:8","statements":[{"id":6258,"nodeType":"UncheckedBlock","src":"1853:751:8","statements":[{"assignments":[6243],"declarations":[{"constant":false,"id":6243,"mutability":"mutable","name":"mask","nameLocation":"2424:4:8","nodeType":"VariableDeclaration","scope":6258,"src":"2417:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6242,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6247,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6244,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"2431:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6250,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"2576:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6251,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"2580:4:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6254,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"2588:4:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:8","typeDescriptions":{}}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6241,"id":6257,"nodeType":"Return","src":"2560:33:8"}]}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"1705:78:8","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:8","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"n","nameLocation":"1808:1:8","nodeType":"VariableDeclaration","scope":6260,"src":"1801:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6236,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:8"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6260,"src":"1834:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:8"},"scope":6261,"src":"1788:822:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6262,"src":"258:2354:8","usedErrors":[],"usedEvents":[]}],"src":"109:2504:8"},"id":8},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[6283],"IUniswapV3PoolActions":[6393],"IUniswapV3PoolDerivedState":[6424],"IUniswapV3PoolEvents":[6543],"IUniswapV3PoolImmutables":[6583],"IUniswapV3PoolOwnerActions":[6609],"IUniswapV3PoolState":[6717]},"id":6284,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6263,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:9"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":6264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6584,"src":"71:45:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":6265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6718,"src":"117:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":6266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6425,"src":"158:47:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":6267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6394,"src":"206:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":6268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6610,"src":"249:47:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":6269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6284,"sourceUnit":6544,"src":"297:41:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6271,"name":"IUniswapV3PoolImmutables","nameLocations":["637:24:9"],"nodeType":"IdentifierPath","referencedDeclaration":6583,"src":"637:24:9"},"id":6272,"nodeType":"InheritanceSpecifier","src":"637:24:9"},{"baseName":{"id":6273,"name":"IUniswapV3PoolState","nameLocations":["667:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":6717,"src":"667:19:9"},"id":6274,"nodeType":"InheritanceSpecifier","src":"667:19:9"},{"baseName":{"id":6275,"name":"IUniswapV3PoolDerivedState","nameLocations":["692:26:9"],"nodeType":"IdentifierPath","referencedDeclaration":6424,"src":"692:26:9"},"id":6276,"nodeType":"InheritanceSpecifier","src":"692:26:9"},{"baseName":{"id":6277,"name":"IUniswapV3PoolActions","nameLocations":["724:21:9"],"nodeType":"IdentifierPath","referencedDeclaration":6393,"src":"724:21:9"},"id":6278,"nodeType":"InheritanceSpecifier","src":"724:21:9"},{"baseName":{"id":6279,"name":"IUniswapV3PoolOwnerActions","nameLocations":["751:26:9"],"nodeType":"IdentifierPath","referencedDeclaration":6609,"src":"751:26:9"},"id":6280,"nodeType":"InheritanceSpecifier","src":"751:26:9"},{"baseName":{"id":6281,"name":"IUniswapV3PoolEvents","nameLocations":["783:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":6543,"src":"783:20:9"},"id":6282,"nodeType":"InheritanceSpecifier","src":"783:20:9"}],"canonicalName":"IUniswapV3Pool","contractDependencies":[],"contractKind":"interface","documentation":{"id":6270,"nodeType":"StructuredDocumentation","src":"340:265:9","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":6283,"linearizedBaseContracts":[6283,6543,6609,6393,6424,6717,6583],"name":"IUniswapV3Pool","nameLocation":"615:14:9","nodeType":"ContractDefinition","nodes":[],"scope":6284,"src":"605:203:9","usedErrors":[],"usedEvents":[6434,6451,6466,6481,6498,6513,6520,6531,6542]}],"src":"45:764:9"},"id":9},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[6297]},"id":6298,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6285,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":6286,"nodeType":"StructuredDocumentation","src":"71:144:10","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":6297,"linearizedBaseContracts":[6297],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"254:898:10","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":6296,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:10","nodeType":"FunctionDefinition","parameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:10","nodeType":"VariableDeclaration","scope":6296,"src":"1197:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6288,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6291,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:10","nodeType":"VariableDeclaration","scope":6296,"src":"1226:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6290,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6293,"mutability":"mutable","name":"data","nameLocation":"1270:4:10","nodeType":"VariableDeclaration","scope":6296,"src":"1255:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6292,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:10"},"returnParameters":{"id":6295,"nodeType":"ParameterList","parameters":[],"src":"1289:0:10"},"scope":6297,"src":"1157:133:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6298,"src":"215:1077:10","usedErrors":[],"usedEvents":[]}],"src":"45:1248:10"},"id":10},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[6393]},"id":6394,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6299,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":6300,"nodeType":"StructuredDocumentation","src":"71:102:11","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":6393,"linearizedBaseContracts":[6393],"name":"IUniswapV3PoolActions","nameLocation":"183:21:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6301,"nodeType":"StructuredDocumentation","src":"211:206:11","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":6306,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"431:10:11","nodeType":"FunctionDefinition","parameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"450:12:11","nodeType":"VariableDeclaration","scope":6306,"src":"442:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6302,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:11"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[],"src":"472:0:11"},"scope":6393,"src":"422:51:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6307,"nodeType":"StructuredDocumentation","src":"479:1029:11","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":6324,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1522:4:11","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"recipient","nameLocation":"1544:9:11","nodeType":"VariableDeclaration","scope":6324,"src":"1536:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6308,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6311,"mutability":"mutable","name":"tickLower","nameLocation":"1569:9:11","nodeType":"VariableDeclaration","scope":6324,"src":"1563:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6310,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6313,"mutability":"mutable","name":"tickUpper","nameLocation":"1594:9:11","nodeType":"VariableDeclaration","scope":6324,"src":"1588:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6312,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6315,"mutability":"mutable","name":"amount","nameLocation":"1621:6:11","nodeType":"VariableDeclaration","scope":6324,"src":"1613:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6314,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6317,"mutability":"mutable","name":"data","nameLocation":"1652:4:11","nodeType":"VariableDeclaration","scope":6324,"src":"1637:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6316,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:11"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"amount0","nameLocation":"1689:7:11","nodeType":"VariableDeclaration","scope":6324,"src":"1681:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6322,"mutability":"mutable","name":"amount1","nameLocation":"1706:7:11","nodeType":"VariableDeclaration","scope":6324,"src":"1698:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:11"},"scope":6393,"src":"1513:202:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6325,"nodeType":"StructuredDocumentation","src":"1721:1053:11","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":6342,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2788:7:11","nodeType":"FunctionDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"recipient","nameLocation":"2813:9:11","nodeType":"VariableDeclaration","scope":6342,"src":"2805:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6326,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6329,"mutability":"mutable","name":"tickLower","nameLocation":"2838:9:11","nodeType":"VariableDeclaration","scope":6342,"src":"2832:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6328,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6331,"mutability":"mutable","name":"tickUpper","nameLocation":"2863:9:11","nodeType":"VariableDeclaration","scope":6342,"src":"2857:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6330,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6333,"mutability":"mutable","name":"amount0Requested","nameLocation":"2890:16:11","nodeType":"VariableDeclaration","scope":6342,"src":"2882:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6332,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6335,"mutability":"mutable","name":"amount1Requested","nameLocation":"2924:16:11","nodeType":"VariableDeclaration","scope":6342,"src":"2916:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6334,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:11"},"returnParameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"amount0","nameLocation":"2973:7:11","nodeType":"VariableDeclaration","scope":6342,"src":"2965:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6337,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6340,"mutability":"mutable","name":"amount1","nameLocation":"2990:7:11","nodeType":"VariableDeclaration","scope":6342,"src":"2982:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6339,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:11"},"scope":6393,"src":"2779:220:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"3005:631:11","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":6356,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3650:4:11","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"tickLower","nameLocation":"3670:9:11","nodeType":"VariableDeclaration","scope":6356,"src":"3664:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6344,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6347,"mutability":"mutable","name":"tickUpper","nameLocation":"3695:9:11","nodeType":"VariableDeclaration","scope":6356,"src":"3689:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6346,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6349,"mutability":"mutable","name":"amount","nameLocation":"3722:6:11","nodeType":"VariableDeclaration","scope":6356,"src":"3714:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6348,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:11"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"amount0","nameLocation":"3761:7:11","nodeType":"VariableDeclaration","scope":6356,"src":"3753:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6354,"mutability":"mutable","name":"amount1","nameLocation":"3778:7:11","nodeType":"VariableDeclaration","scope":6356,"src":"3770:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:11"},"scope":6393,"src":"3641:146:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"3793:1015:11","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":6374,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4822:4:11","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"recipient","nameLocation":"4844:9:11","nodeType":"VariableDeclaration","scope":6374,"src":"4836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6358,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6361,"mutability":"mutable","name":"zeroForOne","nameLocation":"4868:10:11","nodeType":"VariableDeclaration","scope":6374,"src":"4863:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6360,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6363,"mutability":"mutable","name":"amountSpecified","nameLocation":"4895:15:11","nodeType":"VariableDeclaration","scope":6374,"src":"4888:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6362,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6365,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"4928:17:11","nodeType":"VariableDeclaration","scope":6374,"src":"4920:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6364,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6367,"mutability":"mutable","name":"data","nameLocation":"4970:4:11","nodeType":"VariableDeclaration","scope":6374,"src":"4955:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6366,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:11"},"returnParameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"amount0","nameLocation":"5006:7:11","nodeType":"VariableDeclaration","scope":6374,"src":"4999:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6369,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6372,"mutability":"mutable","name":"amount1","nameLocation":"5022:7:11","nodeType":"VariableDeclaration","scope":6374,"src":"5015:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6371,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:11"},"scope":6393,"src":"4813:218:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6375,"nodeType":"StructuredDocumentation","src":"5037:657:11","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":6386,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"5708:5:11","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"recipient","nameLocation":"5731:9:11","nodeType":"VariableDeclaration","scope":6386,"src":"5723:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6376,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6379,"mutability":"mutable","name":"amount0","nameLocation":"5758:7:11","nodeType":"VariableDeclaration","scope":6386,"src":"5750:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6381,"mutability":"mutable","name":"amount1","nameLocation":"5783:7:11","nodeType":"VariableDeclaration","scope":6386,"src":"5775:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6383,"mutability":"mutable","name":"data","nameLocation":"5815:4:11","nodeType":"VariableDeclaration","scope":6386,"src":"5800:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6382,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:11"},"returnParameters":{"id":6385,"nodeType":"ParameterList","parameters":[],"src":"5834:0:11"},"scope":6393,"src":"5699:136:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"5841:367:11","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":6392,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nameLocation":"6222:34:11","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"6264:26:11","nodeType":"VariableDeclaration","scope":6392,"src":"6257:33:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6388,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:11"},"returnParameters":{"id":6391,"nodeType":"ParameterList","parameters":[],"src":"6300:0:11"},"scope":6393,"src":"6213:88:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6394,"src":"173:6130:11","usedErrors":[],"usedEvents":[]}],"src":"45:6259:11"},"id":11},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[6424]},"id":6425,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6395,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolDerivedState","contractDependencies":[],"contractKind":"interface","documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"71:222:12","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":6424,"linearizedBaseContracts":[6424],"name":"IUniswapV3PoolDerivedState","nameLocation":"303:26:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6397,"nodeType":"StructuredDocumentation","src":"336:1045:12","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":6409,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nameLocation":"1395:7:12","nodeType":"FunctionDefinition","parameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"secondsAgos","nameLocation":"1421:11:12","nodeType":"VariableDeclaration","scope":6409,"src":"1403:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":6398,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6399,"nodeType":"ArrayTypeName","src":"1403:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:12"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"tickCumulatives","nameLocation":"1496:15:12","nodeType":"VariableDeclaration","scope":6409,"src":"1481:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":6402,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6403,"nodeType":"ArrayTypeName","src":"1481:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":6407,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nameLocation":"1530:34:12","nodeType":"VariableDeclaration","scope":6409,"src":"1513:51:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":6405,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":6406,"nodeType":"ArrayTypeName","src":"1513:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:12"},"scope":6424,"src":"1386:180:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"1572:771:12","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":6423,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nameLocation":"2357:25:12","nodeType":"FunctionDefinition","parameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"tickLower","nameLocation":"2389:9:12","nodeType":"VariableDeclaration","scope":6423,"src":"2383:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6411,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6414,"mutability":"mutable","name":"tickUpper","nameLocation":"2406:9:12","nodeType":"VariableDeclaration","scope":6423,"src":"2400:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6413,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:12"},"returnParameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6417,"mutability":"mutable","name":"tickCumulativeInside","nameLocation":"2483:20:12","nodeType":"VariableDeclaration","scope":6423,"src":"2477:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6416,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":6419,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nameLocation":"2525:29:12","nodeType":"VariableDeclaration","scope":6423,"src":"2517:37:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6418,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6421,"mutability":"mutable","name":"secondsInside","nameLocation":"2575:13:12","nodeType":"VariableDeclaration","scope":6423,"src":"2568:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6420,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:12"},"scope":6424,"src":"2348:251:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6425,"src":"293:2308:12","usedErrors":[],"usedEvents":[]}],"src":"45:2557:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[6543]},"id":6544,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6426,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":6427,"nodeType":"StructuredDocumentation","src":"71:88:13","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":6543,"linearizedBaseContracts":[6543],"name":"IUniswapV3PoolEvents","nameLocation":"169:20:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"196:344:13","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"eventSelector":"98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95","id":6434,"name":"Initialize","nameLocation":"551:10:13","nodeType":"EventDefinition","parameters":{"id":6433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"570:12:13","nodeType":"VariableDeclaration","scope":6434,"src":"562:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6429,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6432,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"590:4:13","nodeType":"VariableDeclaration","scope":6434,"src":"584:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6431,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:13"},"src":"545:51:13"},{"anonymous":false,"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"602:551:13","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"eventSelector":"7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde","id":6451,"name":"Mint","nameLocation":"1164:4:13","nodeType":"EventDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1186:6:13","nodeType":"VariableDeclaration","scope":6451,"src":"1178:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6436,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6439,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1218:5:13","nodeType":"VariableDeclaration","scope":6451,"src":"1202:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6438,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6441,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1247:9:13","nodeType":"VariableDeclaration","scope":6451,"src":"1233:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6440,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6443,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"1280:9:13","nodeType":"VariableDeclaration","scope":6451,"src":"1266:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6442,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6445,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1307:6:13","nodeType":"VariableDeclaration","scope":6451,"src":"1299:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6444,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6447,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1331:7:13","nodeType":"VariableDeclaration","scope":6451,"src":"1323:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6449,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1356:7:13","nodeType":"VariableDeclaration","scope":6451,"src":"1348:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:13"},"src":"1158:212:13"},{"anonymous":false,"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"1376:493:13","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"eventSelector":"70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0","id":6466,"name":"Collect","nameLocation":"1880:7:13","nodeType":"EventDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1913:5:13","nodeType":"VariableDeclaration","scope":6466,"src":"1897:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6453,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6456,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1936:9:13","nodeType":"VariableDeclaration","scope":6466,"src":"1928:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6455,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6458,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1969:9:13","nodeType":"VariableDeclaration","scope":6466,"src":"1955:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6457,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6460,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2002:9:13","nodeType":"VariableDeclaration","scope":6466,"src":"1988:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6459,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6462,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2029:7:13","nodeType":"VariableDeclaration","scope":6466,"src":"2021:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6461,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6464,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2054:7:13","nodeType":"VariableDeclaration","scope":6466,"src":"2046:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6463,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:13"},"src":"1874:194:13"},{"anonymous":false,"documentation":{"id":6467,"nodeType":"StructuredDocumentation","src":"2074:523:13","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"eventSelector":"0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c","id":6481,"name":"Burn","nameLocation":"2608:4:13","nodeType":"EventDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6469,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2638:5:13","nodeType":"VariableDeclaration","scope":6481,"src":"2622:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6468,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6471,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"2667:9:13","nodeType":"VariableDeclaration","scope":6481,"src":"2653:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6470,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6473,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2700:9:13","nodeType":"VariableDeclaration","scope":6481,"src":"2686:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6472,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6475,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:13","nodeType":"VariableDeclaration","scope":6481,"src":"2719:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6474,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6477,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2751:7:13","nodeType":"VariableDeclaration","scope":6481,"src":"2743:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6479,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2776:7:13","nodeType":"VariableDeclaration","scope":6481,"src":"2768:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:13"},"src":"2602:188:13"},{"anonymous":false,"documentation":{"id":6482,"nodeType":"StructuredDocumentation","src":"2796:600:13","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"eventSelector":"c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67","id":6498,"name":"Swap","nameLocation":"3407:4:13","nodeType":"EventDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6484,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3437:6:13","nodeType":"VariableDeclaration","scope":6498,"src":"3421:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6483,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6486,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3469:9:13","nodeType":"VariableDeclaration","scope":6498,"src":"3453:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6485,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6488,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3495:7:13","nodeType":"VariableDeclaration","scope":6498,"src":"3488:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6487,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6490,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3519:7:13","nodeType":"VariableDeclaration","scope":6498,"src":"3512:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6492,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3544:12:13","nodeType":"VariableDeclaration","scope":6498,"src":"3536:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6491,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6494,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3574:9:13","nodeType":"VariableDeclaration","scope":6498,"src":"3566:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6493,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6496,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3599:4:13","nodeType":"VariableDeclaration","scope":6498,"src":"3593:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6495,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:13"},"src":"3401:209:13"},{"anonymous":false,"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"3616:562:13","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"eventSelector":"bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633","id":6513,"name":"Flash","nameLocation":"4189:5:13","nodeType":"EventDefinition","parameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4220:6:13","nodeType":"VariableDeclaration","scope":6513,"src":"4204:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6500,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6503,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4252:9:13","nodeType":"VariableDeclaration","scope":6513,"src":"4236:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6502,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6505,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4279:7:13","nodeType":"VariableDeclaration","scope":6513,"src":"4271:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6507,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4304:7:13","nodeType":"VariableDeclaration","scope":6513,"src":"4296:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6509,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4329:5:13","nodeType":"VariableDeclaration","scope":6513,"src":"4321:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6511,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4352:5:13","nodeType":"VariableDeclaration","scope":6513,"src":"4344:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:13"},"src":"4183:181:13"},{"anonymous":false,"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"4370:451:13","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"eventSelector":"ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a","id":6520,"name":"IncreaseObservationCardinalityNext","nameLocation":"4832:34:13","nodeType":"EventDefinition","parameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nameLocation":"4883:29:13","nodeType":"VariableDeclaration","scope":6520,"src":"4876:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6515,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6518,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nameLocation":"4929:29:13","nodeType":"VariableDeclaration","scope":6520,"src":"4922:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6517,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:13"},"src":"4826:139:13"},{"anonymous":false,"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"4971:370:13","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"eventSelector":"973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133","id":6531,"name":"SetFeeProtocol","nameLocation":"5352:14:13","nodeType":"EventDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nameLocation":"5373:15:13","nodeType":"VariableDeclaration","scope":6531,"src":"5367:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6522,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6525,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nameLocation":"5396:15:13","nodeType":"VariableDeclaration","scope":6531,"src":"5390:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6524,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6527,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nameLocation":"5419:15:13","nodeType":"VariableDeclaration","scope":6531,"src":"5413:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6526,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6529,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nameLocation":"5442:15:13","nodeType":"VariableDeclaration","scope":6531,"src":"5436:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6528,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:13"},"src":"5346:113:13"},{"anonymous":false,"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"5465:384:13","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"eventSelector":"596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151","id":6542,"name":"CollectProtocol","nameLocation":"5860:15:13","nodeType":"EventDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5892:6:13","nodeType":"VariableDeclaration","scope":6542,"src":"5876:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6533,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6536,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"5916:9:13","nodeType":"VariableDeclaration","scope":6542,"src":"5900:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6535,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6538,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5935:7:13","nodeType":"VariableDeclaration","scope":6542,"src":"5927:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6537,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6540,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5952:7:13","nodeType":"VariableDeclaration","scope":6542,"src":"5944:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6539,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:13"},"src":"5854:107:13"}],"scope":6544,"src":"159:5804:13","usedErrors":[],"usedEvents":[6434,6451,6466,6481,6498,6513,6520,6531,6542]}],"src":"45:5919:13"},"id":13},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[6583]},"id":6584,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6545,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolImmutables","contractDependencies":[],"contractKind":"interface","documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"71:153:14","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":6583,"linearizedBaseContracts":[6583],"name":"IUniswapV3PoolImmutables","nameLocation":"234:24:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"265:138:14","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":6552,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"417:7:14","nodeType":"FunctionDefinition","parameters":{"id":6548,"nodeType":"ParameterList","parameters":[],"src":"424:2:14"},"returnParameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6552,"src":"450:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6549,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:14"},"scope":6583,"src":"408:51:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6553,"nodeType":"StructuredDocumentation","src":"465:113:14","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":6558,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"592:6:14","nodeType":"FunctionDefinition","parameters":{"id":6554,"nodeType":"ParameterList","parameters":[],"src":"598:2:14"},"returnParameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6558,"src":"624:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:14"},"scope":6583,"src":"583:50:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6559,"nodeType":"StructuredDocumentation","src":"639:114:14","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":6564,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"767:6:14","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[],"src":"773:2:14"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6564,"src":"799:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6561,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:14"},"scope":6583,"src":"758:50:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"814:84:14","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":6570,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"912:3:14","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[],"src":"915:2:14"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6570,"src":"941:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6567,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:14"},"scope":6583,"src":"903:46:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6571,"nodeType":"StructuredDocumentation","src":"955:358:14","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":6576,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"1327:11:14","nodeType":"FunctionDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[],"src":"1338:2:14"},"returnParameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6576,"src":"1364:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6573,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:14"},"scope":6583,"src":"1318:53:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6577,"nodeType":"StructuredDocumentation","src":"1377:363:14","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":6582,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1754:19:14","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[],"src":"1773:2:14"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"1799:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6579,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:14"},"scope":6583,"src":"1745:63:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6584,"src":"224:1586:14","usedErrors":[],"usedEvents":[]}],"src":"45:1766:14"},"id":14},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[6609]},"id":6610,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6585,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolOwnerActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":6586,"nodeType":"StructuredDocumentation","src":"71:116:15","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":6609,"linearizedBaseContracts":[6609],"name":"IUniswapV3PoolOwnerActions","nameLocation":"197:26:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6587,"nodeType":"StructuredDocumentation","src":"230:205:15","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":6594,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nameLocation":"449:14:15","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"feeProtocol0","nameLocation":"470:12:15","nodeType":"VariableDeclaration","scope":6594,"src":"464:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6588,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6591,"mutability":"mutable","name":"feeProtocol1","nameLocation":"490:12:15","nodeType":"VariableDeclaration","scope":6594,"src":"484:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6590,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:15"},"returnParameters":{"id":6593,"nodeType":"ParameterList","parameters":[],"src":"512:0:15"},"scope":6609,"src":"440:73:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"519:483:15","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":6608,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nameLocation":"1016:15:15","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"recipient","nameLocation":"1049:9:15","nodeType":"VariableDeclaration","scope":6608,"src":"1041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6596,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6599,"mutability":"mutable","name":"amount0Requested","nameLocation":"1076:16:15","nodeType":"VariableDeclaration","scope":6608,"src":"1068:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6598,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6601,"mutability":"mutable","name":"amount1Requested","nameLocation":"1110:16:15","nodeType":"VariableDeclaration","scope":6608,"src":"1102:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6600,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:15"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"amount0","nameLocation":"1159:7:15","nodeType":"VariableDeclaration","scope":6608,"src":"1151:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6603,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6606,"mutability":"mutable","name":"amount1","nameLocation":"1176:7:15","nodeType":"VariableDeclaration","scope":6608,"src":"1168:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6605,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:15"},"scope":6609,"src":"1007:178:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6610,"src":"187:1000:15","usedErrors":[],"usedEvents":[]}],"src":"45:1143:15"},"id":15},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[6717]},"id":6718,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6611,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolState","contractDependencies":[],"contractKind":"interface","documentation":{"id":6612,"nodeType":"StructuredDocumentation","src":"71:169:16","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":6717,"linearizedBaseContracts":[6717],"name":"IUniswapV3PoolState","nameLocation":"250:19:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6613,"nodeType":"StructuredDocumentation","src":"276:1140:16","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":6630,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nameLocation":"1430:5:16","nodeType":"FunctionDefinition","parameters":{"id":6614,"nodeType":"ParameterList","parameters":[],"src":"1435:2:16"},"returnParameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1506:12:16","nodeType":"VariableDeclaration","scope":6630,"src":"1498:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6615,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6618,"mutability":"mutable","name":"tick","nameLocation":"1538:4:16","nodeType":"VariableDeclaration","scope":6630,"src":"1532:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6617,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6620,"mutability":"mutable","name":"observationIndex","nameLocation":"1563:16:16","nodeType":"VariableDeclaration","scope":6630,"src":"1556:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6619,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6622,"mutability":"mutable","name":"observationCardinality","nameLocation":"1600:22:16","nodeType":"VariableDeclaration","scope":6630,"src":"1593:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6621,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6624,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"1643:26:16","nodeType":"VariableDeclaration","scope":6630,"src":"1636:33:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6623,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6626,"mutability":"mutable","name":"feeProtocol","nameLocation":"1689:11:16","nodeType":"VariableDeclaration","scope":6630,"src":"1683:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6625,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"unlocked","nameLocation":"1719:8:16","nodeType":"VariableDeclaration","scope":6630,"src":"1714:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6627,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:16"},"scope":6717,"src":"1421:317:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6631,"nodeType":"StructuredDocumentation","src":"1744:168:16","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":6636,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nameLocation":"1926:20:16","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[],"src":"1946:2:16"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:16"},"scope":6717,"src":"1917:64:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6637,"nodeType":"StructuredDocumentation","src":"1987:168:16","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":6642,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nameLocation":"2169:20:16","nodeType":"FunctionDefinition","parameters":{"id":6638,"nodeType":"ParameterList","parameters":[],"src":"2189:2:16"},"returnParameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6642,"src":"2215:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:16"},"scope":6717,"src":"2160:64:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"2230:147:16","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":6650,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nameLocation":"2391:12:16","nodeType":"FunctionDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[],"src":"2403:2:16"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"token0","nameLocation":"2437:6:16","nodeType":"VariableDeclaration","scope":6650,"src":"2429:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6645,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6648,"mutability":"mutable","name":"token1","nameLocation":"2453:6:16","nodeType":"VariableDeclaration","scope":6650,"src":"2445:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6647,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:16"},"scope":6717,"src":"2382:79:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"2467:150:16","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":6656,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"2631:9:16","nodeType":"FunctionDefinition","parameters":{"id":6652,"nodeType":"ParameterList","parameters":[],"src":"2640:2:16"},"returnParameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6656,"src":"2666:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6653,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:16"},"scope":6717,"src":"2622:53:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6657,"nodeType":"StructuredDocumentation","src":"2681:1244:16","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":6678,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"3939:5:16","nodeType":"FunctionDefinition","parameters":{"id":6660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6659,"mutability":"mutable","name":"tick","nameLocation":"3951:4:16","nodeType":"VariableDeclaration","scope":6678,"src":"3945:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6658,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:16"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"liquidityGross","nameLocation":"4025:14:16","nodeType":"VariableDeclaration","scope":6678,"src":"4017:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6661,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6664,"mutability":"mutable","name":"liquidityNet","nameLocation":"4060:12:16","nodeType":"VariableDeclaration","scope":6678,"src":"4053:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6663,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"feeGrowthOutside0X128","nameLocation":"4094:21:16","nodeType":"VariableDeclaration","scope":6678,"src":"4086:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6668,"mutability":"mutable","name":"feeGrowthOutside1X128","nameLocation":"4137:21:16","nodeType":"VariableDeclaration","scope":6678,"src":"4129:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6670,"mutability":"mutable","name":"tickCumulativeOutside","nameLocation":"4178:21:16","nodeType":"VariableDeclaration","scope":6678,"src":"4172:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6669,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":6672,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nameLocation":"4221:30:16","nodeType":"VariableDeclaration","scope":6678,"src":"4213:38:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6671,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6674,"mutability":"mutable","name":"secondsOutside","nameLocation":"4272:14:16","nodeType":"VariableDeclaration","scope":6678,"src":"4265:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6673,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6676,"mutability":"mutable","name":"initialized","nameLocation":"4305:11:16","nodeType":"VariableDeclaration","scope":6678,"src":"4300:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6675,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:16"},"scope":6717,"src":"3930:397:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6679,"nodeType":"StructuredDocumentation","src":"4333:99:16","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":6686,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nameLocation":"4446:10:16","nodeType":"FunctionDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"wordPosition","nameLocation":"4463:12:16","nodeType":"VariableDeclaration","scope":6686,"src":"4457:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6680,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:16"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6686,"src":"4500:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:16"},"scope":6717,"src":"4437:72:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6687,"nodeType":"StructuredDocumentation","src":"4515:700:16","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":6702,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"5229:9:16","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"key","nameLocation":"5247:3:16","nodeType":"VariableDeclaration","scope":6702,"src":"5239:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:16"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"_liquidity","nameLocation":"5320:10:16","nodeType":"VariableDeclaration","scope":6702,"src":"5312:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6691,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6694,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"5352:24:16","nodeType":"VariableDeclaration","scope":6702,"src":"5344:32:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6696,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"5398:24:16","nodeType":"VariableDeclaration","scope":6702,"src":"5390:32:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6695,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"tokensOwed0","nameLocation":"5444:11:16","nodeType":"VariableDeclaration","scope":6702,"src":"5436:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6697,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":6700,"mutability":"mutable","name":"tokensOwed1","nameLocation":"5477:11:16","nodeType":"VariableDeclaration","scope":6702,"src":"5469:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6699,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:16"},"scope":6717,"src":"5220:279:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"5505:749:16","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":6716,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nameLocation":"6268:12:16","nodeType":"FunctionDefinition","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"index","nameLocation":"6289:5:16","nodeType":"VariableDeclaration","scope":6716,"src":"6281:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:16"},"returnParameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"blockTimestamp","nameLocation":"6363:14:16","nodeType":"VariableDeclaration","scope":6716,"src":"6356:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6707,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6710,"mutability":"mutable","name":"tickCumulative","nameLocation":"6397:14:16","nodeType":"VariableDeclaration","scope":6716,"src":"6391:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6709,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nameLocation":"6433:33:16","nodeType":"VariableDeclaration","scope":6716,"src":"6425:41:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6711,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"initialized","nameLocation":"6485:11:16","nodeType":"VariableDeclaration","scope":6716,"src":"6480:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6713,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:16"},"scope":6717,"src":"6259:248:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6718,"src":"240:6269:16","usedErrors":[],"usedEvents":[]}],"src":"45:6465:16"},"id":16},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[6817],"IUniswapV3SwapCallback":[6297]},"id":6818,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6719,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:17"},{"id":6720,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:17"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":6721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6818,"sourceUnit":6298,"src":"91:83:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6723,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:17"],"nodeType":"IdentifierPath","referencedDeclaration":6297,"src":"305:22:17"},"id":6724,"nodeType":"InheritanceSpecifier","src":"305:22:17"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":6722,"nodeType":"StructuredDocumentation","src":"176:104:17","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":6817,"linearizedBaseContracts":[6817,6297],"name":"ISwapRouter","nameLocation":"290:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":6741,"members":[{"constant":false,"id":6726,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:17","nodeType":"VariableDeclaration","scope":6741,"src":"374:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6725,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6728,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:17","nodeType":"VariableDeclaration","scope":6741,"src":"399:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6727,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6730,"mutability":"mutable","name":"fee","nameLocation":"432:3:17","nodeType":"VariableDeclaration","scope":6741,"src":"425:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6729,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"recipient","nameLocation":"453:9:17","nodeType":"VariableDeclaration","scope":6741,"src":"445:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6731,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6734,"mutability":"mutable","name":"deadline","nameLocation":"480:8:17","nodeType":"VariableDeclaration","scope":6741,"src":"472:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6733,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6736,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:17","nodeType":"VariableDeclaration","scope":6741,"src":"498:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6738,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:17","nodeType":"VariableDeclaration","scope":6741,"src":"524:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6740,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:17","nodeType":"VariableDeclaration","scope":6741,"src":"558:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6739,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:17","nodeType":"StructDefinition","scope":6817,"src":"334:256:17","visibility":"public"},{"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"596:250:17","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":6750,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:17","nodeType":"FunctionDefinition","parameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"params","nameLocation":"909:6:17","nodeType":"VariableDeclaration","scope":6750,"src":"877:38:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$6741_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":6744,"nodeType":"UserDefinedTypeName","pathNode":{"id":6743,"name":"ExactInputSingleParams","nameLocations":["877:22:17"],"nodeType":"IdentifierPath","referencedDeclaration":6741,"src":"877:22:17"},"referencedDeclaration":6741,"src":"877:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$6741_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:17"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:17","nodeType":"VariableDeclaration","scope":6750,"src":"943:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6747,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:17"},"scope":6817,"src":"851:111:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":6761,"members":[{"constant":false,"id":6752,"mutability":"mutable","name":"path","nameLocation":"1008:4:17","nodeType":"VariableDeclaration","scope":6761,"src":"1002:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6751,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6754,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:17","nodeType":"VariableDeclaration","scope":6761,"src":"1022:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6753,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6756,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:17","nodeType":"VariableDeclaration","scope":6761,"src":"1049:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6758,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:17","nodeType":"VariableDeclaration","scope":6761,"src":"1075:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6760,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:17","nodeType":"VariableDeclaration","scope":6761,"src":"1101:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:17","nodeType":"StructDefinition","scope":6817,"src":"968:164:17","visibility":"public"},{"documentation":{"id":6762,"nodeType":"StructuredDocumentation","src":"1138:273:17","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":6770,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:17","nodeType":"FunctionDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"params","nameLocation":"1462:6:17","nodeType":"VariableDeclaration","scope":6770,"src":"1436:32:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$6761_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":6764,"nodeType":"UserDefinedTypeName","pathNode":{"id":6763,"name":"ExactInputParams","nameLocations":["1436:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":6761,"src":"1436:16:17"},"referencedDeclaration":6761,"src":"1436:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$6761_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:17"},"returnParameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:17","nodeType":"VariableDeclaration","scope":6770,"src":"1496:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:17"},"scope":6817,"src":"1416:99:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":6787,"members":[{"constant":false,"id":6772,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:17","nodeType":"VariableDeclaration","scope":6787,"src":"1562:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6771,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:17","nodeType":"VariableDeclaration","scope":6787,"src":"1587:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6773,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6776,"mutability":"mutable","name":"fee","nameLocation":"1620:3:17","nodeType":"VariableDeclaration","scope":6787,"src":"1613:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6775,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6778,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:17","nodeType":"VariableDeclaration","scope":6787,"src":"1633:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6777,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6780,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:17","nodeType":"VariableDeclaration","scope":6787,"src":"1660:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:17","nodeType":"VariableDeclaration","scope":6787,"src":"1686:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6784,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:17","nodeType":"VariableDeclaration","scope":6787,"src":"1713:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:17","nodeType":"VariableDeclaration","scope":6787,"src":"1746:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6785,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:17","nodeType":"StructDefinition","scope":6817,"src":"1521:257:17","visibility":"public"},{"documentation":{"id":6788,"nodeType":"StructuredDocumentation","src":"1784:250:17","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":6796,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:17","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"params","nameLocation":"2099:6:17","nodeType":"VariableDeclaration","scope":6796,"src":"2066:39:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$6787_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":6790,"nodeType":"UserDefinedTypeName","pathNode":{"id":6789,"name":"ExactOutputSingleParams","nameLocations":["2066:23:17"],"nodeType":"IdentifierPath","referencedDeclaration":6787,"src":"2066:23:17"},"referencedDeclaration":6787,"src":"2066:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$6787_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:17"},"returnParameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:17","nodeType":"VariableDeclaration","scope":6796,"src":"2133:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:17"},"scope":6817,"src":"2039:112:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":6807,"members":[{"constant":false,"id":6798,"mutability":"mutable","name":"path","nameLocation":"2198:4:17","nodeType":"VariableDeclaration","scope":6807,"src":"2192:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6797,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6800,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:17","nodeType":"VariableDeclaration","scope":6807,"src":"2212:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6799,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:17","nodeType":"VariableDeclaration","scope":6807,"src":"2239:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6804,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:17","nodeType":"VariableDeclaration","scope":6807,"src":"2265:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6806,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:17","nodeType":"VariableDeclaration","scope":6807,"src":"2292:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:17","nodeType":"StructDefinition","scope":6817,"src":"2157:165:17","visibility":"public"},{"documentation":{"id":6808,"nodeType":"StructuredDocumentation","src":"2328:284:17","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":6816,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:17","nodeType":"FunctionDefinition","parameters":{"id":6812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6811,"mutability":"mutable","name":"params","nameLocation":"2665:6:17","nodeType":"VariableDeclaration","scope":6816,"src":"2638:33:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$6807_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":6810,"nodeType":"UserDefinedTypeName","pathNode":{"id":6809,"name":"ExactOutputParams","nameLocations":["2638:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":6807,"src":"2638:17:17"},"referencedDeclaration":6807,"src":"2638:17:17","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$6807_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:17"},"returnParameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6814,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:17","nodeType":"VariableDeclaration","scope":6816,"src":"2699:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:17"},"scope":6817,"src":"2617:100:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6818,"src":"280:2439:17","usedErrors":[],"usedEvents":[]}],"src":"45:2675:17"},"id":17},"contracts/FlashLoanArbitrageur.sol":{"ast":{"absolutePath":"contracts/FlashLoanArbitrageur.sol","exportedSymbols":{"FlashLoanArbitrageur":[7560],"IERC20":[1277],"IPool":[638],"IPoolAddressesProvider":[847],"ISwapRouter":[6817],"IUniswapV3FlashCallback":[6844],"IUniswapV3Pool":[6283],"Strings":[2731]},"id":7561,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":1278,"src":"58:70:18","symbolAliases":[{"foreign":{"id":6820,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"66:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":6823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":6818,"src":"129:87:18","symbolAliases":[{"foreign":{"id":6822,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"137:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":6825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":6284,"src":"217:88:18","symbolAliases":[{"foreign":{"id":6824,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"225:14:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":2732,"src":"306:66:18","symbolAliases":[{"foreign":{"id":6826,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"314:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","file":"@aave/core-v3/contracts/interfaces/IPool.sol","id":6829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":639,"src":"373:67:18","symbolAliases":[{"foreign":{"id":6828,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"381:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","file":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","id":6831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7561,"sourceUnit":848,"src":"441:101:18","symbolAliases":[{"foreign":{"id":6830,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"449:22:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"global":false,"id":6834,"libraryName":{"id":6832,"name":"Strings","nameLocations":["549:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2731,"src":"549:7:18"},"nodeType":"UsingForDirective","src":"543:26:18","typeName":{"id":6833,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3FlashCallback","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6844,"linearizedBaseContracts":[6844],"name":"IUniswapV3FlashCallback","nameLocation":"581:23:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e9cbafb0","id":6843,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3FlashCallback","nameLocation":"620:22:18","nodeType":"FunctionDefinition","parameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"fee0","nameLocation":"651:4:18","nodeType":"VariableDeclaration","scope":6843,"src":"643:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6835,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6838,"mutability":"mutable","name":"fee1","nameLocation":"665:4:18","nodeType":"VariableDeclaration","scope":6843,"src":"657:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6837,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6840,"mutability":"mutable","name":"data","nameLocation":"686:4:18","nodeType":"VariableDeclaration","scope":6843,"src":"671:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6839,"name":"bytes","nodeType":"ElementaryTypeName","src":"671:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"642:49:18"},"returnParameters":{"id":6842,"nodeType":"ParameterList","parameters":[],"src":"700:0:18"},"scope":6844,"src":"611:90:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7561,"src":"571:132:18","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":6845,"name":"IUniswapV3FlashCallback","nameLocations":["738:23:18"],"nodeType":"IdentifierPath","referencedDeclaration":6844,"src":"738:23:18"},"id":6846,"nodeType":"InheritanceSpecifier","src":"738:23:18"}],"canonicalName":"FlashLoanArbitrageur","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7560,"linearizedBaseContracts":[7560,6844],"name":"FlashLoanArbitrageur","nameLocation":"714:20:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"FlashLoanArbitrageur.ArbitrageParams","id":6867,"members":[{"constant":false,"id":6848,"mutability":"mutable","name":"token0","nameLocation":"809:6:18","nodeType":"VariableDeclaration","scope":6867,"src":"801:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6847,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6850,"mutability":"mutable","name":"token1","nameLocation":"833:6:18","nodeType":"VariableDeclaration","scope":6867,"src":"825:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6849,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6852,"mutability":"mutable","name":"tokenMid","nameLocation":"857:8:18","nodeType":"VariableDeclaration","scope":6867,"src":"849:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6851,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"fee1","nameLocation":"882:4:18","nodeType":"VariableDeclaration","scope":6867,"src":"875:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6853,"name":"uint24","nodeType":"ElementaryTypeName","src":"875:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"fee2","nameLocation":"903:4:18","nodeType":"VariableDeclaration","scope":6867,"src":"896:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6855,"name":"uint24","nodeType":"ElementaryTypeName","src":"896:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6858,"mutability":"mutable","name":"minProfit","nameLocation":"925:9:18","nodeType":"VariableDeclaration","scope":6867,"src":"917:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6860,"mutability":"mutable","name":"direction","nameLocation":"950:9:18","nodeType":"VariableDeclaration","scope":6867,"src":"944:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6859,"name":"uint8","nodeType":"ElementaryTypeName","src":"944:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"uniswapRouter","nameLocation":"1037:13:18","nodeType":"VariableDeclaration","scope":6867,"src":"1029:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6861,"name":"address","nodeType":"ElementaryTypeName","src":"1029:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6864,"mutability":"mutable","name":"sushiswapRouter","nameLocation":"1068:15:18","nodeType":"VariableDeclaration","scope":6867,"src":"1060:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6863,"name":"address","nodeType":"ElementaryTypeName","src":"1060:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6866,"mutability":"mutable","name":"initiator","nameLocation":"1101:9:18","nodeType":"VariableDeclaration","scope":6867,"src":"1093:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6865,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ArbitrageParams","nameLocation":"775:15:18","nodeType":"StructDefinition","scope":7560,"src":"768:349:18","visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":6869,"mutability":"mutable","name":"owner","nameLocation":"1138:5:18","nodeType":"VariableDeclaration","scope":7560,"src":"1123:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6868,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"546205492ce144edebd2cc39035c50dbd9aebfec90cbcae9c9ae2914d1e130f7","id":6877,"name":"ArbitrageExecuted","nameLocation":"1155:17:18","nodeType":"EventDefinition","parameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"1189:9:18","nodeType":"VariableDeclaration","scope":6877,"src":"1173:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6870,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6873,"indexed":false,"mutability":"mutable","name":"asset","nameLocation":"1208:5:18","nodeType":"VariableDeclaration","scope":6877,"src":"1200:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6872,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6875,"indexed":false,"mutability":"mutable","name":"profit","nameLocation":"1223:6:18","nodeType":"VariableDeclaration","scope":6877,"src":"1215:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1172:58:18"},"src":"1149:82:18"},{"anonymous":false,"eventSelector":"7cdb51e9dbbc205231228146c3246e7f914aa6d4a33170e43ecc8e3593481d1a","id":6881,"name":"Debug","nameLocation":"1242:5:18","nodeType":"EventDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1255:7:18","nodeType":"VariableDeclaration","scope":6881,"src":"1248:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6878,"name":"string","nodeType":"ElementaryTypeName","src":"1248:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1247:16:18"},"src":"1236:28:18"},{"body":{"id":6892,"nodeType":"Block","src":"1291:69:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1309:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1313:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1309:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6886,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1323:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1309:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1330:11:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""},"value":"Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""}],"id":6883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1301:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6890,"nodeType":"ExpressionStatement","src":"1301:41:18"},{"id":6891,"nodeType":"PlaceholderStatement","src":"1352:1:18"}]},"id":6893,"name":"onlyOwner","nameLocation":"1279:9:18","nodeType":"ModifierDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[],"src":"1288:2:18"},"src":"1270:90:18","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"1380:35:18","statements":[{"expression":{"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6896,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1390:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1398:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1402:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1398:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1390:18:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6900,"nodeType":"ExpressionStatement","src":"1390:18:18"}]},"id":6902,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[],"src":"1377:2:18"},"returnParameters":{"id":6895,"nodeType":"ParameterList","parameters":[],"src":"1380:0:18"},"scope":7560,"src":"1366:49:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6972,"nodeType":"Block","src":"1731:566:18","statements":[{"assignments":[6929],"declarations":[{"constant":false,"id":6929,"mutability":"mutable","name":"arb","nameLocation":"1764:3:18","nodeType":"VariableDeclaration","scope":6972,"src":"1741:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams"},"typeName":{"id":6928,"nodeType":"UserDefinedTypeName","pathNode":{"id":6927,"name":"ArbitrageParams","nameLocations":["1741:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":6867,"src":"1741:15:18"},"referencedDeclaration":6867,"src":"1741:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_storage_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams"}},"visibility":"internal"}],"id":6951,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6932,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"1823:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6931,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"1808:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$6283_$","typeString":"type(contract IUniswapV3Pool)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$6283","typeString":"contract IUniswapV3Pool"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1829:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6558,"src":"1808:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6937,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"1874:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6936,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"1859:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$6283_$","typeString":"type(contract IUniswapV3Pool)"}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$6283","typeString":"contract IUniswapV3Pool"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1880:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6564,"src":"1859:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6941,"name":"tokenMid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"1912:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6942,"name":"fee1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"1940:4:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":6943,"name":"fee2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"1964:4:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":6944,"name":"minProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"1993:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6945,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"2027:9:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6946,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"2065:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6947,"name":"sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"2109:15:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2149:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2153:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2149:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6930,"name":"ArbitrageParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"1770:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$6867_storage_ptr_$","typeString":"type(struct FlashLoanArbitrageur.ArbitrageParams storage pointer)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1800:6:18","1851:6:18","1902:8:18","1934:4:18","1958:4:18","1982:9:18","2016:9:18","2050:13:18","2092:15:18","2138:9:18"],"names":["token0","token1","tokenMid","fee1","fee2","minProfit","direction","uniswapRouter","sushiswapRouter","initiator"],"nodeType":"FunctionCall","src":"1770:400:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1741:429:18"},{"assignments":[6953],"declarations":[{"constant":false,"id":6953,"mutability":"mutable","name":"data","nameLocation":"2193:4:18","nodeType":"VariableDeclaration","scope":6972,"src":"2180:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6952,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6958,"initialValue":{"arguments":[{"id":6956,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"2211:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}],"expression":{"id":6954,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2200:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2204:6:18","memberName":"encode","nodeType":"MemberAccess","src":"2200:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2180:35:18"},{"expression":{"arguments":[{"arguments":[{"id":6965,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2260:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2252:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6963,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:18","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6967,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6968,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"2276:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6969,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"2285:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":6960,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"2240:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6959,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"2225:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$6283_$","typeString":"type(contract IUniswapV3Pool)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$6283","typeString":"contract IUniswapV3Pool"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2246:5:18","memberName":"flash","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"2225:26:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6971,"nodeType":"ExpressionStatement","src":"2225:65:18"}]},"functionSelector":"85d8609d","id":6973,"implemented":true,"kind":"function","modifiers":[{"id":6925,"kind":"modifierInvocation","modifierName":{"id":6924,"name":"onlyOwner","nameLocations":["1721:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":6893,"src":"1721:9:18"},"nodeType":"ModifierInvocation","src":"1721:9:18"}],"name":"startUniswapV3Flash","nameLocation":"1430:19:18","nodeType":"FunctionDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"pool","nameLocation":"1467:4:18","nodeType":"VariableDeclaration","scope":6973,"src":"1459:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6903,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6906,"mutability":"mutable","name":"amount0","nameLocation":"1489:7:18","nodeType":"VariableDeclaration","scope":6973,"src":"1481:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6908,"mutability":"mutable","name":"amount1","nameLocation":"1514:7:18","nodeType":"VariableDeclaration","scope":6973,"src":"1506:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6910,"mutability":"mutable","name":"tokenMid","nameLocation":"1539:8:18","nodeType":"VariableDeclaration","scope":6973,"src":"1531:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6909,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6912,"mutability":"mutable","name":"fee1","nameLocation":"1564:4:18","nodeType":"VariableDeclaration","scope":6973,"src":"1557:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6911,"name":"uint24","nodeType":"ElementaryTypeName","src":"1557:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6914,"mutability":"mutable","name":"fee2","nameLocation":"1585:4:18","nodeType":"VariableDeclaration","scope":6973,"src":"1578:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6913,"name":"uint24","nodeType":"ElementaryTypeName","src":"1578:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":6916,"mutability":"mutable","name":"minProfit","nameLocation":"1607:9:18","nodeType":"VariableDeclaration","scope":6973,"src":"1599:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6918,"mutability":"mutable","name":"direction","nameLocation":"1632:9:18","nodeType":"VariableDeclaration","scope":6973,"src":"1626:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6917,"name":"uint8","nodeType":"ElementaryTypeName","src":"1626:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6920,"mutability":"mutable","name":"uniswapRouter","nameLocation":"1659:13:18","nodeType":"VariableDeclaration","scope":6973,"src":"1651:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6919,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6922,"mutability":"mutable","name":"sushiswapRouter","nameLocation":"1690:15:18","nodeType":"VariableDeclaration","scope":6973,"src":"1682:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6921,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1449:262:18"},"returnParameters":{"id":6926,"nodeType":"ParameterList","parameters":[],"src":"1731:0:18"},"scope":7560,"src":"1421:876:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6843],"body":{"id":7305,"nodeType":"Block","src":"2470:2773:18","statements":[{"eventCall":{"arguments":[{"hexValue":"537461727420756e69737761705633466c61736843616c6c6261636b","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2491:30:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_df74cb382db02b50253814124d3febd7e040ca9b076b45c0cbad6502a6380075","typeString":"literal_string \"Start uniswapV3FlashCallback\""},"value":"Start uniswapV3FlashCallback"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df74cb382db02b50253814124d3febd7e040ca9b076b45c0cbad6502a6380075","typeString":"literal_string \"Start uniswapV3FlashCallback\""}],"id":6983,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"2485:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2485:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"EmitStatement","src":"2480:42:18"},{"assignments":[6989],"declarations":[{"constant":false,"id":6989,"mutability":"mutable","name":"arb","nameLocation":"2555:3:18","nodeType":"VariableDeclaration","scope":7305,"src":"2532:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams"},"typeName":{"id":6988,"nodeType":"UserDefinedTypeName","pathNode":{"id":6987,"name":"ArbitrageParams","nameLocations":["2532:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":6867,"src":"2532:15:18"},"referencedDeclaration":6867,"src":"2532:15:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_storage_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams"}},"visibility":"internal"}],"id":6996,"initialValue":{"arguments":[{"id":6992,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"2572:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":6993,"name":"ArbitrageParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"2579:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$6867_storage_ptr_$","typeString":"type(struct FlashLoanArbitrageur.ArbitrageParams storage pointer)"}}],"id":6994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2578:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$6867_storage_ptr_$","typeString":"type(struct FlashLoanArbitrageur.ArbitrageParams storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$6867_storage_ptr_$","typeString":"type(struct FlashLoanArbitrageur.ArbitrageParams storage pointer)"}],"expression":{"id":6990,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2561:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2565:6:18","memberName":"decode","nodeType":"MemberAccess","src":"2561:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2561:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"nodeType":"VariableDeclarationStatement","src":"2532:64:18"},{"assignments":[6998],"declarations":[{"constant":false,"id":6998,"mutability":"mutable","name":"pool","nameLocation":"2614:4:18","nodeType":"VariableDeclaration","scope":7305,"src":"2606:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6997,"name":"address","nodeType":"ElementaryTypeName","src":"2606:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7001,"initialValue":{"expression":{"id":6999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2621:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2625:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2621:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2606:25:18"},{"clauses":[{"block":{"id":7018,"nodeType":"Block","src":"2786:81:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7011,"name":"poolToken0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"2808:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7012,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"2822:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2826:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"2822:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2808:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706f6f6c20746f6b656e30","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2834:21:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_320fb34d526534765cc20f32a080424e371c4dba857ca024a5a0a15630c29f54","typeString":"literal_string \"Invalid pool token0\""},"value":"Invalid pool token0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_320fb34d526534765cc20f32a080424e371c4dba857ca024a5a0a15630c29f54","typeString":"literal_string \"Invalid pool token0\""}],"id":7010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2800:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2800:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"ExpressionStatement","src":"2800:56:18"}]},"errorName":"","id":7019,"nodeType":"TryCatchClause","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"poolToken0","nameLocation":"2774:10:18","nodeType":"VariableDeclaration","scope":7019,"src":"2766:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7007,"name":"address","nodeType":"ElementaryTypeName","src":"2766:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2765:20:18"},"src":"2757:110:18"},{"block":{"id":7024,"nodeType":"Block","src":"2874:55:18","statements":[{"expression":{"arguments":[{"hexValue":"496e76616c696420706f6f6c2061646472657373","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2895:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6","typeString":"literal_string \"Invalid pool address\""},"value":"Invalid pool address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6","typeString":"literal_string \"Invalid pool address\""}],"id":7020,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2888:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7023,"nodeType":"ExpressionStatement","src":"2888:30:18"}]},"errorName":"","id":7025,"nodeType":"TryCatchClause","src":"2868:61:18"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7003,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"2742:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7002,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"2727:14:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$6283_$","typeString":"type(contract IUniswapV3Pool)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2727:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$6283","typeString":"contract IUniswapV3Pool"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6558,"src":"2727:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2727:29:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7026,"nodeType":"TryStatement","src":"2723:206:18"},{"assignments":[7028],"declarations":[{"constant":false,"id":7028,"mutability":"mutable","name":"bal0Before","nameLocation":"3007:10:18","nodeType":"VariableDeclaration","scope":7305,"src":"2999:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7039,"initialValue":{"arguments":[{"arguments":[{"id":7036,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3057:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3049:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"3049:7:18","typeDescriptions":{}}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3049:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7030,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3027:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"3027:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7029,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3020:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3020:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3039:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"3020:28:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3020:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2999:64:18"},{"assignments":[7041],"declarations":[{"constant":false,"id":7041,"mutability":"mutable","name":"bal1Before","nameLocation":"3081:10:18","nodeType":"VariableDeclaration","scope":7305,"src":"3073:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7052,"initialValue":{"arguments":[{"arguments":[{"id":7049,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3131:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3123:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7047,"name":"address","nodeType":"ElementaryTypeName","src":"3123:7:18","typeDescriptions":{}}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7043,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3101:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3105:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"3101:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7042,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3094:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3094:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3113:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"3094:28:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3094:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3073:64:18"},{"assignments":[7054],"declarations":[{"constant":false,"id":7054,"mutability":"mutable","name":"flashAmount","nameLocation":"3208:11:18","nodeType":"VariableDeclaration","scope":7305,"src":"3200:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3200:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7061,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"bal0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"3222:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3222:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7059,"name":"bal1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"3252:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3222:40:18","trueExpression":{"id":7058,"name":"bal0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"3239:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3200:62:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7063,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"3280:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3294:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3280:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20666c617368206c6f616e207265636569766564","id":7066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3297:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e851bebd99c9340f549c85b2e9349ae74732fdbdc5f16db77388dfc5247c179","typeString":"literal_string \"No flash loan received\""},"value":"No flash loan received"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e851bebd99c9340f549c85b2e9349ae74732fdbdc5f16db77388dfc5247c179","typeString":"literal_string \"No flash loan received\""}],"id":7062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3272:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7068,"nodeType":"ExpressionStatement","src":"3272:50:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"526563656976656420666c61736820616d6f756e743a20","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3366:25:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b1fe307b1d9916a65a981112224a8f16baafb8938bb4833355ba30c476ce7","typeString":"literal_string \"Received flash amount: \""},"value":"Received flash amount: "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7074,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"3393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3405:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"3393:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_835b1fe307b1d9916a65a981112224a8f16baafb8938bb4833355ba30c476ce7","typeString":"literal_string \"Received flash amount: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3352:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7070,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:18","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3359:6:18","memberName":"concat","nodeType":"MemberAccess","src":"3352:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3352:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7069,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3346:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7079,"nodeType":"EmitStatement","src":"3341:76:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"546f6b656e303a20","id":7084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3452:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b006ad36cfdb818ea882247d5bb4bd635792b6d7532785659bc207293bf6abd","typeString":"literal_string \"Token0: \""},"value":"Token0: "},{"arguments":[{"expression":{"id":7086,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3474:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3478:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"3474:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7085,"name":"getSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"3464:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20546f6b656e313a20","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3487:11:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ba32b4821923dc58058f507522eeb94d4dd01f38be1c9d6ab9c2a17b7d18bc3","typeString":"literal_string \" Token1: \""},"value":" Token1: "},{"arguments":[{"expression":{"id":7091,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3510:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3514:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"3510:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7090,"name":"getSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"3500:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3500:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7b006ad36cfdb818ea882247d5bb4bd635792b6d7532785659bc207293bf6abd","typeString":"literal_string \"Token0: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_5ba32b4821923dc58058f507522eeb94d4dd01f38be1c9d6ab9c2a17b7d18bc3","typeString":"literal_string \" Token1: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3438:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7081,"name":"string","nodeType":"ElementaryTypeName","src":"3438:6:18","typeDescriptions":{}}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3445:6:18","memberName":"concat","nodeType":"MemberAccess","src":"3438:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7080,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3432:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3432:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"EmitStatement","src":"3427:96:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"446972656374696f6e3a20","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3558:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_96c7535e32e11d15780f3785c19aacb47595afa36afb70ca61bdcc0b6d2f73e6","typeString":"literal_string \"Direction: \""},"value":"Direction: "},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7102,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3573:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3577:9:18","memberName":"direction","nodeType":"MemberAccess","referencedDeclaration":6860,"src":"3573:13:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3590:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3573:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"546f6b656e312d3e546f6b656e4d69642d3e546f6b656e30","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3623:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2fd1a06ab183b5c8d2041cb4026f011082e08c59fdba615d819dd0695d45d2d","typeString":"literal_string \"Token1->TokenMid->Token0\""},"value":"Token1->TokenMid->Token0"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3573:76:18","trueExpression":{"hexValue":"546f6b656e302d3e546f6b656e4d69642d3e546f6b656e31","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f32826acffe2544f2201c3d26e730f34e303abba8fc644bcd02a3f2ec74fcab1","typeString":"literal_string \"Token0->TokenMid->Token1\""},"value":"Token0->TokenMid->Token1"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96c7535e32e11d15780f3785c19aacb47595afa36afb70ca61bdcc0b6d2f73e6","typeString":"literal_string \"Direction: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3544:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7098,"name":"string","nodeType":"ElementaryTypeName","src":"3544:6:18","typeDescriptions":{}}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3551:6:18","memberName":"concat","nodeType":"MemberAccess","src":"3544:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3544:106:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7097,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3538:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:113:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7111,"nodeType":"EmitStatement","src":"3533:118:18"},{"assignments":[7113],"declarations":[{"constant":false,"id":7113,"mutability":"mutable","name":"amountMid","nameLocation":"3701:9:18","nodeType":"VariableDeclaration","scope":7305,"src":"3693:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7114,"nodeType":"VariableDeclarationStatement","src":"3693:17:18"},{"assignments":[7116],"declarations":[{"constant":false,"id":7116,"mutability":"mutable","name":"amountBack","nameLocation":"3728:10:18","nodeType":"VariableDeclaration","scope":7305,"src":"3720:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7117,"nodeType":"VariableDeclarationStatement","src":"3720:18:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7118,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3752:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3756:9:18","memberName":"direction","nodeType":"MemberAccess","referencedDeclaration":6860,"src":"3752:13:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3769:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3752:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7187,"nodeType":"Block","src":"4058:280:18","statements":[{"expression":{"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7155,"name":"amountMid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"4116:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":7158,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4146:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4150:13:18","memberName":"uniswapRouter","nodeType":"MemberAccess","referencedDeclaration":6862,"src":"4146:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7157,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"4134:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$6817_$","typeString":"type(contract ISwapRouter)"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4134:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},{"expression":{"id":7161,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4166:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4170:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"4166:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7163,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4178:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4182:8:18","memberName":"tokenMid","nodeType":"MemberAccess","referencedDeclaration":6852,"src":"4178:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7165,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4192:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4196:4:18","memberName":"fee1","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"4192:8:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":7167,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"4202:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7156,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"4128:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ISwapRouter_$6817_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract ISwapRouter,address,address,uint24,uint256) returns (uint256)"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4128:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4116:98:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7170,"nodeType":"ExpressionStatement","src":"4116:98:18"},{"expression":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7171,"name":"amountBack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"4228:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":7174,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4259:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4263:15:18","memberName":"sushiswapRouter","nodeType":"MemberAccess","referencedDeclaration":6864,"src":"4259:19:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7173,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"4247:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$6817_$","typeString":"type(contract ISwapRouter)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},{"expression":{"id":7177,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4281:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4285:8:18","memberName":"tokenMid","nodeType":"MemberAccess","referencedDeclaration":6852,"src":"4281:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7179,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4295:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4299:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4295:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7181,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4307:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4311:4:18","memberName":"fee2","nodeType":"MemberAccess","referencedDeclaration":6856,"src":"4307:8:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":7183,"name":"amountMid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"4317:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7172,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"4241:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ISwapRouter_$6817_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract ISwapRouter,address,address,uint24,uint256) returns (uint256)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4241:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4228:99:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7186,"nodeType":"ExpressionStatement","src":"4228:99:18"}]},"id":7188,"nodeType":"IfStatement","src":"3748:590:18","trueBody":{"id":7154,"nodeType":"Block","src":"3772:280:18","statements":[{"expression":{"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7122,"name":"amountMid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"3830:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":7125,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3860:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3864:13:18","memberName":"uniswapRouter","nodeType":"MemberAccess","referencedDeclaration":6862,"src":"3860:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7124,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3848:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$6817_$","typeString":"type(contract ISwapRouter)"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3848:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},{"expression":{"id":7128,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3880:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3884:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"3880:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7130,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3892:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3896:8:18","memberName":"tokenMid","nodeType":"MemberAccess","referencedDeclaration":6852,"src":"3892:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7132,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3906:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3910:4:18","memberName":"fee1","nodeType":"MemberAccess","referencedDeclaration":6854,"src":"3906:8:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":7134,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7054,"src":"3916:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7123,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"3842:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ISwapRouter_$6817_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract ISwapRouter,address,address,uint24,uint256) returns (uint256)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3830:98:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7137,"nodeType":"ExpressionStatement","src":"3830:98:18"},{"expression":{"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7138,"name":"amountBack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"3942:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":7141,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3973:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:15:18","memberName":"sushiswapRouter","nodeType":"MemberAccess","referencedDeclaration":6864,"src":"3973:19:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7140,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3961:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$6817_$","typeString":"type(contract ISwapRouter)"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3961:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},{"expression":{"id":7144,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3995:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3999:8:18","memberName":"tokenMid","nodeType":"MemberAccess","referencedDeclaration":6852,"src":"3995:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7146,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4009:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4013:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"4009:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7148,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4021:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4025:4:18","memberName":"fee2","nodeType":"MemberAccess","referencedDeclaration":6856,"src":"4021:8:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":7150,"name":"amountMid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"4031:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7139,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"3955:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ISwapRouter_$6817_$_t_address_$_t_address_$_t_uint24_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract ISwapRouter,address,address,uint24,uint256) returns (uint256)"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3955:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:99:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7153,"nodeType":"ExpressionStatement","src":"3942:99:18"}]}},{"assignments":[7190],"declarations":[{"constant":false,"id":7190,"mutability":"mutable","name":"totalOwed0","nameLocation":"4402:10:18","nodeType":"VariableDeclaration","scope":7305,"src":"4394:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"4394:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"fee0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"4415:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7192,"name":"bal0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"4423:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4423:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4453:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4423:31:18","trueExpression":{"id":7195,"name":"bal0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"4440:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4422:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4415:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4394:61:18"},{"assignments":[7202],"declarations":[{"constant":false,"id":7202,"mutability":"mutable","name":"totalOwed1","nameLocation":"4473:10:18","nodeType":"VariableDeclaration","scope":7305,"src":"4465:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7203,"name":"fee1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4486:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7204,"name":"bal1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"4494:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4507:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4494:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4494:31:18","trueExpression":{"id":7207,"name":"bal1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"4511:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4493:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4486:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4465:61:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"totalOwed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"4540:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4553:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4540:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"IfStatement","src":"4536:90:18","trueBody":{"id":7225,"nodeType":"Block","src":"4556:70:18","statements":[{"expression":{"arguments":[{"id":7221,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"4598:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7222,"name":"totalOwed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"4604:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7217,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4577:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4581:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4577:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7216,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4570:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4589:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"4570:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7224,"nodeType":"ExpressionStatement","src":"4570:45:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7227,"name":"totalOwed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"4639:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4652:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4639:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7240,"nodeType":"IfStatement","src":"4635:90:18","trueBody":{"id":7239,"nodeType":"Block","src":"4655:70:18","statements":[{"expression":{"arguments":[{"id":7235,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"4697:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7236,"name":"totalOwed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"4703:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7231,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4676:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4680:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"4676:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7230,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4669:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4669:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4688:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"4669:27:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4669:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"ExpressionStatement","src":"4669:45:18"}]}},{"assignments":[7242],"declarations":[{"constant":false,"id":7242,"mutability":"mutable","name":"profit","nameLocation":"4832:6:18","nodeType":"VariableDeclaration","scope":7305,"src":"4824:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7277,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7243,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4846:9:18","memberName":"direction","nodeType":"MemberAccess","referencedDeclaration":6860,"src":"4842:13:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4859:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4842:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4841:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7269,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4991:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4983:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7267,"name":"address","nodeType":"ElementaryTypeName","src":"4983:7:18","typeDescriptions":{}}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4983:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7263,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4961:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4965:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"4961:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7262,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4954:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4973:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"4954:28:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7272,"name":"bal0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"5000:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4954:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7274,"name":"fee0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"5013:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4954:63:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4841:176:18","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4913:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4905:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7253,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:18","typeDescriptions":{}}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":7249,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"4883:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4887:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"4883:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7248,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4876:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"4876:28:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7258,"name":"bal1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"4922:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4876:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7260,"name":"fee1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4935:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4876:63:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4824:193:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"5035:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7280,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5045:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5049:9:18","memberName":"minProfit","nodeType":"MemberAccess","referencedDeclaration":6858,"src":"5045:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5035:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682070726f666974","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5060:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_982af4b3e80247421ffc03cef15dc13f9c85a2ca8ee1dbf12bbbb2b2e227054c","typeString":"literal_string \"Not enough profit\""},"value":"Not enough profit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_982af4b3e80247421ffc03cef15dc13f9c85a2ca8ee1dbf12bbbb2b2e227054c","typeString":"literal_string \"Not enough profit\""}],"id":7278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5027:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5027:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7285,"nodeType":"ExpressionStatement","src":"5027:53:18"},{"eventCall":{"arguments":[{"expression":{"id":7287,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5113:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5117:9:18","memberName":"initiator","nodeType":"MemberAccess","referencedDeclaration":6866,"src":"5113:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7289,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5128:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5132:9:18","memberName":"direction","nodeType":"MemberAccess","referencedDeclaration":6860,"src":"5128:13:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5128:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":7295,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5162:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:18","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":6848,"src":"5162:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5128:44:18","trueExpression":{"expression":{"id":7293,"name":"arb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5149:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$6867_memory_ptr","typeString":"struct FlashLoanArbitrageur.ArbitrageParams memory"}},"id":7294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5153:6:18","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":6850,"src":"5149:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7298,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"5174:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7286,"name":"ArbitrageExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"5095:17:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5095:86:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7300,"nodeType":"EmitStatement","src":"5090:91:18"},{"eventCall":{"arguments":[{"hexValue":"4172626974726167652066696e6973686564207375636365737366756c6c79","id":7302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5202:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a29a43d0533989b112a261cc01053a4b67cef7c6f227298cbcce8b30d2ef7a","typeString":"literal_string \"Arbitrage finished successfully\""},"value":"Arbitrage finished successfully"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_70a29a43d0533989b112a261cc01053a4b67cef7c6f227298cbcce8b30d2ef7a","typeString":"literal_string \"Arbitrage finished successfully\""}],"id":7301,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"5196:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7304,"nodeType":"EmitStatement","src":"5191:45:18"}]},"functionSelector":"e9cbafb0","id":7306,"implemented":true,"kind":"function","modifiers":[],"name":"uniswapV3FlashCallback","nameLocation":"2350:22:18","nodeType":"FunctionDefinition","overrides":{"id":6981,"nodeType":"OverrideSpecifier","overrides":[],"src":"2461:8:18"},"parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"fee0","nameLocation":"2390:4:18","nodeType":"VariableDeclaration","scope":7306,"src":"2382:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2382:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"fee1","nameLocation":"2412:4:18","nodeType":"VariableDeclaration","scope":7306,"src":"2404:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2404:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"data","nameLocation":"2441:4:18","nodeType":"VariableDeclaration","scope":7306,"src":"2426:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6978,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2372:79:18"},"returnParameters":{"id":6982,"nodeType":"ParameterList","parameters":[],"src":"2470:0:18"},"scope":7560,"src":"2341:2902:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7485,"nodeType":"Block","src":"5422:2127:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7323,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"5500:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5511:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5500:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5514:31:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":7322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"ExpressionStatement","src":"5492:54:18"},{"assignments":[7330],"declarations":[{"constant":false,"id":7330,"mutability":"mutable","name":"balanceBefore","nameLocation":"5633:13:18","nodeType":"VariableDeclaration","scope":7485,"src":"5625:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7340,"initialValue":{"arguments":[{"arguments":[{"id":7337,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5683:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{}}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5675:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7332,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"5656:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5649:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5649:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5665:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"5649:25:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5649:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5625:64:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"5707:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7343,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"5724:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5707:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e2062616c616e636520666f722073776170","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5734:37:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4992132c728c3f9a9e2aa1e8d2cf5dcf7dd2bc4f38b6394121bcc037bca8bbd6","typeString":"literal_string \"Insufficient token balance for swap\""},"value":"Insufficient token balance for swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4992132c728c3f9a9e2aa1e8d2cf5dcf7dd2bc4f38b6394121bcc037bca8bbd6","typeString":"literal_string \"Insufficient token balance for swap\""}],"id":7341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5699:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5699:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7347,"nodeType":"ExpressionStatement","src":"5699:73:18"},{"expression":{"arguments":[{"arguments":[{"id":7354,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"5878:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5870:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7352,"name":"address","nodeType":"ElementaryTypeName","src":"5870:7:18","typeDescriptions":{}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7356,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"5887:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7349,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"5853:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7348,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5846:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5862:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1264,"src":"5846:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7358,"nodeType":"ExpressionStatement","src":"5846:50:18"},{"assignments":[7360],"declarations":[{"constant":false,"id":7360,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"6006:16:18","nodeType":"VariableDeclaration","scope":7485,"src":"5998:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5998:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"6026:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"393935","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6037:3:18","typeDescriptions":{"typeIdentifier":"t_rational_995_by_1","typeString":"int_const 995"},"value":"995"},"src":"6026:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6025:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6044:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6025:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5998:50:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"5377617020617474656d70743a20","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6116:16:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b89c051d2461e42dd2ed70271d595c1c303157b05615c75af34e6aee279174","typeString":"literal_string \"Swap attempt: \""},"value":"Swap attempt: "},{"arguments":[{"id":7375,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"6151:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7373,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6134:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2731_$","typeString":"type(library Strings)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6142:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"6134:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6134:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6162:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},"value":" "},{"arguments":[{"id":7379,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"6177:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7378,"name":"getSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"6167:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6167:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"202d3e20","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6187:6:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef6ff6b6550277bf0db113948897b53a8814952708bb93a9cc2c349302b32fef","typeString":"literal_string \" -> \""},"value":" -> "},{"arguments":[{"id":7383,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"6205:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7382,"name":"getSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"6195:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6195:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20286665653a20","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6216:9:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_accd384742e0e8af4cee7d5d4d3daf7e5e4b39a8ca90b82ca4267c6637f92007","typeString":"literal_string \" (fee: \""},"value":" (fee: "},{"arguments":[{"id":7388,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"6244:3:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":7386,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6227:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2731_$","typeString":"type(library Strings)"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6235:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"6227:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"29","id":7390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6250:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""},"value":")"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_76b89c051d2461e42dd2ed70271d595c1c303157b05615c75af34e6aee279174","typeString":"literal_string \"Swap attempt: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_ef6ff6b6550277bf0db113948897b53a8814952708bb93a9cc2c349302b32fef","typeString":"literal_string \" -> \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_accd384742e0e8af4cee7d5d4d3daf7e5e4b39a8ca90b82ca4267c6637f92007","typeString":"literal_string \" (fee: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"expression":{"id":7370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6102:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7369,"name":"string","nodeType":"ElementaryTypeName","src":"6102:6:18","typeDescriptions":{}}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6109:6:18","memberName":"concat","nodeType":"MemberAccess","src":"6102:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6102:152:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7368,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"6096:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6096:159:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7393,"nodeType":"EmitStatement","src":"6091:164:18"},{"clauses":[{"block":{"id":7444,"nodeType":"Block","src":"6857:228:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7420,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"6879:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6879:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636569766564207a65726f206f757470757420616d6f756e74","id":7423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6894:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_dab586ba6aa45f865d0a4f0d05d49f696d2dec70ca069a6959ef8200252f5a68","typeString":"literal_string \"Received zero output amount\""},"value":"Received zero output amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dab586ba6aa45f865d0a4f0d05d49f696d2dec70ca069a6959ef8200252f5a68","typeString":"literal_string \"Received zero output amount\""}],"id":7419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6871:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7425,"nodeType":"ExpressionStatement","src":"6871:53:18"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"53776170207375636365737366756c2e204f75743a20","id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6963:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca1b0161a665e8c5131ea01b064ab9f65e2ff773121c6b7a2768de0021837f65","typeString":"literal_string \"Swap successful. Out: \""},"value":"Swap successful. Out: "},{"arguments":[{"id":7433,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"7006:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7431,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"6989:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2731_$","typeString":"type(library Strings)"}},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6997:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"6989:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6989:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"20","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7018:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},"value":" "},{"arguments":[{"id":7437,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"7033:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7436,"name":"getSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"7023:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) view returns (string memory)"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ca1b0161a665e8c5131ea01b064ab9f65e2ff773121c6b7a2768de0021837f65","typeString":"literal_string \"Swap successful. Out: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a","typeString":"literal_string \" \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6949:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7427,"name":"string","nodeType":"ElementaryTypeName","src":"6949:6:18","typeDescriptions":{}}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6956:6:18","memberName":"concat","nodeType":"MemberAccess","src":"6949:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:94:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7426,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"6943:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6943:101:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7441,"nodeType":"EmitStatement","src":"6938:106:18"},{"expression":{"id":7442,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"7065:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7321,"id":7443,"nodeType":"Return","src":"7058:16:18"}]},"errorName":"","id":7445,"nodeType":"TryCatchClause","parameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"amountOut","nameLocation":"6846:9:18","nodeType":"VariableDeclaration","scope":7445,"src":"6838:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6837:19:18"},"src":"6829:256:18"},{"block":{"id":7469,"nodeType":"Block","src":"7120:212:18","statements":[{"eventCall":{"arguments":[{"arguments":[{"hexValue":"53776170206661696c65643a20","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7225:15:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887","typeString":"literal_string \"Swap failed: \""},"value":"Swap failed: "},{"id":7454,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"7242:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887","typeString":"literal_string \"Swap failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7211:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7450,"name":"string","nodeType":"ElementaryTypeName","src":"7211:6:18","typeDescriptions":{}}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7218:6:18","memberName":"concat","nodeType":"MemberAccess","src":"7211:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7449,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"7205:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7457,"nodeType":"EmitStatement","src":"7200:50:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"53776170206661696c65643a20","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7295:15:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887","typeString":"literal_string \"Swap failed: \""},"value":"Swap failed: "},{"id":7464,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"7312:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f794c7178979e3349b786e66fd2a1abd4b301d3e2681c8f0a04e6b08efb8887","typeString":"literal_string \"Swap failed: \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7278:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7282:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"7278:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7278:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7271:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7459,"name":"string","nodeType":"ElementaryTypeName","src":"7271:6:18","typeDescriptions":{}}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7271:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7458,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7264:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7264:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7468,"nodeType":"ExpressionStatement","src":"7264:57:18"}]},"errorName":"Error","id":7470,"nodeType":"TryCatchClause","parameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"reason","nameLocation":"7112:6:18","nodeType":"VariableDeclaration","scope":7470,"src":"7098:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7446,"name":"string","nodeType":"ElementaryTypeName","src":"7098:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7097:22:18"},"src":"7086:246:18"},{"block":{"id":7482,"nodeType":"Block","src":"7354:189:18","statements":[{"eventCall":{"arguments":[{"hexValue":"53776170206661696c6564207769746820756e6b6e6f776e206572726f72","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7445:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c49e6bcc9a54383a500df3dffc95422453325be24e181c4d1347301e3bd21caa","typeString":"literal_string \"Swap failed with unknown error\""},"value":"Swap failed with unknown error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c49e6bcc9a54383a500df3dffc95422453325be24e181c4d1347301e3bd21caa","typeString":"literal_string \"Swap failed with unknown error\""}],"id":7474,"name":"Debug","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"7439:5:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7477,"nodeType":"EmitStatement","src":"7434:44:18"},{"expression":{"arguments":[{"hexValue":"53776170206661696c6564207769746820756e6b6e6f776e206572726f72","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7499:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c49e6bcc9a54383a500df3dffc95422453325be24e181c4d1347301e3bd21caa","typeString":"literal_string \"Swap failed with unknown error\""},"value":"Swap failed with unknown error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c49e6bcc9a54383a500df3dffc95422453325be24e181c4d1347301e3bd21caa","typeString":"literal_string \"Swap failed with unknown error\""}],"id":7478,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7492:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7492:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7481,"nodeType":"ExpressionStatement","src":"7492:40:18"}]},"errorName":"","id":7483,"nodeType":"TryCatchClause","parameters":{"id":7473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7483,"src":"7340:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7471,"name":"bytes","nodeType":"ElementaryTypeName","src":"7340:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7339:14:18"},"src":"7333:210:18"}],"externalCall":{"arguments":[{"arguments":[{"id":7400,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"6454:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7401,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"6489:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7402,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"6520:3:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":7405,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6560:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6552:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7403,"name":"address","nodeType":"ElementaryTypeName","src":"6552:7:18","typeDescriptions":{}}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6552:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7407,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6593:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6599:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"6593:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3135","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6611:10:18","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_900_by_1","typeString":"int_const 900"},"value":"15"},"src":"6593:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7411,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"6673:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6717:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6802:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":7398,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"6392:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$6817_$","typeString":"type(contract ISwapRouter)"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6404:22:18","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":6741,"src":"6392:34:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$6741_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6445:7:18","6479:8:18","6515:3:18","6541:9:18","6583:8:18","6663:8:18","6699:16:18","6783:17:18"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"6392:426:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$6741_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$6741_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$6741_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":7394,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"6278:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6285:16:18","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":6750,"src":"6278:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$6741_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"353030303030","id":7396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6320:6:18","typeDescriptions":{"typeIdentifier":"t_rational_500000_by_1","typeString":"int_const 500000"},"value":"500000"}],"src":"6278:100:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$6741_memory_ptr_$returns$_t_uint256_$gas","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6278:550:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7484,"nodeType":"TryStatement","src":"6274:1269:18"}]},"id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"5258:5:18","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"router","nameLocation":"5285:6:18","nodeType":"VariableDeclaration","scope":7486,"src":"5273:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"},"typeName":{"id":7308,"nodeType":"UserDefinedTypeName","pathNode":{"id":7307,"name":"ISwapRouter","nameLocations":["5273:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":6817,"src":"5273:11:18"},"referencedDeclaration":6817,"src":"5273:11:18","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$6817","typeString":"contract ISwapRouter"}},"visibility":"internal"},{"constant":false,"id":7311,"mutability":"mutable","name":"tokenIn","nameLocation":"5309:7:18","nodeType":"VariableDeclaration","scope":7486,"src":"5301:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7310,"name":"address","nodeType":"ElementaryTypeName","src":"5301:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7313,"mutability":"mutable","name":"tokenOut","nameLocation":"5334:8:18","nodeType":"VariableDeclaration","scope":7486,"src":"5326:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7312,"name":"address","nodeType":"ElementaryTypeName","src":"5326:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7315,"mutability":"mutable","name":"fee","nameLocation":"5359:3:18","nodeType":"VariableDeclaration","scope":7486,"src":"5352:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7314,"name":"uint24","nodeType":"ElementaryTypeName","src":"5352:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":7317,"mutability":"mutable","name":"amountIn","nameLocation":"5380:8:18","nodeType":"VariableDeclaration","scope":7486,"src":"5372:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5372:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5263:131:18"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7486,"src":"5413:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:9:18"},"scope":7560,"src":"5249:2300:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7523,"nodeType":"Block","src":"7693:231:18","statements":[{"assignments":[7494,7496],"declarations":[{"constant":false,"id":7494,"mutability":"mutable","name":"success","nameLocation":"7709:7:18","nodeType":"VariableDeclaration","scope":7523,"src":"7704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7493,"name":"bool","nodeType":"ElementaryTypeName","src":"7704:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7496,"mutability":"mutable","name":"data","nameLocation":"7731:4:18","nodeType":"VariableDeclaration","scope":7523,"src":"7718:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7495,"name":"bytes","nodeType":"ElementaryTypeName","src":"7718:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7504,"initialValue":{"arguments":[{"arguments":[{"hexValue":"73796d626f6c2829","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7780:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec","typeString":"literal_string \"symbol()\""},"value":"symbol()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_95d89b41e2f5f391a79ec54e9d87c79d6e777c63e32c28da95b4e9e4a79250ec","typeString":"literal_string \"symbol()\""}],"expression":{"id":7499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7756:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7760:19:18","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"7756:23:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7497,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"7739:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7745:10:18","memberName":"staticcall","nodeType":"MemberAccess","src":"7739:16:18","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7739:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7703:89:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7505,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"7806:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7506,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"7817:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7822:6:18","memberName":"length","nodeType":"MemberAccess","src":"7817:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7817:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7806:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7520,"nodeType":"IfStatement","src":"7802:90:18","trueBody":{"id":7519,"nodeType":"Block","src":"7834:58:18","statements":[{"expression":{"arguments":[{"id":7513,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"7866:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":7515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7514,"name":"string","nodeType":"ElementaryTypeName","src":"7873:6:18","typeDescriptions":{}}}],"id":7516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7872:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":7511,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7855:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7859:6:18","memberName":"decode","nodeType":"MemberAccess","src":"7855:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7855:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7492,"id":7518,"nodeType":"Return","src":"7848:33:18"}]}},{"expression":{"hexValue":"554e4b4e4f574e","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7908:9:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7695161cac249b85fbc07184e7834e478da25ac93990ab166c1c538e6504e47e","typeString":"literal_string \"UNKNOWN\""},"value":"UNKNOWN"},"functionReturnParameters":7492,"id":7522,"nodeType":"Return","src":"7901:16:18"}]},"id":7524,"implemented":true,"kind":"function","modifiers":[],"name":"getSymbol","nameLocation":"7630:9:18","nodeType":"FunctionDefinition","parameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"token","nameLocation":"7648:5:18","nodeType":"VariableDeclaration","scope":7524,"src":"7640:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7487,"name":"address","nodeType":"ElementaryTypeName","src":"7640:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7639:15:18"},"returnParameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7524,"src":"7678:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7490,"name":"string","nodeType":"ElementaryTypeName","src":"7678:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7677:15:18"},"scope":7560,"src":"7621:303:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7558,"nodeType":"Block","src":"7982:162:18","statements":[{"assignments":[7532],"declarations":[{"constant":false,"id":7532,"mutability":"mutable","name":"bal","nameLocation":"8000:3:18","nodeType":"VariableDeclaration","scope":7558,"src":"7992:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7542,"initialValue":{"arguments":[{"arguments":[{"id":7539,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8038:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrageur_$7560","typeString":"contract FlashLoanArbitrageur"}],"id":7538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8030:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7537,"name":"address","nodeType":"ElementaryTypeName","src":"8030:7:18","typeDescriptions":{}}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8030:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7534,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"8013:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7533,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8006:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8020:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"8006:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7992:52:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7544,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"8062:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8068:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8062:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7468696e6720746f207769746864726177","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8071:21:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394","typeString":"literal_string \"Nothing to withdraw\""},"value":"Nothing to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394","typeString":"literal_string \"Nothing to withdraw\""}],"id":7543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8054:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8054:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7549,"nodeType":"ExpressionStatement","src":"8054:39:18"},{"expression":{"arguments":[{"id":7554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"8126:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7555,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"8133:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7551,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"8110:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7550,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8103:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8117:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1244,"src":"8103:22:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7557,"nodeType":"ExpressionStatement","src":"8103:34:18"}]},"functionSelector":"51cff8d9","id":7559,"implemented":true,"kind":"function","modifiers":[{"id":7529,"kind":"modifierInvocation","modifierName":{"id":7528,"name":"onlyOwner","nameLocations":["7972:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":6893,"src":"7972:9:18"},"nodeType":"ModifierInvocation","src":"7972:9:18"}],"name":"withdraw","nameLocation":"7939:8:18","nodeType":"FunctionDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"mutability":"mutable","name":"token","nameLocation":"7956:5:18","nodeType":"VariableDeclaration","scope":7559,"src":"7948:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7525,"name":"address","nodeType":"ElementaryTypeName","src":"7948:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7947:15:18"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[],"src":"7982:0:18"},"scope":7560,"src":"7930:214:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7561,"src":"705:7441:18","usedErrors":[],"usedEvents":[6877,6881]}],"src":"32:8116:18"},"id":18}},"contracts":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"backer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BackUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDebt","type":"uint256"}],"name":"IsolationModeTotalDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"MintUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"useATokens","type":"bool"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Supply","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"SwapBorrowRateMode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"UserEModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_PROTOCOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TOTAL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUMBER_RESERVES","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"backUnbacked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"},{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"config","type":"tuple"}],"name":"configureEModeCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"dropReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromBefore","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"interestRateModes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoanSimple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"}],"name":"getEModeCategoryData","outputs":[{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"id","type":"uint16"}],"name":"getReserveAddressById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"uint16","name":"id","type":"uint16"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint128","name":"accruedToTreasury","type":"uint128"},{"internalType":"uint128","name":"unbacked","type":"uint128"},{"internalType":"uint128","name":"isolationModeTotalDebt","type":"uint128"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralBase","type":"uint256"},{"internalType":"uint256","name":"totalDebtBase","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsBase","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEMode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"mintToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"mintUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"repayWithATokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"repayWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"resetIsolationModeTotalDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"setUserEMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"supply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"supplyWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bridgeProtocolFee","type":"uint256"}],"name":"updateBridgeProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"flashLoanPremiumTotal","type":"uint128"},{"internalType":"uint128","name":"flashLoanPremiumToProtocol","type":"uint128"}],"name":"updateFlashloanPremiums","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BRIDGE_PROTOCOL_FEE()":"272d9072","FLASHLOAN_PREMIUM_TOTAL()":"074b2e43","FLASHLOAN_PREMIUM_TO_PROTOCOL()":"6a99c036","MAX_NUMBER_RESERVES()":"f8119d51","MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":"e82fec2f","backUnbacked(address,uint256,uint256)":"d65dc7a1","borrow(address,uint256,uint256,uint16,address)":"a415bcad","configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":"d579ea7d","deposit(address,uint256,address,uint16)":"e8eda9df","dropReserve(address)":"63c9b860","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","flashLoanSimple(address,address,uint256,bytes,uint16)":"42b0b77c","getConfiguration(address)":"c44b11f7","getEModeCategoryData(uint8)":"6c6f6ae1","getReserveAddressById(uint16)":"52751797","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","getUserEMode(address)":"eddf1b79","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","mintToTreasury(address[])":"9cd19996","mintUnbacked(address,uint256,address,uint16)":"69a933a5","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","repayWithATokens(address,uint256,uint256)":"2dad97d4","repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":"ee3e210b","rescueTokens(address,address,uint256)":"cea9d26f","resetIsolationModeTotalDebt(address)":"e43e88a1","setConfiguration(address,(uint256))":"f51e435b","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserEMode(uint8)":"28530a47","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","supply(address,uint256,address,uint16)":"617ba037","supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":"02c205f0","swapBorrowRateMode(address,uint256)":"94ba89a2","updateBridgeProtocolFee(uint256)":"3036b439","updateFlashloanPremiums(uint128,uint128)":"bcb6e522","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}"}},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"IPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementationAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"AddressSetAsProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"oldMarketId","type":"string"},{"indexed":true,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolDataProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleSentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":true,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getACLAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getACLManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolDataProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracleSentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAclAdmin","type":"address"}],"name":"setACLAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAclManager","type":"address"}],"name":"setACLManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMarketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolConfiguratorImpl","type":"address"}],"name":"setPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDataProvider","type":"address"}],"name":"setPoolDataProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolImpl","type":"address"}],"name":"setPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracleSentinel","type":"address"}],"name":"setPriceOracleSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getACLAdmin()":"0e67178c","getACLManager()":"707cd716","getAddress(bytes32)":"21f8a721","getMarketId()":"568ef470","getPool()":"026b1d5f","getPoolConfigurator()":"631adfca","getPoolDataProvider()":"e860accb","getPriceOracle()":"fca513a8","getPriceOracleSentinel()":"5eb88d3d","setACLAdmin(address)":"76d84ffc","setACLManager(address)":"ed301ca9","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setMarketId(string)":"f67b1847","setPoolConfiguratorImpl(address)":"e4ca28b7","setPoolDataProvider(address)":"e44e9ed1","setPoolImpl(address)":"a1564406","setPriceOracle(address)":"530e784f","setPriceOracleSentinel(address)":"74944cec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]}},\"version\":1}"}},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b567dca256613d1d1550c62a4cce102a8b26cdf5dc91b31a7519f17fd2208f5464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH8 0xDCA256613D1D1550 0xC6 0x2A 0x4C 0xCE LT 0x2A DUP12 0x26 0xCD CREATE2 0xDC SWAP2 0xB3 BYTE PUSH22 0x19F17FD2208F5464736F6C6343000814003300000000 ","sourceMap":"62:7306:2:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b567dca256613d1d1550c62a4cce102a8b26cdf5dc91b31a7519f17fd2208f5464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH8 0xDCA256613D1D1550 0xC6 0x2A 0x4C 0xCE LT 0x2A DUP12 0x26 0xCD CREATE2 0xDC SWAP2 0xB3 BYTE PUSH22 0x19F17FD2208F5464736F6C6343000814003300000000 ","sourceMap":"62:7306:2:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/FlashLoanArbitrageur.sol":{"FlashLoanArbitrageur":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":false,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"profit","type":"uint256"}],"name":"ArbitrageExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Debug","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"address","name":"tokenMid","type":"address"},{"internalType":"uint24","name":"fee1","type":"uint24"},{"internalType":"uint24","name":"fee2","type":"uint24"},{"internalType":"uint256","name":"minProfit","type":"uint256"},{"internalType":"uint8","name":"direction","type":"uint8"},{"internalType":"address","name":"uniswapRouter","type":"address"},{"internalType":"address","name":"sushiswapRouter","type":"address"}],"name":"startUniswapV3Flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fee0","type":"uint256"},{"internalType":"uint256","name":"fee1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3FlashCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461002857600080546001600160a01b031916331790556119c5908161002e8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c806351cff8d914610da857806385d8609d14610a4a5780638da5cb5b14610a235763e9cbafb01461004957600080fd5b34610a20576060366003190112610a205760443567ffffffffffffffff808211610a1c5736602383011215610a1c578160040135908111610a1c578101366024820111610a1c578161014091600080516020611970833981519152606060405160208152601c60208201527f537461727420756e69737761705633466c61736843616c6c6261636b000000006040820152a10312610a1857604051906100ee82610f48565b6100fa60248201610eec565b825261010860448201610eec565b602083015261011960648201610eec565b604083015261012a60848201610f00565b606083015261013b60a48201610f00565b608083015260c481013560a083015260e481013560ff8116810361069b57610191916101449160c08501526101736101048201610eec565b60e08501526101856101248201610eec565b61010085015201610eec565b610120820152604051630dfe168160e01b8152602081600481335afa8391816109e7575b506101f65760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420706f6f6c206164647265737360601b6044820152606490fd5b81516001600160a01b039081169116036109ac5780516040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156109a157839161096f575b506020828101516040516370a0823160e01b81523060048201529190829060249082906001600160a01b03165afa9081156106a857849161093d575b50811561093657815b82156108f857826000805160206119708339815191526103126102ab8896611084565b6102fe603760405180937f526563656976656420666c61736820616d6f756e743a2000000000000000000060208301526102ee8151809260208686019101610fd8565b8101036017810184520182610f97565b604051918291602083526020830190610ffb565b0390a18451600080516020611970833981519152906103bd9061033d906001600160a01b0316611890565b60208801516102fe9060319061035b906001600160a01b0316611890565b926040519384916702a37b5b2b7181d160c51b6020840152610387815180926020602887019101610fd8565b8201680102a37b5b2b7189d160bd1b60288201526103ae8251809360208785019101610fd8565b01036011810184520182610f97565b0390a160c085015160ff166108ab576000805160206119708339815191526104566040516103ea81610f7b565b601881527f546f6b656e302d3e546f6b656e4d69642d3e546f6b656e31000000000000000060208201525b6102fe602b60405180936a02234b932b1ba34b7b71d160ad1b60208301526104468151809260208686019101610fd8565b810103600b810184520182610f97565b0390a160c085015160ff1661083b5760e08501518551604087015160608801516104cf9462ffffff9461049e949193928616926001600160a01b03908116928116911661128e565b6101008701516040880151602089015160808a01519394909316926001600160a01b0390811692918116911661128e565b505b8015610832576104e4815b60043561103c565b821561082857836104f8845b60243561103c565b91806107c2575b505080610739575b5060c08401516024935060ff166106b357506020838101516040516370a0823160e01b815230600482015293849182906001600160a01b03165afa9182156106a857849261066d575b50906105626105679260243592611077565b611077565b60a082015181106106345761012082015160c08301516001600160a01b03909116927f546205492ce144edebd2cc39035c50dbd9aebfec90cbcae9c9ae2914d1e130f7929160ff1661062557602001516001600160a01b03165b604080516001600160a01b039290921682526020820192909252a2600080516020611970833981519152606060405160208152601f60208201527f4172626974726167652066696e6973686564207375636365737366756c6c79006040820152a180f35b516001600160a01b03166105c1565b60405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081c1c9bd99a5d607a1b6044820152606490fd5b91506020823d6020116106a0575b8161068860209383610f97565b8101031261069b57905190610562610550565b600080fd5b3d915061067b565b6040513d86823e3d90fd5b83516040516370a0823160e01b815230600482015293919250602091849182906001600160a01b03165afa9182156106a8578492610703575b50906105626106fe9260043592611077565b610567565b91506020823d602011610731575b8161071e60209383610f97565b8101031261069b579051906105626106ec565b3d9150610711565b60208581015160405163a9059cbb60e01b815233600482015260248101939093529194909185916044918391906001600160a01b03165af19283156107b757602493610788575b859350610507565b6107a99060203d6020116107b0575b6107a18183610f97565b81019061105f565b5038610780565b503d610797565b6040513d87823e3d90fd5b865160405163a9059cbb60e01b81523360048201526024810192909252909160209183916044918391906001600160a01b03165af180156107b757610809575b84906104ff565b6108219060203d6020116107b0576107a18183610f97565b5038610802565b836104f8816104f0565b6104e4836104dc565b60e08501516020860151604087015160608801516108a59462ffffff94610877949193928616926001600160a01b03908116928116911661128e565b6101008701516040880151885160808a01519394909316926001600160a01b0390811692918116911661128e565b506104d1565b6000805160206119708339815191526104566040516108c981610f7b565b601881527f546f6b656e312d3e546f6b656e4d69642d3e546f6b656e3000000000000000006020820152610415565b60405162461bcd60e51b8152602060048201526016602482015275139bc8199b185cda081b1bd85b881c9958d95a5d995960521b6044820152606490fd5b8091610288565b90506020813d602011610967575b8161095860209383610f97565b8101031261069b57513861027f565b3d915061094b565b90506020813d602011610999575b8161098a60209383610f97565b8101031261069b575138610243565b3d915061097d565b6040513d85823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152720496e76616c696420706f6f6c20746f6b656e3606c1b6044820152606490fd5b610a0a91925060203d602011610a11575b610a028183610f97565b810190610fb9565b90386101b5565b503d6109f8565b5080fd5b8280fd5b80fd5b5034610a205780600319360112610a2057546040516001600160a01b039091168152602090f35b5034610a2057610140366003190112610a2057610a65610ed6565b606435906001600160a01b0382168203610a1c576084359162ffffff83168303610da45760a43562ffffff81168103610da05760e43560ff81168103610d9c5761010435906001600160a01b0382168203610d985761012435926001600160a01b0384168403610d9457610ae360018060a01b038954163314610f10565b604051630dfe168160e01b8152966020886004816001600160a01b038b165afa978815610d89578998610d68575b5060405163d21220a760e01b8152956020876004816001600160a01b038c165afa968715610d5d578a97610d2c575b509162ffffff809260ff959460405199610b598b610f48565b60018060a01b038d168b5260018060a01b031660208b015260018060a01b031660408a015216606088015216608086015260c43560a08601521660c084015260018060a01b031660e083015260018060a01b0316610100820152336101208201526040519260018060a01b0316602084015260018060a01b03602082015116604084015260018060a01b03604082015116606084015262ffffff606082015116608084015262ffffff60808201511660a084015260a081015160c084015260ff60c08201511660e084015260018060a01b0360e08201511661010084015260018060a01b036101008201511661012084015261012060018060a01b0391015116610140830152610140825261016082019167ffffffffffffffff8311918184108317610d185760408490528491906001600160a01b0381163b15610a1c576312439b2f60e21b8552306101648301526024356101848301526044356101a483015260806101c483015284918290849061015f1990610cdb6101e4820182610ffb565b0301926001600160a01b03165af180156109a157610cf7578280f35b610d045760405238808280f35b634e487b7160e01b82526041600452602482fd5b634e487b7160e01b85526041600452602485fd5b60ff949391975062ffffff92610d51849260203d602011610a1157610a028183610f97565b98929495509250610b40565b6040513d8c823e3d90fd5b610d8291985060203d602011610a1157610a028183610f97565b9638610b11565b6040513d8b823e3d90fd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b5034610a2057602080600319360112610a1857610dc3610ed6565b82546001600160a01b0390811691610ddc338414610f10565b16604051916370a0823160e01b83523060048401528383602481855afa9283156107b7578593610ea7575b508215610e6c5760405163a9059cbb60e01b81526001600160a01b03919091166004820152602481019290925282908290604490829087905af180156109a157610e4f578280f35b81610e6592903d106107b0576107a18183610f97565b5038808280f35b60405162461bcd60e51b81526004810185905260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606490fd5b9092508381813d8311610ecf575b610ebf8183610f97565b81010312610da057519138610e07565b503d610eb5565b600435906001600160a01b038216820361069b57565b35906001600160a01b038216820361069b57565b359062ffffff8216820361069b57565b15610f1757565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b610140810190811067ffffffffffffffff821117610f6557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610f6557604052565b90601f8019910116810190811067ffffffffffffffff821117610f6557604052565b9081602091031261069b57516001600160a01b038116810361069b5790565b60005b838110610feb5750506000910152565b8181015183820152602001610fdb565b9060209161101481518092818552858086019101610fd8565b601f01601f1916010190565b67ffffffffffffffff8111610f6557601f01601f191660200190565b9190820180921161104957565b634e487b7160e01b600052601160045260246000fd5b9081602091031261069b5751801515810361069b5790565b9190820391821161104957565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000808210156111de575b506d04ee2d6d415b85acef8100000000808310156111cf575b50662386f26fc10000808310156111c0575b506305f5e100808310156111b1575b50612710808310156111a2575b506064821015611192575b600a80921015611188575b6001908160218186019561111d87611020565b9661112b6040519889610f97565b80885261113a601f1991611020565b01366020890137860101905b611152575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561118357919082611146565b61114b565b916001019161110a565b91906064600291049101916110ff565b600491939204910191386110f4565b600891939204910191386110e7565b601091939204910191386110d8565b602091939204910191386110c6565b6040935081049150386110ad565b600060443d1061124a57604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761124d57818401948551938411611255573d8501016020848701011161124d575061124a92910160200190610f97565b90565b949350505050565b50949350505050565b3d15611289573d9061126f82611020565b9161127d6040519384610f97565b82523d6000602084013e565b606090565b909192841561184b576040516370a0823160e01b81523060048201526020816024816001600160a01b0388165afa80156117b9578691600091611816575b50106117c55760405163095ea7b360e01b81526001600160a01b0383166004820152602481018690526020818060448101038160006001600160a01b0389165af180156117b95761179a575b506103e38581810204036110495760008051602061197083398151915261141961134187611084565b6102fe603b61134f88611890565b926113598a611890565b61136762ffffff8916611084565b906040519586936d029bbb0b81030ba3a32b6b83a1d160951b6020860152611399815180926020602e89019101610fd8565b8401600160fd1b602e8201526113b9825180936020602f85019101610fd8565b0163010169f160e51b602f8201526113db825180936020603385019101610fd8565b0166010143332b29d160cd1b6033820152611400825180936020603a85019101610fd8565b01602960f81b603a82015203601b810184520182610f97565b0390a161038442014211611049576040518061010081011067ffffffffffffffff61010083011117610f6557610100810160409081526001600160a01b039485168252858516602083810191825262ffffff948516838501908152306060860190815242610384016080870190815260a087019b8c52600060c0880181815260e08901828152975163414bf38960e01b815298518c1660048a015295518b16602489015292519097166044870152518816606486015294516084850152975160a48401525160c483015251841660e4820152949285926101049284929091166207a120f160009281611766575b5061168357600060033d11611675575b6308c379a0146115c5575b61152961125e565b50600080516020611970833981519152604051806115798160609060208152601e60208201527f53776170206661696c6564207769746820756e6b6e6f776e206572726f72000060408201520190565b0390a160405162461bcd60e51b815260206004820152601e60248201527f53776170206661696c6564207769746820756e6b6e6f776e206572726f7200006044820152606490fd5b0390fd5b6115cd6111ec565b806115d85750611521565b6115c190611655602d6040516c029bbb0b8103330b4b632b21d1609d1b908160208201526000805160206119708339815191526116388651926102fe868260208b0196611628818484018a610fd8565b810103600d810184520182610f97565b0390a1611628604051958693602085015251809285850190610fd8565b60405162461bcd60e51b8152602060048201529182916024830190610ffb565b600481803e5160e01c611516565b81156117215761171b600080516020611970833981519152916102fe60376116b36116ad87611084565b93611890565b9260405193849175029bbb0b81039bab1b1b2b9b9b33ab6171027baba1d160551b60208401526116ed815180926020603687019101610fd8565b8201600160fd1b603682015261170c8251809360208785019101610fd8565b01036017810184520182610f97565b0390a190565b60405162461bcd60e51b815260206004820152601b60248201527f5265636569766564207a65726f206f757470757420616d6f756e7400000000006044820152606490fd5b90926020823d602011611792575b8161178160209383610f97565b81010312610a205750519138611506565b3d9150611774565b6117b29060203d6020116107b0576107a18183610f97565b5038611318565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e7420746f6b656e2062616c616e636520666f72207360448201526207761760ec1b6064820152608490fd5b91506020823d602011611843575b8161183160209383610f97565b81010312610a205750859051386112cc565b3d9150611824565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6040516395d89b4160e01b60208083019182526004835292916118b281610f7b565b6000928392839251915afa906118c661125e565b9180611965575b6118f5575050662aa725a727aba760c91b604051916118eb83610f7b565b6007835282015290565b909182518301928181818601950312610a1c57818101519067ffffffffffffffff8211610da457019083603f83011215610a1c57808201519261193784611020565b946119456040519687610f97565b84865260408585010111610a20575090604061124a939285019101610fd8565b50815115156118cd56fe7cdb51e9dbbc205231228146c3246e7f914aa6d4a33170e43ecc8e3593481d1aa2646970667358221220352bd87b5860b1cfc5509b96c3fffc96b44a43f1aff054d64b8ae1efad86862664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x19C5 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0x85D8609D EQ PUSH2 0xA4A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA23 JUMPI PUSH4 0xE9CBAFB0 EQ PUSH2 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA20 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA20 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0xA1C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xA1C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xA1C JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH2 0xA1C JUMPI DUP2 PUSH2 0x140 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x537461727420756E69737761705633466C61736843616C6C6261636B00000000 PUSH1 0x40 DUP3 ADD MSTORE LOG1 SUB SLT PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xEE DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x24 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST DUP3 MSTORE PUSH2 0x108 PUSH1 0x44 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x119 PUSH1 0x64 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12A PUSH1 0x84 DUP3 ADD PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13B PUSH1 0xA4 DUP3 ADD PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC4 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE4 DUP2 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x69B JUMPI PUSH2 0x191 SWAP2 PUSH2 0x144 SWAP2 PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x173 PUSH2 0x104 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x185 PUSH2 0x124 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 CALLER GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x9E7 JUMPI JUMPDEST POP PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x9AC JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A1 JUMPI DUP4 SWAP2 PUSH2 0x96F JUMPI JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP2 PUSH2 0x93D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x936 JUMPI DUP2 JUMPDEST DUP3 ISZERO PUSH2 0x8F8 JUMPI DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x312 PUSH2 0x2AB DUP9 SWAP7 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x37 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x526563656976656420666C61736820616D6F756E743A20000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2EE DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x17 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xFFB JUMP JUMPDEST SUB SWAP1 LOG1 DUP5 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3BD SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x2FE SWAP1 PUSH1 0x31 SWAP1 PUSH2 0x35B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH8 0x2A37B5B2B7181D1 PUSH1 0xC5 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x387 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x28 DUP8 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP3 ADD PUSH9 0x102A37B5B2B7189D1 PUSH1 0xBD SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH2 0x3AE DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD SUB PUSH1 0x11 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x456 PUSH1 0x40 MLOAD PUSH2 0x3EA DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x546F6B656E302D3E546F6B656E4D69642D3E546F6B656E310000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0x2FE PUSH1 0x2B PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH11 0x2234B932B1BA34B7B71D1 PUSH1 0xAD SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x446 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xB DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x83B JUMPI PUSH1 0xE0 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH2 0x4CF SWAP5 PUSH3 0xFFFFFF SWAP5 PUSH2 0x49E SWAP5 SWAP2 SWAP4 SWAP3 DUP7 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x80 DUP11 ADD MLOAD SWAP4 SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI PUSH2 0x4E4 DUP2 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x103C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x828 JUMPI DUP4 PUSH2 0x4F8 DUP5 JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x103C JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x7C2 JUMPI JUMPDEST POP POP DUP1 PUSH2 0x739 JUMPI JUMPDEST POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x24 SWAP4 POP PUSH1 0xFF AND PUSH2 0x6B3 JUMPI POP PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP3 PUSH2 0x66D JUMPI JUMPDEST POP SWAP1 PUSH2 0x562 PUSH2 0x567 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x1077 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH32 0x546205492CE144EDEBD2CC39035C50DBD9AEBFEC90CBCAE9C9AE2914D1E130F7 SWAP3 SWAP2 PUSH1 0xFF AND PUSH2 0x625 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4172626974726167652066696E6973686564207375636365737366756C6C7900 PUSH1 0x40 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD08195B9BDD59DA081C1C9BD99A5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6A0 JUMPI JUMPDEST DUP2 PUSH2 0x688 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x562 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP2 SWAP3 POP PUSH1 0x20 SWAP2 DUP5 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP3 PUSH2 0x703 JUMPI JUMPDEST POP SWAP1 PUSH2 0x562 PUSH2 0x6FE SWAP3 PUSH1 0x4 CALLDATALOAD SWAP3 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x731 JUMPI JUMPDEST DUP2 PUSH2 0x71E PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x562 PUSH2 0x6EC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 SWAP1 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x24 SWAP4 PUSH2 0x788 JUMPI JUMPDEST DUP6 SWAP4 POP PUSH2 0x507 JUMP JUMPDEST PUSH2 0x7A9 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI JUMPDEST PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x105F JUMP JUMPDEST POP CODESIZE PUSH2 0x780 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x809 JUMPI JUMPDEST DUP5 SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x821 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE PUSH2 0x802 JUMP JUMPDEST DUP4 PUSH2 0x4F8 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x4E4 DUP4 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH2 0x8A5 SWAP5 PUSH3 0xFFFFFF SWAP5 PUSH2 0x877 SWAP5 SWAP2 SWAP4 SWAP3 DUP7 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD DUP9 MLOAD PUSH1 0x80 DUP11 ADD MLOAD SWAP4 SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST POP PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x456 PUSH1 0x40 MLOAD PUSH2 0x8C9 DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x546F6B656E312D3E546F6B656E4D69642D3E546F6B656E300000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC8199B185CDA081B1BD85B881C9958D95A5D9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP2 PUSH2 0x288 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x967 JUMPI JUMPDEST DUP2 PUSH2 0x958 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI MLOAD CODESIZE PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x94B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x999 JUMPI JUMPDEST DUP2 PUSH2 0x98A PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI MLOAD CODESIZE PUSH2 0x243 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420706F6F6C20746F6B656E3 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA0A SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI JUMPDEST PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9F8 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA20 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA20 JUMPI PUSH2 0xA65 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA1C JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP4 SUB PUSH2 0xDA4 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 SUB PUSH2 0xDA0 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0xD9C JUMPI PUSH2 0x104 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD98 JUMPI PUSH2 0x124 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH2 0xD94 JUMPI PUSH2 0xAE3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 SLOAD AND CALLER EQ PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xD89 JUMPI DUP10 SWAP9 PUSH2 0xD68 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 PUSH1 0x20 DUP8 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xD5D JUMPI DUP11 SWAP8 PUSH2 0xD2C JUMPI JUMPDEST POP SWAP2 PUSH3 0xFFFFFF DUP1 SWAP3 PUSH1 0xFF SWAP6 SWAP5 PUSH1 0x40 MLOAD SWAP10 PUSH2 0xB59 DUP12 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND DUP12 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE AND PUSH1 0x60 DUP9 ADD MSTORE AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP3 ADD MSTORE CALLER PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP3 MSTORE PUSH2 0x160 DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT SWAP2 DUP2 DUP5 LT DUP4 OR PUSH2 0xD18 JUMPI PUSH1 0x40 DUP5 SWAP1 MSTORE DUP5 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xA1C JUMPI PUSH4 0x12439B2F PUSH1 0xE2 SHL DUP6 MSTORE ADDRESS PUSH2 0x164 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x184 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1A4 DUP4 ADD MSTORE PUSH1 0x80 PUSH2 0x1C4 DUP4 ADD MSTORE DUP5 SWAP2 DUP3 SWAP1 DUP5 SWAP1 PUSH2 0x15F NOT SWAP1 PUSH2 0xCDB PUSH2 0x1E4 DUP3 ADD DUP3 PUSH2 0xFFB JUMP JUMPDEST SUB ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0xCF7 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xD04 JUMPI PUSH1 0x40 MSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0xFF SWAP5 SWAP4 SWAP2 SWAP8 POP PUSH3 0xFFFFFF SWAP3 PUSH2 0xD51 DUP5 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST SWAP9 SWAP3 SWAP5 SWAP6 POP SWAP3 POP PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD82 SWAP2 SWAP9 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA18 JUMPI PUSH2 0xDC3 PUSH2 0xED6 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xDDC CALLER DUP5 EQ PUSH2 0xF10 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE DUP4 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x7B7 JUMPI DUP6 SWAP4 PUSH2 0xEA7 JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0xE4F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xE65 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xECF JUMPI JUMPDEST PUSH2 0xEBF DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDA0 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0xE07 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST ISZERO PUSH2 0xF17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69B JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x69B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xFEB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1014 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF65 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1049 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x69B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1049 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x11DE JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x11CF JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x11C0 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x11B1 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x11A2 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x1192 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1188 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x111D DUP8 PUSH2 0x1020 JUMP JUMPDEST SWAP7 PUSH2 0x112B PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0xF97 JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x113A PUSH1 0x1F NOT SWAP2 PUSH2 0x1020 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x1152 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x1183 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x124D JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1255 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x124D JUMPI POP PUSH2 0x124A SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1289 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x126F DUP3 PUSH2 0x1020 JUMP JUMPDEST SWAP2 PUSH2 0x127D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xF97 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 ISZERO PUSH2 0x184B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x17B9 JUMPI DUP7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1816 JUMPI JUMPDEST POP LT PUSH2 0x17C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x179A JUMPI JUMPDEST POP PUSH2 0x3E3 DUP6 DUP2 DUP2 MUL DIV SUB PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1419 PUSH2 0x1341 DUP8 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x3B PUSH2 0x134F DUP9 PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH2 0x1359 DUP11 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1367 PUSH3 0xFFFFFF DUP10 AND PUSH2 0x1084 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH14 0x29BBB0B81030BA3A32B6B83A1D1 PUSH1 0x95 SHL PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1399 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x2E DUP10 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP5 ADD PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x2E DUP3 ADD MSTORE PUSH2 0x13B9 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x2F DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH4 0x10169F1 PUSH1 0xE5 SHL PUSH1 0x2F DUP3 ADD MSTORE PUSH2 0x13DB DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x33 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH7 0x10143332B29D1 PUSH1 0xCD SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH2 0x1400 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x3A DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x3A DUP3 ADD MSTORE SUB PUSH1 0x1B DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x384 TIMESTAMP ADD TIMESTAMP GT PUSH2 0x1049 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x100 DUP4 ADD GT OR PUSH2 0xF65 JUMPI PUSH2 0x100 DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP3 MSTORE DUP6 DUP6 AND PUSH1 0x20 DUP4 DUP2 ADD SWAP2 DUP3 MSTORE PUSH3 0xFFFFFF SWAP5 DUP6 AND DUP4 DUP6 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH2 0x384 ADD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD SWAP12 DUP13 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP10 ADD DUP3 DUP2 MSTORE SWAP8 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD DUP13 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP12 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP8 AND PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP9 AND PUSH1 0x64 DUP7 ADD MSTORE SWAP5 MLOAD PUSH1 0x84 DUP6 ADD MSTORE SWAP8 MLOAD PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC4 DUP4 ADD MSTORE MLOAD DUP5 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP5 SWAP3 DUP6 SWAP3 PUSH2 0x104 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND PUSH3 0x7A120 CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1766 JUMPI JUMPDEST POP PUSH2 0x1683 JUMPI PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1675 JUMPI JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x15C5 JUMPI JUMPDEST PUSH2 0x1529 PUSH2 0x125E JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x1579 DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x53776170206661696C6564207769746820756E6B6E6F776E206572726F720000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170206661696C6564207769746820756E6B6E6F776E206572726F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CD PUSH2 0x11EC JUMP JUMPDEST DUP1 PUSH2 0x15D8 JUMPI POP PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x15C1 SWAP1 PUSH2 0x1655 PUSH1 0x2D PUSH1 0x40 MLOAD PUSH13 0x29BBB0B8103330B4B632B21D1 PUSH1 0x9D SHL SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1638 DUP7 MLOAD SWAP3 PUSH2 0x2FE DUP7 DUP3 PUSH1 0x20 DUP12 ADD SWAP7 PUSH2 0x1628 DUP2 DUP5 DUP5 ADD DUP11 PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1628 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH1 0x20 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x4 DUP2 DUP1 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR PUSH2 0x1516 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1721 JUMPI PUSH2 0x171B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2FE PUSH1 0x37 PUSH2 0x16B3 PUSH2 0x16AD DUP8 PUSH2 0x1084 JUMP JUMPDEST SWAP4 PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH22 0x29BBB0B81039BAB1B1B2B9B9B33AB6171027BABA1D1 PUSH1 0x55 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16ED DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x36 DUP8 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP3 ADD PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH2 0x170C DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD SUB PUSH1 0x17 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564207A65726F206F757470757420616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1792 JUMPI JUMPDEST DUP2 PUSH2 0x1781 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA20 JUMPI POP MLOAD SWAP2 CODESIZE PUSH2 0x1506 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x17B2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520666F722073 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x77617 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1843 JUMPI JUMPDEST DUP2 PUSH2 0x1831 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA20 JUMPI POP DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x12CC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 SWAP2 PUSH2 0x18B2 DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x18C6 PUSH2 0x125E JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x1965 JUMPI JUMPDEST PUSH2 0x18F5 JUMPI POP POP PUSH7 0x2AA725A727ABA7 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x18EB DUP4 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x7 DUP4 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 MLOAD DUP4 ADD SWAP3 DUP2 DUP2 DUP2 DUP7 ADD SWAP6 SUB SLT PUSH2 0xA1C JUMPI DUP2 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDA4 JUMPI ADD SWAP1 DUP4 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0xA1C JUMPI DUP1 DUP3 ADD MLOAD SWAP3 PUSH2 0x1937 DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP5 PUSH2 0x1945 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xF97 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x40 DUP6 DUP6 ADD ADD GT PUSH2 0xA20 JUMPI POP SWAP1 PUSH1 0x40 PUSH2 0x124A SWAP4 SWAP3 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x18CD JUMP INVALID PUSH29 0xDB51E9DBBC205231228146C3246E7F914AA6D4A33170E43ECC8E359348 SAR BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x2B 0xD8 PUSH28 0x5860B1CFC5509B96C3FFFC96B44A43F1AFF054D64B8AE1EFAD868626 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"705:7441:18:-:0;;;;;;;1390:18;705:7441;;-1:-1:-1;;;;;;705:7441:18;1398:10;705:7441;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3820,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_13668":{"entryPoint":3798,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":4191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint24":{"entryPoint":3840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes":{"entryPoint":4091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_c49e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4128,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":4156,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4215,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4056,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":4702,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":3991,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_13676":{"entryPoint":3912,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17196":{"entryPoint":3963,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getSymbol":{"entryPoint":6288,"id":7524,"parameterSlots":1,"returnSlots":1},"fun_swap":{"entryPoint":4750,"id":7486,"parameterSlots":5,"returnSlots":1},"fun_toString":{"entryPoint":4228,"id":1443,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_c266":{"entryPoint":3856,"id":null,"parameterSlots":1,"returnSlots":0},"try_decode_error_message":{"entryPoint":4588,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c806351cff8d914610da857806385d8609d14610a4a5780638da5cb5b14610a235763e9cbafb01461004957600080fd5b34610a20576060366003190112610a205760443567ffffffffffffffff808211610a1c5736602383011215610a1c578160040135908111610a1c578101366024820111610a1c578161014091600080516020611970833981519152606060405160208152601c60208201527f537461727420756e69737761705633466c61736843616c6c6261636b000000006040820152a10312610a1857604051906100ee82610f48565b6100fa60248201610eec565b825261010860448201610eec565b602083015261011960648201610eec565b604083015261012a60848201610f00565b606083015261013b60a48201610f00565b608083015260c481013560a083015260e481013560ff8116810361069b57610191916101449160c08501526101736101048201610eec565b60e08501526101856101248201610eec565b61010085015201610eec565b610120820152604051630dfe168160e01b8152602081600481335afa8391816109e7575b506101f65760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420706f6f6c206164647265737360601b6044820152606490fd5b81516001600160a01b039081169116036109ac5780516040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156109a157839161096f575b506020828101516040516370a0823160e01b81523060048201529190829060249082906001600160a01b03165afa9081156106a857849161093d575b50811561093657815b82156108f857826000805160206119708339815191526103126102ab8896611084565b6102fe603760405180937f526563656976656420666c61736820616d6f756e743a2000000000000000000060208301526102ee8151809260208686019101610fd8565b8101036017810184520182610f97565b604051918291602083526020830190610ffb565b0390a18451600080516020611970833981519152906103bd9061033d906001600160a01b0316611890565b60208801516102fe9060319061035b906001600160a01b0316611890565b926040519384916702a37b5b2b7181d160c51b6020840152610387815180926020602887019101610fd8565b8201680102a37b5b2b7189d160bd1b60288201526103ae8251809360208785019101610fd8565b01036011810184520182610f97565b0390a160c085015160ff166108ab576000805160206119708339815191526104566040516103ea81610f7b565b601881527f546f6b656e302d3e546f6b656e4d69642d3e546f6b656e31000000000000000060208201525b6102fe602b60405180936a02234b932b1ba34b7b71d160ad1b60208301526104468151809260208686019101610fd8565b810103600b810184520182610f97565b0390a160c085015160ff1661083b5760e08501518551604087015160608801516104cf9462ffffff9461049e949193928616926001600160a01b03908116928116911661128e565b6101008701516040880151602089015160808a01519394909316926001600160a01b0390811692918116911661128e565b505b8015610832576104e4815b60043561103c565b821561082857836104f8845b60243561103c565b91806107c2575b505080610739575b5060c08401516024935060ff166106b357506020838101516040516370a0823160e01b815230600482015293849182906001600160a01b03165afa9182156106a857849261066d575b50906105626105679260243592611077565b611077565b60a082015181106106345761012082015160c08301516001600160a01b03909116927f546205492ce144edebd2cc39035c50dbd9aebfec90cbcae9c9ae2914d1e130f7929160ff1661062557602001516001600160a01b03165b604080516001600160a01b039290921682526020820192909252a2600080516020611970833981519152606060405160208152601f60208201527f4172626974726167652066696e6973686564207375636365737366756c6c79006040820152a180f35b516001600160a01b03166105c1565b60405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081c1c9bd99a5d607a1b6044820152606490fd5b91506020823d6020116106a0575b8161068860209383610f97565b8101031261069b57905190610562610550565b600080fd5b3d915061067b565b6040513d86823e3d90fd5b83516040516370a0823160e01b815230600482015293919250602091849182906001600160a01b03165afa9182156106a8578492610703575b50906105626106fe9260043592611077565b610567565b91506020823d602011610731575b8161071e60209383610f97565b8101031261069b579051906105626106ec565b3d9150610711565b60208581015160405163a9059cbb60e01b815233600482015260248101939093529194909185916044918391906001600160a01b03165af19283156107b757602493610788575b859350610507565b6107a99060203d6020116107b0575b6107a18183610f97565b81019061105f565b5038610780565b503d610797565b6040513d87823e3d90fd5b865160405163a9059cbb60e01b81523360048201526024810192909252909160209183916044918391906001600160a01b03165af180156107b757610809575b84906104ff565b6108219060203d6020116107b0576107a18183610f97565b5038610802565b836104f8816104f0565b6104e4836104dc565b60e08501516020860151604087015160608801516108a59462ffffff94610877949193928616926001600160a01b03908116928116911661128e565b6101008701516040880151885160808a01519394909316926001600160a01b0390811692918116911661128e565b506104d1565b6000805160206119708339815191526104566040516108c981610f7b565b601881527f546f6b656e312d3e546f6b656e4d69642d3e546f6b656e3000000000000000006020820152610415565b60405162461bcd60e51b8152602060048201526016602482015275139bc8199b185cda081b1bd85b881c9958d95a5d995960521b6044820152606490fd5b8091610288565b90506020813d602011610967575b8161095860209383610f97565b8101031261069b57513861027f565b3d915061094b565b90506020813d602011610999575b8161098a60209383610f97565b8101031261069b575138610243565b3d915061097d565b6040513d85823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152720496e76616c696420706f6f6c20746f6b656e3606c1b6044820152606490fd5b610a0a91925060203d602011610a11575b610a028183610f97565b810190610fb9565b90386101b5565b503d6109f8565b5080fd5b8280fd5b80fd5b5034610a205780600319360112610a2057546040516001600160a01b039091168152602090f35b5034610a2057610140366003190112610a2057610a65610ed6565b606435906001600160a01b0382168203610a1c576084359162ffffff83168303610da45760a43562ffffff81168103610da05760e43560ff81168103610d9c5761010435906001600160a01b0382168203610d985761012435926001600160a01b0384168403610d9457610ae360018060a01b038954163314610f10565b604051630dfe168160e01b8152966020886004816001600160a01b038b165afa978815610d89578998610d68575b5060405163d21220a760e01b8152956020876004816001600160a01b038c165afa968715610d5d578a97610d2c575b509162ffffff809260ff959460405199610b598b610f48565b60018060a01b038d168b5260018060a01b031660208b015260018060a01b031660408a015216606088015216608086015260c43560a08601521660c084015260018060a01b031660e083015260018060a01b0316610100820152336101208201526040519260018060a01b0316602084015260018060a01b03602082015116604084015260018060a01b03604082015116606084015262ffffff606082015116608084015262ffffff60808201511660a084015260a081015160c084015260ff60c08201511660e084015260018060a01b0360e08201511661010084015260018060a01b036101008201511661012084015261012060018060a01b0391015116610140830152610140825261016082019167ffffffffffffffff8311918184108317610d185760408490528491906001600160a01b0381163b15610a1c576312439b2f60e21b8552306101648301526024356101848301526044356101a483015260806101c483015284918290849061015f1990610cdb6101e4820182610ffb565b0301926001600160a01b03165af180156109a157610cf7578280f35b610d045760405238808280f35b634e487b7160e01b82526041600452602482fd5b634e487b7160e01b85526041600452602485fd5b60ff949391975062ffffff92610d51849260203d602011610a1157610a028183610f97565b98929495509250610b40565b6040513d8c823e3d90fd5b610d8291985060203d602011610a1157610a028183610f97565b9638610b11565b6040513d8b823e3d90fd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b5034610a2057602080600319360112610a1857610dc3610ed6565b82546001600160a01b0390811691610ddc338414610f10565b16604051916370a0823160e01b83523060048401528383602481855afa9283156107b7578593610ea7575b508215610e6c5760405163a9059cbb60e01b81526001600160a01b03919091166004820152602481019290925282908290604490829087905af180156109a157610e4f578280f35b81610e6592903d106107b0576107a18183610f97565b5038808280f35b60405162461bcd60e51b81526004810185905260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606490fd5b9092508381813d8311610ecf575b610ebf8183610f97565b81010312610da057519138610e07565b503d610eb5565b600435906001600160a01b038216820361069b57565b35906001600160a01b038216820361069b57565b359062ffffff8216820361069b57565b15610f1757565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b610140810190811067ffffffffffffffff821117610f6557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610f6557604052565b90601f8019910116810190811067ffffffffffffffff821117610f6557604052565b9081602091031261069b57516001600160a01b038116810361069b5790565b60005b838110610feb5750506000910152565b8181015183820152602001610fdb565b9060209161101481518092818552858086019101610fd8565b601f01601f1916010190565b67ffffffffffffffff8111610f6557601f01601f191660200190565b9190820180921161104957565b634e487b7160e01b600052601160045260246000fd5b9081602091031261069b5751801515810361069b5790565b9190820391821161104957565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000808210156111de575b506d04ee2d6d415b85acef8100000000808310156111cf575b50662386f26fc10000808310156111c0575b506305f5e100808310156111b1575b50612710808310156111a2575b506064821015611192575b600a80921015611188575b6001908160218186019561111d87611020565b9661112b6040519889610f97565b80885261113a601f1991611020565b01366020890137860101905b611152575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561118357919082611146565b61114b565b916001019161110a565b91906064600291049101916110ff565b600491939204910191386110f4565b600891939204910191386110e7565b601091939204910191386110d8565b602091939204910191386110c6565b6040935081049150386110ad565b600060443d1061124a57604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761124d57818401948551938411611255573d8501016020848701011161124d575061124a92910160200190610f97565b90565b949350505050565b50949350505050565b3d15611289573d9061126f82611020565b9161127d6040519384610f97565b82523d6000602084013e565b606090565b909192841561184b576040516370a0823160e01b81523060048201526020816024816001600160a01b0388165afa80156117b9578691600091611816575b50106117c55760405163095ea7b360e01b81526001600160a01b0383166004820152602481018690526020818060448101038160006001600160a01b0389165af180156117b95761179a575b506103e38581810204036110495760008051602061197083398151915261141961134187611084565b6102fe603b61134f88611890565b926113598a611890565b61136762ffffff8916611084565b906040519586936d029bbb0b81030ba3a32b6b83a1d160951b6020860152611399815180926020602e89019101610fd8565b8401600160fd1b602e8201526113b9825180936020602f85019101610fd8565b0163010169f160e51b602f8201526113db825180936020603385019101610fd8565b0166010143332b29d160cd1b6033820152611400825180936020603a85019101610fd8565b01602960f81b603a82015203601b810184520182610f97565b0390a161038442014211611049576040518061010081011067ffffffffffffffff61010083011117610f6557610100810160409081526001600160a01b039485168252858516602083810191825262ffffff948516838501908152306060860190815242610384016080870190815260a087019b8c52600060c0880181815260e08901828152975163414bf38960e01b815298518c1660048a015295518b16602489015292519097166044870152518816606486015294516084850152975160a48401525160c483015251841660e4820152949285926101049284929091166207a120f160009281611766575b5061168357600060033d11611675575b6308c379a0146115c5575b61152961125e565b50600080516020611970833981519152604051806115798160609060208152601e60208201527f53776170206661696c6564207769746820756e6b6e6f776e206572726f72000060408201520190565b0390a160405162461bcd60e51b815260206004820152601e60248201527f53776170206661696c6564207769746820756e6b6e6f776e206572726f7200006044820152606490fd5b0390fd5b6115cd6111ec565b806115d85750611521565b6115c190611655602d6040516c029bbb0b8103330b4b632b21d1609d1b908160208201526000805160206119708339815191526116388651926102fe868260208b0196611628818484018a610fd8565b810103600d810184520182610f97565b0390a1611628604051958693602085015251809285850190610fd8565b60405162461bcd60e51b8152602060048201529182916024830190610ffb565b600481803e5160e01c611516565b81156117215761171b600080516020611970833981519152916102fe60376116b36116ad87611084565b93611890565b9260405193849175029bbb0b81039bab1b1b2b9b9b33ab6171027baba1d160551b60208401526116ed815180926020603687019101610fd8565b8201600160fd1b603682015261170c8251809360208785019101610fd8565b01036017810184520182610f97565b0390a190565b60405162461bcd60e51b815260206004820152601b60248201527f5265636569766564207a65726f206f757470757420616d6f756e7400000000006044820152606490fd5b90926020823d602011611792575b8161178160209383610f97565b81010312610a205750519138611506565b3d9150611774565b6117b29060203d6020116107b0576107a18183610f97565b5038611318565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e7420746f6b656e2062616c616e636520666f72207360448201526207761760ec1b6064820152608490fd5b91506020823d602011611843575b8161183160209383610f97565b81010312610a205750859051386112cc565b3d9150611824565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6040516395d89b4160e01b60208083019182526004835292916118b281610f7b565b6000928392839251915afa906118c661125e565b9180611965575b6118f5575050662aa725a727aba760c91b604051916118eb83610f7b565b6007835282015290565b909182518301928181818601950312610a1c57818101519067ffffffffffffffff8211610da457019083603f83011215610a1c57808201519261193784611020565b946119456040519687610f97565b84865260408585010111610a20575090604061124a939285019101610fd8565b50815115156118cd56fe7cdb51e9dbbc205231228146c3246e7f914aa6d4a33170e43ecc8e3593481d1aa2646970667358221220352bd87b5860b1cfc5509b96c3fffc96b44a43f1aff054d64b8ae1efad86862664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0x85D8609D EQ PUSH2 0xA4A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA23 JUMPI PUSH4 0xE9CBAFB0 EQ PUSH2 0x49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA20 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA20 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0xA1C JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xA1C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xA1C JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH2 0xA1C JUMPI DUP2 PUSH2 0x140 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x537461727420756E69737761705633466C61736843616C6C6261636B00000000 PUSH1 0x40 DUP3 ADD MSTORE LOG1 SUB SLT PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0xEE DUP3 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x24 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST DUP3 MSTORE PUSH2 0x108 PUSH1 0x44 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x119 PUSH1 0x64 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x12A PUSH1 0x84 DUP3 ADD PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13B PUSH1 0xA4 DUP3 ADD PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC4 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE4 DUP2 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x69B JUMPI PUSH2 0x191 SWAP2 PUSH2 0x144 SWAP2 PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x173 PUSH2 0x104 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x185 PUSH2 0x124 DUP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 CALLER GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x9E7 JUMPI JUMPDEST POP PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x9AC JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A1 JUMPI DUP4 SWAP2 PUSH2 0x96F JUMPI JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP2 PUSH2 0x93D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x936 JUMPI DUP2 JUMPDEST DUP3 ISZERO PUSH2 0x8F8 JUMPI DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x312 PUSH2 0x2AB DUP9 SWAP7 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x37 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x526563656976656420666C61736820616D6F756E743A20000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2EE DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x17 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xFFB JUMP JUMPDEST SUB SWAP1 LOG1 DUP5 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x3BD SWAP1 PUSH2 0x33D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x2FE SWAP1 PUSH1 0x31 SWAP1 PUSH2 0x35B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH8 0x2A37B5B2B7181D1 PUSH1 0xC5 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x387 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x28 DUP8 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP3 ADD PUSH9 0x102A37B5B2B7189D1 PUSH1 0xBD SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH2 0x3AE DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD SUB PUSH1 0x11 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x8AB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x456 PUSH1 0x40 MLOAD PUSH2 0x3EA DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x546F6B656E302D3E546F6B656E4D69642D3E546F6B656E310000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0x2FE PUSH1 0x2B PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH11 0x2234B932B1BA34B7B71D1 PUSH1 0xAD SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x446 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xB DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xFF AND PUSH2 0x83B JUMPI PUSH1 0xE0 DUP6 ADD MLOAD DUP6 MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH2 0x4CF SWAP5 PUSH3 0xFFFFFF SWAP5 PUSH2 0x49E SWAP5 SWAP2 SWAP4 SWAP3 DUP7 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x80 DUP11 ADD MLOAD SWAP4 SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI PUSH2 0x4E4 DUP2 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x103C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x828 JUMPI DUP4 PUSH2 0x4F8 DUP5 JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x103C JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x7C2 JUMPI JUMPDEST POP POP DUP1 PUSH2 0x739 JUMPI JUMPDEST POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x24 SWAP4 POP PUSH1 0xFF AND PUSH2 0x6B3 JUMPI POP PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP3 PUSH2 0x66D JUMPI JUMPDEST POP SWAP1 PUSH2 0x562 PUSH2 0x567 SWAP3 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x1077 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH32 0x546205492CE144EDEBD2CC39035C50DBD9AEBFEC90CBCAE9C9AE2914D1E130F7 SWAP3 SWAP2 PUSH1 0xFF AND PUSH2 0x625 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4172626974726167652066696E6973686564207375636365737366756C6C7900 PUSH1 0x40 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD08195B9BDD59DA081C1C9BD99A5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6A0 JUMPI JUMPDEST DUP2 PUSH2 0x688 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x562 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP2 SWAP3 POP PUSH1 0x20 SWAP2 DUP5 SWAP2 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x6A8 JUMPI DUP5 SWAP3 PUSH2 0x703 JUMPI JUMPDEST POP SWAP1 PUSH2 0x562 PUSH2 0x6FE SWAP3 PUSH1 0x4 CALLDATALOAD SWAP3 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x731 JUMPI JUMPDEST DUP2 PUSH2 0x71E PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI SWAP1 MLOAD SWAP1 PUSH2 0x562 PUSH2 0x6EC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP5 SWAP1 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x24 SWAP4 PUSH2 0x788 JUMPI JUMPDEST DUP6 SWAP4 POP PUSH2 0x507 JUMP JUMPDEST PUSH2 0x7A9 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI JUMPDEST PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x105F JUMP JUMPDEST POP CODESIZE PUSH2 0x780 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x809 JUMPI JUMPDEST DUP5 SWAP1 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x821 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE PUSH2 0x802 JUMP JUMPDEST DUP4 PUSH2 0x4F8 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x4E4 DUP4 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH2 0x8A5 SWAP5 PUSH3 0xFFFFFF SWAP5 PUSH2 0x877 SWAP5 SWAP2 SWAP4 SWAP3 DUP7 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD DUP9 MLOAD PUSH1 0x80 DUP11 ADD MLOAD SWAP4 SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 DUP2 AND SWAP2 AND PUSH2 0x128E JUMP JUMPDEST POP PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x456 PUSH1 0x40 MLOAD PUSH2 0x8C9 DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x546F6B656E312D3E546F6B656E4D69642D3E546F6B656E300000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC8199B185CDA081B1BD85B881C9958D95A5D9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP2 PUSH2 0x288 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x967 JUMPI JUMPDEST DUP2 PUSH2 0x958 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI MLOAD CODESIZE PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x94B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x999 JUMPI JUMPDEST DUP2 PUSH2 0x98A PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x69B JUMPI MLOAD CODESIZE PUSH2 0x243 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C696420706F6F6C20746F6B656E3 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA0A SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI JUMPDEST PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1B5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9F8 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA20 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA20 JUMPI PUSH2 0xA65 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA1C JUMPI PUSH1 0x84 CALLDATALOAD SWAP2 PUSH3 0xFFFFFF DUP4 AND DUP4 SUB PUSH2 0xDA4 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 SUB PUSH2 0xDA0 JUMPI PUSH1 0xE4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0xD9C JUMPI PUSH2 0x104 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD98 JUMPI PUSH2 0x124 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH2 0xD94 JUMPI PUSH2 0xAE3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 SLOAD AND CALLER EQ PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 PUSH1 0x20 DUP9 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0xD89 JUMPI DUP10 SWAP9 PUSH2 0xD68 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 PUSH1 0x20 DUP8 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xD5D JUMPI DUP11 SWAP8 PUSH2 0xD2C JUMPI JUMPDEST POP SWAP2 PUSH3 0xFFFFFF DUP1 SWAP3 PUSH1 0xFF SWAP6 SWAP5 PUSH1 0x40 MLOAD SWAP10 PUSH2 0xB59 DUP12 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP14 AND DUP12 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE AND PUSH1 0x60 DUP9 ADD MSTORE AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP3 ADD MSTORE CALLER PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH3 0xFFFFFF PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x140 DUP3 MSTORE PUSH2 0x160 DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT SWAP2 DUP2 DUP5 LT DUP4 OR PUSH2 0xD18 JUMPI PUSH1 0x40 DUP5 SWAP1 MSTORE DUP5 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO PUSH2 0xA1C JUMPI PUSH4 0x12439B2F PUSH1 0xE2 SHL DUP6 MSTORE ADDRESS PUSH2 0x164 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x184 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x1A4 DUP4 ADD MSTORE PUSH1 0x80 PUSH2 0x1C4 DUP4 ADD MSTORE DUP5 SWAP2 DUP3 SWAP1 DUP5 SWAP1 PUSH2 0x15F NOT SWAP1 PUSH2 0xCDB PUSH2 0x1E4 DUP3 ADD DUP3 PUSH2 0xFFB JUMP JUMPDEST SUB ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0xCF7 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xD04 JUMPI PUSH1 0x40 MSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0xFF SWAP5 SWAP4 SWAP2 SWAP8 POP PUSH3 0xFFFFFF SWAP3 PUSH2 0xD51 DUP5 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST SWAP9 SWAP3 SWAP5 SWAP6 POP SWAP3 POP PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD82 SWAP2 SWAP9 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA11 JUMPI PUSH2 0xA02 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xA20 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA18 JUMPI PUSH2 0xDC3 PUSH2 0xED6 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH2 0xDDC CALLER DUP5 EQ PUSH2 0xF10 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE DUP4 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x7B7 JUMPI DUP6 SWAP4 PUSH2 0xEA7 JUMPI JUMPDEST POP DUP3 ISZERO PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH2 0xE4F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xE65 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7468696E6720746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xECF JUMPI JUMPDEST PUSH2 0xEBF DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xDA0 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0xE07 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP3 SUB PUSH2 0x69B JUMPI JUMP JUMPDEST ISZERO PUSH2 0xF17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF65 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69B JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x69B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xFEB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1014 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF65 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1049 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x69B JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1049 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x11DE JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x11CF JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x11C0 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x11B1 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x11A2 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x1192 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x1188 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x111D DUP8 PUSH2 0x1020 JUMP JUMPDEST SWAP7 PUSH2 0x112B PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0xF97 JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x113A PUSH1 0x1F NOT SWAP2 PUSH2 0x1020 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x1152 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x1183 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x110A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x124D JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1255 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x124D JUMPI POP PUSH2 0x124A SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1289 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x126F DUP3 PUSH2 0x1020 JUMP JUMPDEST SWAP2 PUSH2 0x127D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xF97 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 DUP5 ISZERO PUSH2 0x184B JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x17B9 JUMPI DUP7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1816 JUMPI JUMPDEST POP LT PUSH2 0x17C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x179A JUMPI JUMPDEST POP PUSH2 0x3E3 DUP6 DUP2 DUP2 MUL DIV SUB PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1419 PUSH2 0x1341 DUP8 PUSH2 0x1084 JUMP JUMPDEST PUSH2 0x2FE PUSH1 0x3B PUSH2 0x134F DUP9 PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH2 0x1359 DUP11 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x1367 PUSH3 0xFFFFFF DUP10 AND PUSH2 0x1084 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH14 0x29BBB0B81030BA3A32B6B83A1D1 PUSH1 0x95 SHL PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1399 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x2E DUP10 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP5 ADD PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x2E DUP3 ADD MSTORE PUSH2 0x13B9 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x2F DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH4 0x10169F1 PUSH1 0xE5 SHL PUSH1 0x2F DUP3 ADD MSTORE PUSH2 0x13DB DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x33 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH7 0x10143332B29D1 PUSH1 0xCD SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH2 0x1400 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 PUSH1 0x3A DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x3A DUP3 ADD MSTORE SUB PUSH1 0x1B DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x384 TIMESTAMP ADD TIMESTAMP GT PUSH2 0x1049 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x100 DUP4 ADD GT OR PUSH2 0xF65 JUMPI PUSH2 0x100 DUP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP3 MSTORE DUP6 DUP6 AND PUSH1 0x20 DUP4 DUP2 ADD SWAP2 DUP3 MSTORE PUSH3 0xFFFFFF SWAP5 DUP6 AND DUP4 DUP6 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH2 0x384 ADD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD SWAP12 DUP13 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0xE0 DUP10 ADD DUP3 DUP2 MSTORE SWAP8 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD DUP13 AND PUSH1 0x4 DUP11 ADD MSTORE SWAP6 MLOAD DUP12 AND PUSH1 0x24 DUP10 ADD MSTORE SWAP3 MLOAD SWAP1 SWAP8 AND PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP9 AND PUSH1 0x64 DUP7 ADD MSTORE SWAP5 MLOAD PUSH1 0x84 DUP6 ADD MSTORE SWAP8 MLOAD PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC4 DUP4 ADD MSTORE MLOAD DUP5 AND PUSH1 0xE4 DUP3 ADD MSTORE SWAP5 SWAP3 DUP6 SWAP3 PUSH2 0x104 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND PUSH3 0x7A120 CALL PUSH1 0x0 SWAP3 DUP2 PUSH2 0x1766 JUMPI JUMPDEST POP PUSH2 0x1683 JUMPI PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1675 JUMPI JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x15C5 JUMPI JUMPDEST PUSH2 0x1529 PUSH2 0x125E JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x1579 DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x53776170206661696C6564207769746820756E6B6E6F776E206572726F720000 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53776170206661696C6564207769746820756E6B6E6F776E206572726F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CD PUSH2 0x11EC JUMP JUMPDEST DUP1 PUSH2 0x15D8 JUMPI POP PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x15C1 SWAP1 PUSH2 0x1655 PUSH1 0x2D PUSH1 0x40 MLOAD PUSH13 0x29BBB0B8103330B4B632B21D1 PUSH1 0x9D SHL SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1638 DUP7 MLOAD SWAP3 PUSH2 0x2FE DUP7 DUP3 PUSH1 0x20 DUP12 ADD SWAP7 PUSH2 0x1628 DUP2 DUP5 DUP5 ADD DUP11 PUSH2 0xFD8 JUMP JUMPDEST DUP2 ADD SUB PUSH1 0xD DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1628 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 PUSH1 0x20 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x4 DUP2 DUP1 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR PUSH2 0x1516 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1721 JUMPI PUSH2 0x171B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1970 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x2FE PUSH1 0x37 PUSH2 0x16B3 PUSH2 0x16AD DUP8 PUSH2 0x1084 JUMP JUMPDEST SWAP4 PUSH2 0x1890 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH22 0x29BBB0B81039BAB1B1B2B9B9B33AB6171027BABA1D1 PUSH1 0x55 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x16ED DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x36 DUP8 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST DUP3 ADD PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH2 0x170C DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST ADD SUB PUSH1 0x17 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xF97 JUMP JUMPDEST SUB SWAP1 LOG1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265636569766564207A65726F206F757470757420616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1792 JUMPI JUMPDEST DUP2 PUSH2 0x1781 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA20 JUMPI POP MLOAD SWAP2 CODESIZE PUSH2 0x1506 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x17B2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x7B0 JUMPI PUSH2 0x7A1 DUP2 DUP4 PUSH2 0xF97 JUMP JUMPDEST POP CODESIZE PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520666F722073 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x77617 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1843 JUMPI JUMPDEST DUP2 PUSH2 0x1831 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xF97 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA20 JUMPI POP DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x12CC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 SWAP2 PUSH2 0x18B2 DUP2 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x18C6 PUSH2 0x125E JUMP JUMPDEST SWAP2 DUP1 PUSH2 0x1965 JUMPI JUMPDEST PUSH2 0x18F5 JUMPI POP POP PUSH7 0x2AA725A727ABA7 PUSH1 0xC9 SHL PUSH1 0x40 MLOAD SWAP2 PUSH2 0x18EB DUP4 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x7 DUP4 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 MLOAD DUP4 ADD SWAP3 DUP2 DUP2 DUP2 DUP7 ADD SWAP6 SUB SLT PUSH2 0xA1C JUMPI DUP2 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDA4 JUMPI ADD SWAP1 DUP4 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0xA1C JUMPI DUP1 DUP3 ADD MLOAD SWAP3 PUSH2 0x1937 DUP5 PUSH2 0x1020 JUMP JUMPDEST SWAP5 PUSH2 0x1945 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0xF97 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x40 DUP6 DUP6 ADD ADD GT PUSH2 0xA20 JUMPI POP SWAP1 PUSH1 0x40 PUSH2 0x124A SWAP4 SWAP3 DUP6 ADD SWAP2 ADD PUSH2 0xFD8 JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x18CD JUMP INVALID PUSH29 0xDB51E9DBBC205231228146C3246E7F914AA6D4A33170E43ECC8E359348 SAR BYTE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x2B 0xD8 PUSH28 0x5860B1CFC5509B96C3FFFC96B44A43F1AFF054D64B8AE1EFAD868626 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"705:7441:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;705:7441:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;705:7441:18;;;;;;;;;;;;;;;;2485:37;705:7441;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;2727:29:18;;705:7441;;;;2621:10;2727:29;;;;;;;705:7441;-1:-1:-1;2723:206:18;;705:7441;;-1:-1:-1;;;2888:30:18;;705:7441;;2888:30;;705:7441;;;;;;-1:-1:-1;;;705:7441:18;;;;;;2888:30;2723:206;705:7441;;-1:-1:-1;;;;;705:7441:18;;;;;2808:24;705:7441;;;;;;-1:-1:-1;;;3020:43:18;;3057:4;705:7441;3020:43;;705:7441;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;3020:43;;;;;;;;;;;2723:206;-1:-1:-1;705:7441:18;;;;;;;-1:-1:-1;;;3094:43:18;;3057:4;705:7441;3094:43;;705:7441;;;;;;;;;-1:-1:-1;;;;;705:7441:18;3094:43;;;;;;;;;;;2723:206;-1:-1:-1;3222:14:18;;;;:40;;3280:15;;705:7441;;3393:22;-1:-1:-1;;;;;;;;;;;705:7441:18;3393:22;;;;:::i;:::-;705:7441;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3346:71;;;705:7441;;-1:-1:-1;;;;;;;;;;;2485:37:18;705:7441;;3464:21;;-1:-1:-1;;;;;705:7441:18;3464:21;:::i;:::-;705:7441;;;;;;;;3500:21;;-1:-1:-1;;;;;705:7441:18;3500:21;:::i;:::-;705:7441;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3432:91;;;705:7441;;;;;;3573:76;;-1:-1:-1;;;;;;;;;;;705:7441:18;;;;;;:::i;:::-;;;;;;;;;3573:76;705:7441;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3538:113;;;705:7441;;;;;;;;;;;;;;;;;;;;;;3955:86;;705:7441;;3842:86;;705:7441;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;3842:86;:::i;:::-;705:7441;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;3955:86;:::i;:::-;;3748:590;3222:14;;;;4415:40;4423:31;;705:7441;;4415:40;:::i;:::-;4494:14;;;;:31;4486:40;4494:31;;705:7441;;4486:40;:::i;:::-;4540:14;;4536:90;;4494:31;4639:14;;;4635:90;;4494:31;-1:-1:-1;705:7441:18;;;;;;-1:-1:-1;705:7441:18;;4841:176;;-1:-1:-1;705:7441:18;;;;;;;-1:-1:-1;;;4876:43:18;;3057:4;705:7441;4876:43;;705:7441;;;;;;-1:-1:-1;;;;;705:7441:18;4876:43;;;;;;;;;;;4841:176;705:7441;;4876:56;:63;705:7441;;;4876:56;;:::i;:::-;:63;:::i;:::-;705:7441;;;;5035:23;;705:7441;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;5095:86;;;705:7441;;5128:44;;705:7441;;;-1:-1:-1;;;;;705:7441:18;5128:44;705:7441;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;;;;;5095:86;-1:-1:-1;;;;;;;;;;;705:7441:18;;;;;;;;;;;;;;;;5196:40;705:7441;;5128:44;705:7441;-1:-1:-1;;;;;705:7441:18;5128:44;;705:7441;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;4876:43;;;705:7441;4876:43;;705:7441;4876:43;;;;;;705:7441;4876:43;;;:::i;:::-;;;705:7441;;;;;;;4876:56;:43;;705:7441;;;;4876:43;;;-1:-1:-1;4876:43:18;;;705:7441;;;;;;;;;4841:176;705:7441;;;;-1:-1:-1;;;4954:43:18;;3057:4;705:7441;4954:43;;705:7441;;;;-1:-1:-1;705:7441:18;;;;;;-1:-1:-1;;;;;705:7441:18;4954:43;;;;;;;;;;;4841:176;705:7441;;4954:56;:63;705:7441;;;4954:56;;:::i;:63::-;4841:176;;4954:43;;;705:7441;4954:43;;705:7441;4954:43;;;;;;705:7441;4954:43;;;:::i;:::-;;;705:7441;;;;;;;4954:56;:43;;;;;-1:-1:-1;4954:43:18;;4635:90;705:7441;;;;;;;-1:-1:-1;;;4669:45:18;;2621:10;705:7441;4669:45;;705:7441;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;4669:45;;;;;;;705:7441;4669:45;;;4635:90;;;;;;4669:45;;;705:7441;4669:45;705:7441;4669:45;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;705:7441;;;;;;;;;4536:90;705:7441;;;;-1:-1:-1;;;4570:45:18;;2621:10;705:7441;4570:45;;705:7441;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;4570:45;;;;;;;;4536:90;;;;;4570:45;;;705:7441;4570:45;705:7441;4570:45;;;;;;;:::i;:::-;;;;;4494:31;;4486:40;4494:31;;;4423;4415:40;4423:31;;;3748:590;705:7441;;;;;;;;;;;;;;;;4241:86;;705:7441;;4128:86;;705:7441;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;4128:86;:::i;:::-;705:7441;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;4241:86;:::i;:::-;;3748:590;;3573:76;-1:-1:-1;;;;;;;;;;;705:7441:18;;;;;;:::i;:::-;;;;;;;;;3573:76;;705:7441;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;3222:40;;;;;3094:43;;;705:7441;3094:43;;705:7441;3094:43;;;;;;705:7441;3094:43;;;:::i;:::-;;;705:7441;;;;;3094:43;;;;;;-1:-1:-1;3094:43:18;;3020;;;705:7441;3020:43;;705:7441;3020:43;;;;;;705:7441;3020:43;;;:::i;:::-;;;705:7441;;;;;3020:43;;;;;;-1:-1:-1;3020:43:18;;;705:7441;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;2727:29;;;;;705:7441;2727:29;705:7441;2727:29;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;705:7441;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;;;;;;;-1:-1:-1;;705:7441:18;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;1301:41;705:7441;;;;;;;;1309:10;:19;1301:41;:::i;:::-;705:7441;;-1:-1:-1;;;1808:29:18;;705:7441;;;;;-1:-1:-1;;;;;705:7441:18;;1808:29;;;;;;;;;;;705:7441;-1:-1:-1;705:7441:18;;-1:-1:-1;;;1859:29:18;;705:7441;;;;;-1:-1:-1;;;;;705:7441:18;;1859:29;;;;;;;;;;;705:7441;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1770:400;;705:7441;;;;;;;;1770:400;;705:7441;;;1770:400;;705:7441;;;1770:400;;705:7441;;;;1770:400;;705:7441;;;1770:400;;705:7441;;;;;;;;1770:400;;705:7441;;;;;;;;1770:400;;705:7441;1309:10;705:7441;1770:400;;705:7441;;;;;;;;;;;2200:15;;705:7441;;;;;;;1770:400;;705:7441;;;;;;;;;;;;1770:400;;705:7441;;;;;;;;1770:400;;705:7441;;;;;;;;1770:400;;705:7441;;;;;;;1770:400;;705:7441;;;;;;;1770:400;;705:7441;;;;;;;;;;;;1770:400;;705:7441;;;;;;;;;;;;1770:400;;705:7441;;;;;;;;;;;;1770:400;;705:7441;;;;;;;2200:15;;705:7441;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;2225:65;;;;-1:-1:-1;;;2225:65:18;;2260:4;2225:65;;;705:7441;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2225:65:18;705:7441;;;;;;:::i;:::-;2225:65;;;-1:-1:-1;;;;;705:7441:18;2225:65;;;;;;;;705:7441;;;2225:65;705:7441;;;;2225:65;;705:7441;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;1859:29;705:7441;1859:29;;;;;705:7441;1859:29;;;;705:7441;1859:29;705:7441;1859:29;;;;;;;:::i;:::-;;;;;;;;;;;705:7441;;;;;;;;;1808:29;;;;;705:7441;1808:29;705:7441;1808:29;;;;;;;:::i;:::-;;;;;;705:7441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;705:7441:18;;;;1301:41;1309:10;:19;;1301:41;:::i;:::-;705:7441;;;;;;;8006:38;;8038:4;705:7441;8006:38;;705:7441;8006:38;;705:7441;8006:38;;;;;;;;;;;;;705:7441;8062:7;;;705:7441;;;;-1:-1:-1;;;8103:34:18;;-1:-1:-1;;;;;705:7441:18;;;;;8103:34;;705:7441;;;;;;;;;;;;;;;;;;8103:34;;;;;;;;705:7441;;;8103:34;;;;;;-1:-1:-1;8103:34:18;;;;;;:::i;:::-;;;;705:7441;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;8006:38;;;;;;;;;;;;;;;;;:::i;:::-;;;705:7441;;;;;8006:38;;;;;;;;;705:7441;;;;-1:-1:-1;;;;;705:7441:18;;;;;;:::o;:::-;;;-1:-1:-1;;;;;705:7441:18;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;705:7441:18;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;705:7441:18;;;;:::o;:::-;;;;;;;;-1:-1:-1;;705:7441:18;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;1308:632:5:-;1430:17;-1:-1:-1;29291:8:6;;29282:17;;;;29278:103;;1308:632:5;29407:8:6;;29398:17;;;;29394:103;;1308:632:5;29523:8:6;;29514:17;;;;29510:103;;1308:632:5;29639:7:6;;29630:16;;;;29626:100;;1308:632:5;29752:7:6;;29743:16;;;;29739:100;;1308:632:5;29856:16:6;29865:7;29856:16;;;29852:100;;1308:632:5;29978:7:6;29969:16;;;;29965:66;;1308:632:5;1450:1;705:7441:18;;1545:92:5;705:7441:18;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;1545:92:5;;;1650:247;1450:1;;;1650:247;1910:13;;;;1308:632;:::o;1650:247::-;-1:-1:-1;;705:7441:18;;;;-1:-1:-1;;;1704:111:5;;;;705:7441:18;1704:111:5;705:7441:18;1865:10:5;;;1861:21;;1650:247;;;;;1861:21;1877:5;;29965:66:6;705:7441:18;30015:1:6;705:7441:18;29965:66:6;;;29852:100;705:7441:18;;29865:7:6;29936:1;705:7441:18;;;;29852:100:6;;;29739;29823:1;705:7441:18;;;;;;29739:100:6;;;;29626;29710:1;705:7441:18;;;;;;29626:100:6;;;;29510:103;29596:2;705:7441:18;;;;;;29510:103:6;;;;29394;29480:2;705:7441:18;;;;;;29394:103:6;;;;29278;29364:2;;-1:-1:-1;705:7441:18;;;-1:-1:-1;29278:103:6;;;705:7441:18;;;;;;;;;-1:-1:-1;;705:7441:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;705:7441:18;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;705:7441:18;;;;:::o;:::-;;;:::o;5249:2300::-;;;;5500:12;;705:7441;;;;-1:-1:-1;;;5649:40:18;;5683:4;5649:40;;;705:7441;5649:40;705:7441;;;-1:-1:-1;;;;;705:7441:18;;5649:40;;;;;;;;5511:1;5649:40;;;5249:2300;5707:25;;705:7441;;;;-1:-1:-1;;;5846:50:18;;-1:-1:-1;;;;;705:7441:18;;5649:40;5846:50;;705:7441;;;;;;;5649:40;705:7441;;;;;5846:50;705:7441;5511:1;-1:-1:-1;;;;;705:7441:18;;5846:50;;;;;;;;5249:2300;6037:3;;705:7441;;;;;;;;-1:-1:-1;;;;;;;;;;;705:7441:18;6134:26;;;:::i;:::-;705:7441;;6167:18;;;:::i;:::-;6195:19;;;;:::i;:::-;6227:21;705:7441;;;6227:21;:::i;:::-;705:7441;;;;;;-1:-1:-1;;;5649:40:18;705:7441;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;;-1:-1:-1;;;705:7441:18;;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;-1:-1:-1;;;705:7441:18;;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;-1:-1:-1;;;705:7441:18;;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;:::i;:::-;6096:159;;;6611:10;6593:15;705:7441;6593:15;705:7441;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:7441:18;;;;;;;;5649:40;6392:426;;;705:7441;;;;;;;6392:426;;;705:7441;;;5683:4;6392:426;;;705:7441;;;6593:15;6611:10;705:7441;6392:426;;;705:7441;;;;6392:426;;705:7441;;;5511:1;6392:426;;;705:7441;;;;6392:426;;705:7441;;;;;-1:-1:-1;;;6278:550:18;;705:7441;;;;5649:40;6278:550;;705:7441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5649:40;705:7441;;;;;;5511:1;;705:7441;6320:6;6278:550;5511:1;;6278:550;;;5249:2300;-1:-1:-1;6274:1269:18;;5511:1;705:7441;;;;;6274:1269;;;;;;7333:210;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;705:7441:18;;7439:39;;;705:7441;;;;;;;;;;;;;;;;;;7439:39;;;;705:7441;;-1:-1:-1;;;7492:40:18;;705:7441;5649:40;7492;;705:7441;;;;;;;;;;;;;7492:40;;;;;6274:1269;7086:246;;:::i;:::-;;;;6274:1269;;;7086:246;705:7441;;7278:41;705:7441;;;-1:-1:-1;;;705:7441:18;;5649:40;705:7441;;;-1:-1:-1;;;;;;;;;;;705:7441:18;;;;;;;5649:40;705:7441;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7205:45;;;705:7441;;;7278:41;;;5649:40;7278:41;;705:7441;;;;;;;;;:::i;7278:41::-;705:7441;;-1:-1:-1;;;7264:57:18;;5649:40;;7264:57;;705:7441;;;;;;;;;:::i;:::-;5649:40;705:7441;;;;;;;;6274:1269;6879:13;;705:7441;;;-1:-1:-1;;;;;;;;;;;6989:27:18;705:7441;;7023:19;6989:27;;;:::i;:::-;7023:19;;:::i;:::-;705:7441;;;;;;-1:-1:-1;;;5649:40:18;705:7441;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;;-1:-1:-1;;;705:7441:18;;;;;;;;;5649:40;705:7441;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;6943:101;;;7058:16;:::o;705:7441::-;;;-1:-1:-1;;;705:7441:18;;5649:40;;705:7441;;;;;;;;;;;;;;;;6278:550;;;5649:40;6278:550;;5649:40;6278:550;;;;;;5649:40;6278:550;;;:::i;:::-;;;705:7441;;;;;;6278:550;;;;;;;-1:-1:-1;6278:550:18;;5846:50;;;5649:40;5846:50;5649:40;5846:50;;;;;;;:::i;:::-;;;;;;705:7441;;;5511:1;705:7441;;;;;;;;-1:-1:-1;;;705:7441:18;;5649:40;;705:7441;;;;;;;;;;;;;-1:-1:-1;;;705:7441:18;;;;;;;5649:40;;;;;;;;;;;;;;;;;:::i;:::-;;;705:7441;;;;;;;;5649:40;;;;;;-1:-1:-1;5649:40:18;;705:7441;;;-1:-1:-1;;;705:7441:18;;;;;;;;;;;;;;;;;;;;7621:303;705:7441;;-1:-1:-1;;;7756:35:18;;;;;;;;;;;;;705:7441;7756:35;:::i;:::-;;7739:53;;;;;;;;;;;;:::i;:::-;7806:26;;;;7621:303;7802:90;;705:7441;;-1:-1:-1;;;705:7441:18;;;;;;:::i;:::-;;;;;;;7621:303;:::o;7802:90::-;705:7441;;;;7855:26;;;;;;;;705:7441;;;;;7855:26;;;705:7441;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;7806:26::-;705:7441;;;7817:15;;7806:26;"},"methodIdentifiers":{"owner()":"8da5cb5b","startUniswapV3Flash(address,uint256,uint256,address,uint24,uint24,uint256,uint8,address,address)":"85d8609d","uniswapV3FlashCallback(uint256,uint256,bytes)":"e9cbafb0","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"ArbitrageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenMid\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee1\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"fee2\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"minProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sushiswapRouter\",\"type\":\"address\"}],\"name\":\"startUniswapV3Flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlashLoanArbitrageur.sol\":\"FlashLoanArbitrageur\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/FlashLoanArbitrageur.sol\":{\"keccak256\":\"0x50cdd3755a33b17fafe5286579ac83f940ff1734515fa06b110bed68edb763f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://278b51cf3abe1844e8c2caf587356670d7bbf4a1162146948b1ca0d3d68b9bc1\",\"dweb:/ipfs/QmSGLT9Q5z8nVkDnFKMWJna2nMCihXRQGh6ekiVGJUd8d6\"]}},\"version\":1}"},"IUniswapV3FlashCallback":{"abi":[{"inputs":[{"internalType":"uint256","name":"fee0","type":"uint256"},{"internalType":"uint256","name":"fee1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3FlashCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3FlashCallback(uint256,uint256,bytes)":"e9cbafb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3FlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlashLoanArbitrageur.sol\":\"IUniswapV3FlashCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/FlashLoanArbitrageur.sol\":{\"keccak256\":\"0x50cdd3755a33b17fafe5286579ac83f940ff1734515fa06b110bed68edb763f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://278b51cf3abe1844e8c2caf587356670d7bbf4a1162146948b1ca0d3d68b9bc1\",\"dweb:/ipfs/QmSGLT9Q5z8nVkDnFKMWJna2nMCihXRQGh6ekiVGJUd8d6\"]}},\"version\":1}"}}}}}